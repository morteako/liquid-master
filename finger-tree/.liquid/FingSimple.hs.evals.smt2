(set-option :auto-config false)
(set-option :model true)
(set-option :model.partial false)

(set-option :smt.mbqi false)

(define-sort Str () Int)
(declare-fun strLen (Str) Int)
(declare-fun subString (Str Int Int) Str)
(declare-fun concatString (Str Str) Str)
(define-sort Elt () Int)
(define-sort Set () (Array Elt Bool))
(define-fun smt_set_emp () Set ((as const Set) false))
(define-fun smt_set_mem ((x Elt) (s Set)) Bool (select s x))
(define-fun smt_set_add ((s Set) (x Elt)) Set (store s x true))
(define-fun smt_set_cup ((s1 Set) (s2 Set)) Set ((_ map or) s1 s2))
(define-fun smt_set_cap ((s1 Set) (s2 Set)) Set ((_ map and) s1 s2))
(define-fun smt_set_com ((s Set)) Set ((_ map not) s))
(define-fun smt_set_dif ((s1 Set) (s2 Set)) Set (smt_set_cap s1 (smt_set_com s2)))
(define-fun smt_set_sub ((s1 Set) (s2 Set)) Bool (= smt_set_emp (smt_set_dif s1 s2)))
(define-sort Map () (Array Elt Elt))
(define-fun smt_map_sel ((m Map) (k Elt)) Elt (select m k))
(define-fun smt_map_sto ((m Map) (k Elt) (v Elt)) Map (store m k v))
(define-fun smt_map_cup ((m1 Map) (m2 Map)) Map ((_ map (+ (Elt Elt) Elt)) m1 m2))
(define-fun smt_map_def ((v Elt)) Map ((as const (Map)) v))
(define-fun bool_to_int ((b Bool)) Int (ite b 1 0))
(define-fun Z3_OP_MUL ((x Int) (y Int)) Int (* x y))
(define-fun Z3_OP_DIV ((x Int) (y Int)) Int (div x y))
(declare-fun Main.b3 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792806511$35$$35$d3mf$35$$35$k_$35$$35$2139 () Int)
(declare-fun VV$35$$35$7571 () Int)
(declare-fun lit$36$$39$Three () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792806615$35$$35$d3nV () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$Main.Four$35$$35$1 () Int)
(declare-fun VV$35$$35$6497 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792806606$35$$35$d3nM$35$$35$k_$35$$35$4800 () Int)
(declare-fun GHC.Show.showParen () Int)
(declare-fun lq_tmp$36$x$35$$35$2809 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806611$35$$35$d3nR () Int)
(declare-fun GHC.Base.id () Int)
(declare-fun cast_as_int () Int)
(declare-fun b$35$$35$a2Pm () Int)
(declare-fun t$35$$35$a2Ne () Int)
(declare-fun fix$36$$36$krep_a3cj () Int)
(declare-fun GHC.List.init () Int)
(declare-fun VV$35$$35$F$35$$35$156 () Int)
(declare-fun lq_tmp$36$x$35$$35$3330 () Int)
(declare-fun lq_karg$36$c$35$$35$a2PD$35$$35$k_$35$$35$5019 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792806611$35$$35$d3nR$35$$35$k_$35$$35$5019 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806619$35$$35$d3nZ () Int)
(declare-fun VV$35$$35$6291 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792806602$35$$35$d3nI$35$$35$k_$35$$35$4800 () Int)
(declare-fun VV$35$$35$6930 () Int)
(declare-fun addrLen () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806556$35$$35$d3mY () Str)
(declare-fun ProofComb.Admit () Int)
(declare-fun a$35$$35$a2OY () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806646$35$$35$d3oq () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806660$35$$35$d3oE () Int)
(declare-fun fix$36$$36$cshowsPrec$35$$35$a394 () Int)
(declare-fun Main.$36$fShowNode () Int)
(declare-fun ds_d3iJ () Int)
(declare-fun papp5 () Int)
(declare-fun GHC.List.iterate () Int)
(declare-fun x_Tuple21 () Int)
(declare-fun lit$36$$39$Four () Str)
(declare-fun lq_tmp$36$x$35$$35$5754 () Int)
(declare-fun ds_d3gd () Int)
(declare-fun fix$36$$58$Main.main () Int)
(declare-fun b$35$$35$a2OZ () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792806619$35$$35$d3nZ$35$$35$k_$35$$35$5019 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806513$35$$35$d3mh () Int)
(declare-fun GHC.Classes.$61$$61$ () Int)
(declare-fun Main.to1 () Int)
(declare-fun GHC.Types.C$35$ () Int)
(declare-fun GHC.List.drop () Int)
(declare-fun Main.$36$tc$39$Four () Int)
(declare-fun is$36$Main.Deep () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806657$35$$35$d3oB () Int)
(declare-fun is$36$Main.One () Int)
(declare-fun ProofComb.withProof () Int)
(declare-fun Main.Node2 () Int)
(declare-fun lq_karg$36$sf$35$$35$a2PH$35$$35$k_$35$$35$4800 () Int)
(declare-fun f$35$$35$a2OU () Int)
(declare-fun lq_karg$36$Main.empty$35$$35$k_$35$$35$2743 () Int)
(declare-fun ds_d3fV () Int)
(declare-fun lq_karg$36$Main.empty$35$$35$k_$35$$35$3551 () Int)
(declare-fun VV$35$$35$6670 () Int)
(declare-fun ds_d3iQ () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792806635$35$$35$d3of$35$$35$k_$35$$35$5303 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792806636$35$$35$d3og$35$$35$k_$35$$35$5288 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806597$35$$35$d3nD () Int)
(declare-fun is$36$GHC.Types.$91$$93$ () Int)
(declare-fun Main.fingerTreeSize () Int)
(declare-fun VV$35$$35$6584 () Int)
(declare-fun Data.Foldable.length () Int)
(declare-fun x_Tuple33 () Int)
(declare-fun VV$35$$35$6382 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806652$35$$35$d3ow () Int)
(declare-fun lit$36$$39$Empty () Str)
(declare-fun is$36$GHC.Tuple.$40$$44$$41$ () Int)
(declare-fun ProofComb.$38$$38$$38$ () Int)
(declare-fun lq_tmp$36$x$35$$35$5467 () Int)
(declare-fun GHC.Types.LT () Int)
(declare-fun Main.a3 () Int)
(declare-fun lq_tmp$36$x$35$$35$4235 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806631$35$$35$d3ob () Int)
(declare-fun VV$35$$35$F$35$$35$221 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806635$35$$35$d3of () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792806610$35$$35$d3nQ$35$$35$k_$35$$35$4811 () Int)
(declare-fun is$36$Main.Two () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806650$35$$35$d3ou () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$Main.Three$35$$35$2 () Int)
(declare-fun VV$35$$35$5912 () Int)
(declare-fun GHC.List.replicate () Int)
(declare-fun GHC.List.zipWith () Int)
(declare-fun a$35$$35$a2Pu () Int)
(declare-fun lq_tmp$36$x$35$$35$3120 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806639$35$$35$d3oj () Int)
(declare-fun fix$36$$36$krep_a3cq () Int)
(declare-fun lq_tmp$36$x$35$$35$5104 () Int)
(declare-fun VV$35$$35$7725 () Int)
(declare-fun GHC.Classes.$62$$61$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806514$35$$35$d3mi () Int)
(declare-fun lq_karg$36$VV$35$$35$3177$35$$35$k_$35$$35$3178 () Int)
(declare-fun lq_karg$36$xs$35$$35$a2P2$35$$35$k_$35$$35$5303 () Int)
(declare-fun fix$36$$36$cshow$35$$35$a3a5 () Int)
(declare-fun lq_karg$36$VV$35$$35$2757$35$$35$k_$35$$35$2758 () Int)
(declare-fun Main.lem_add_to1 () Int)
(declare-fun VV$35$$35$6602 () Int)
(declare-fun lq_karg$36$b$35$$35$a2PC$35$$35$k_$35$$35$5019 () Int)
(declare-fun System.IO.print () Int)
(declare-fun GHC.Num.fromInteger () Int)
(declare-fun papp3 () Int)
(declare-fun ds_d3h5 () Int)
(declare-fun m$35$$35$a2Nj () Int)
(declare-fun ds_d3iL () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792806595$35$$35$d3nB$35$$35$k_$35$$35$4811 () Int)
(declare-fun Main.$36$tc$39$Node3 () Int)
(declare-fun lq_tmp$36$x$35$$35$5668 () Int)
(declare-fun Main.isEmpty () Int)
(declare-fun xs$35$$35$a2P2 () Int)
(declare-fun VV$35$$35$F$35$$35$73 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806538$35$$35$d3mG () Int)
(declare-fun lq_karg$36$VV$35$$35$3367$35$$35$k_$35$$35$3368 () Int)
(declare-fun GHC.List.span () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$44$$41$$35$$35$1 () Int)
(declare-fun ds_d3hu () Int)
(declare-fun lq_karg$36$d$35$$35$a2PE$35$$35$k_$35$$35$5019 () Int)
(declare-fun GHC.Classes.$62$ () Int)
(declare-fun VV$35$$35$6224 () Int)
(declare-fun ds_d3he () Int)
(declare-fun lq_karg$36$VV$35$$35$5287$35$$35$k_$35$$35$5288 () Int)
(declare-fun lit$36$Digit () Str)
(declare-fun lq_karg$36$VV$35$$35$2967$35$$35$k_$35$$35$2968 () Int)
(declare-fun lq_tmp$36$x$35$$35$5572 () Int)
(declare-fun GHC.Types.False () Bool)
(declare-fun lq_karg$36$a$35$$35$a2Pl$35$$35$k_$35$$35$2139 () Int)
(declare-fun VV$35$$35$F$35$$35$114 () Int)
(declare-fun GHC.List.scanr1 () Int)
(declare-fun VV$35$$35$F$35$$35$84 () Int)
(declare-fun Main.singleton () Int)
(declare-fun fix$36$$36$krep_a3cl () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792806599$35$$35$d3nF$35$$35$k_$35$$35$4800 () Int)
(declare-fun VV$35$$35$6851 () Int)
(declare-fun fix$36$$36$cshowsPrec$35$$35$a3aj () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$Main.Node3$35$$35$2 () Int)
(declare-fun a$35$$35$a2Px () Int)
(declare-fun lq_karg$36$Main.empty$35$$35$k_$35$$35$5288 () Int)
(declare-fun lq_karg$36$ds_d3i4$35$$35$k_$35$$35$5019 () Int)
(declare-fun lq_karg$36$Main.empty$35$$35$k_$35$$35$2921 () Int)
(declare-fun VV$35$$35$F$35$$35$157 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806624$35$$35$d3o4 () Int)
(declare-fun fix$36$$36$cshow$35$$35$a3aR () Int)
(declare-fun lq_tmp$36$x$35$$35$3313 () Int)
(declare-fun GHC.Types.$58$ () Int)
(declare-fun VV$35$$35$5923 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806525$35$$35$d3mt () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806620$35$$35$d3o0 () Int)
(declare-fun a$35$$35$a2OH () Int)
(declare-fun GHC.List.scanl () Int)
(declare-fun VV$35$$35$6829 () Int)
(declare-fun Control.Exception.Base.recSelError () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792806602$35$$35$d3nI$35$$35$k_$35$$35$5019 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792806621$35$$35$d3o1$35$$35$k_$35$$35$5019 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806627$35$$35$d3o7 () Int)
(declare-fun VV$35$$35$6704 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806547$35$$35$d3mP () Int)
(declare-fun Main.$36$tc$39$Deep () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806602$35$$35$d3nI () Int)
(declare-fun lit$36$c3 () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792806655$35$$35$d3oz () Int)
(declare-fun lq_karg$36$Main.empty$35$$35$k_$35$$35$2714 () Int)
(declare-fun ds_d3h2 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806628$35$$35$d3o8 () Int)
(declare-fun ds_d3iK () Int)
(declare-fun Main.$36$tc$39$Two () Int)
(declare-fun VV$35$$35$6726 () Int)
(declare-fun GHC.Tuple.$40$$44$$44$$41$ () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792806622$35$$35$d3o2$35$$35$k_$35$$35$5019 () Int)
(declare-fun papp4 () Int)
(declare-fun GHC.Types.Module () Int)
(declare-fun lq_tmp$36$x$35$$35$5412 () Int)
(declare-fun lq_tmp$36$x$35$$35$2855 () Int)
(declare-fun GHC.List.zip () Int)
(declare-fun GHC.Show.showCommaSpace () Int)
(declare-fun is$36$Main.Four () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806566$35$$35$d3n8 () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792806621$35$$35$d3o1 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806625$35$$35$d3o5 () Int)
(declare-fun Main.b2 () Int)
(declare-fun lq_karg$36$c$35$$35$a2PD$35$$35$k_$35$$35$4800 () Int)
(declare-fun b$35$$35$a2OK () Int)
(declare-fun lq_tmp$36$x$35$$35$5531 () Int)
(declare-fun GHC.Tuple.$40$$41$ () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792806620$35$$35$d3o0$35$$35$k_$35$$35$5019 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806622$35$$35$d3o2 () Int)
(declare-fun VV$35$$35$7864 () Int)
(declare-fun GHC.Types.I$35$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806623$35$$35$d3o3 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806626$35$$35$d3o6 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792806606$35$$35$d3nM$35$$35$k_$35$$35$5019 () Int)
(declare-fun Main.$60$$124$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806606$35$$35$d3nM () Int)
(declare-fun GHC.Num.$36$fNumInt () Int)
(declare-fun VV$35$$35$7587 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806523$35$$35$d3mr () Int)
(declare-fun GHC.CString.unpackCString$35$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806527$35$$35$d3mv () Int)
(declare-fun GHC.Types.KindRepFun () Int)
(declare-fun Main.$36$tc$39$One () Int)
(declare-fun lq_tmp$36$x$35$$35$5236 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806567$35$$35$d3n9 () Int)
(declare-fun ProofComb.$61$$60$$61$ () Int)
(declare-fun fix$36$$36$krep_a3ck () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806629$35$$35$d3o9 () Int)
(declare-fun lq_tmp$36$x$35$$35$5604 () Int)
(declare-fun is$36$Main.Node3 () Int)
(declare-fun ds_d3gX () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792806600$35$$35$d3nG$35$$35$k_$35$$35$4800 () Int)
(declare-fun VV$35$$35$6798 () Int)
(declare-fun c$35$$35$a2Pp () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806644$35$$35$d3oo () Int)
(declare-fun VV$35$$35$6680 () Int)
(declare-fun GHC.Types.KindRepTYPE () Int)
(declare-fun GHC.List.dropWhile () Int)
(declare-fun fix$36$$36$krep_a3cf () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792806598$35$$35$d3nE$35$$35$k_$35$$35$4811 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806617$35$$35$d3nX () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806558$35$$35$d3n0 () Int)
(declare-fun lq_tmp$36$x$35$$35$5266 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806559$35$$35$d3n1 () Int)
(declare-fun c$35$$35$a2P0 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806648$35$$35$d3os () Int)
(declare-fun Main.size () Int)
(declare-fun GHC.Real.C$58$Fractional () Int)
(declare-fun lit$36$c3$32$$61$$32$ () Str)
(declare-fun Main.lem_from () Int)
(declare-fun autolen () Int)
(declare-fun lit$36$Empty () Str)
(declare-fun VV$35$$35$6372 () Int)
(declare-fun VV$35$$35$6169 () Int)
(declare-fun lit$36$$125$ () Str)
(declare-fun lq_tmp$36$x$35$$35$3747 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792806513$35$$35$d3mh$35$$35$k_$35$$35$2139 () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$Main.Node2$35$$35$1 () Int)
(declare-fun VV$35$$35$6475 () Int)
(declare-fun GHC.Integer.Type.$36$WJn$35$ () Int)
(declare-fun GHC.Real.$94$ () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792806604$35$$35$d3nK$35$$35$k_$35$$35$4811 () Int)
(declare-fun lq_karg$36$m$35$$35$a2PG$35$$35$k_$35$$35$4800 () Int)
(declare-fun e$35$$35$a2PF () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806640$35$$35$d3ok () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806554$35$$35$d3mW () Str)
(declare-fun head () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806550$35$$35$d3mS () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806511$35$$35$d3mf () Int)
(declare-fun lq_tmp$36$x$35$$35$5659 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792806617$35$$35$d3nX$35$$35$k_$35$$35$5019 () Int)
(declare-fun lq_tmp$36$x$35$$35$5046 () Int)
(declare-fun lq_karg$36$Main.empty$35$$35$k_$35$$35$2968 () Int)
(declare-fun lq_karg$36$ds_d3hF$35$$35$k_$35$$35$4800 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792806596$35$$35$d3nC$35$$35$k_$35$$35$4800 () Int)
(declare-fun VV$35$$35$F$35$$35$196 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806599$35$$35$d3nF () Int)
(declare-fun a$35$$35$a2Ng () Int)
(declare-fun lq_karg$36$ds_d3i4$35$$35$k_$35$$35$4800 () Int)
(declare-fun is$36$GHC.Tuple.$40$$44$$44$$41$ () Int)
(declare-fun lit$36$Four$32$ () Str)
(declare-fun VV$35$$35$7598 () Int)
(declare-fun lit$36$test () Str)
(declare-fun lq_karg$36$Main.empty$35$$35$k_$35$$35$3225 () Int)
(declare-fun GHC.Types.$36$WKindRepTYPE () Int)
(declare-fun VV$35$$35$6278 () Int)
(declare-fun VV$35$$35$7783 () Int)
(declare-fun Main.$36$fShowDigit () Int)
(declare-fun VV$35$$35$F$35$$35$184 () Int)
(declare-fun Main.$36$fShowFingerTree () Int)
(declare-fun lq_tmp$36$x$35$$35$2835 () Int)
(declare-fun VV$35$$35$F$35$$35$148 () Int)
(declare-fun lq_tmp$36$x$35$$35$4022 () Int)
(declare-fun GHC.Show.showsPrec () Int)
(declare-fun GHC.TopHandler.runMainIO () Int)
(declare-fun GHC.Integer.Type.Jn$35$ () Int)
(declare-fun GHC.Show.$36$dmshowList () Int)
(declare-fun VV$35$$35$F$35$$35$85 () Int)
(declare-fun fix$36$$36$krep_a3cm () Int)
(declare-fun VV$35$$35$F$35$$35$216 () Int)
(declare-fun GHC.Classes.compare () Int)
(declare-fun lq_karg$36$a$35$$35$a2Px$35$$35$k_$35$$35$4811 () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$Main.Node3$35$$35$3 () Int)
(declare-fun VV$35$$35$7905 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806524$35$$35$d3ms () Int)
(declare-fun VV$35$$35$6739 () Int)
(declare-fun ProofComb.$42$$42$$42$ () Int)
(declare-fun VV$35$$35$7532 () Int)
(declare-fun lq_karg$36$d$35$$35$a2PE$35$$35$k_$35$$35$4800 () Int)
(declare-fun is$36$GHC.Types.$58$ () Int)
(declare-fun lq_karg$36$b$35$$35$a2PC$35$$35$k_$35$$35$4800 () Int)
(declare-fun papp2 () Int)
(declare-fun Main.Four () Int)
(declare-fun ds_d3iM () Int)
(declare-fun Main.$36$tc$39$Node2 () Int)
(declare-fun VV$35$$35$F$35$$35$72 () Int)
(declare-fun VV$35$$35$F$35$$35$50 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792806599$35$$35$d3nF$35$$35$k_$35$$35$5019 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806637$35$$35$d3oh () Int)
(declare-fun lit$36$a2$32$$61$$32$ () Str)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792806510$35$$35$d3me$35$$35$k_$35$$35$2139 () Int)
(declare-fun lit$36$Main () Str)
(declare-fun GHC.Stack.Types.EmptyCallStack () Int)
(declare-fun lq_karg$36$Main.empty$35$$35$k_$35$$35$3462 () Int)
(declare-fun GHC.Types.krep$36$$42$Arr$42$ () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792806614$35$$35$d3nU$35$$35$k_$35$$35$5019 () Int)
(declare-fun is$36$Main.Empty () Int)
(declare-fun lit$36$$39$One () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792806614$35$$35$d3nU () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806555$35$$35$d3mX () Int)
(declare-fun fix$36$$36$cshow$35$$35$a38P () Int)
(declare-fun x$35$$35$a2P5 () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$Main.Four$35$$35$3 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792806612$35$$35$d3nS$35$$35$k_$35$$35$5019 () Int)
(declare-fun GHC.List.reverse () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792806609$35$$35$d3nP$35$$35$k_$35$$35$4800 () Int)
(declare-fun GHC.Integer.Type.$36$WJp$35$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806616$35$$35$d3nW () Int)
(declare-fun b$35$$35$a2Po () Int)
(declare-fun lq_tmp$36$x$35$$35$2605 () Int)
(declare-fun lit$36$main () Str)
(declare-fun a$35$$35$a2Pl () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792806603$35$$35$d3nJ$35$$35$k_$35$$35$4800 () Int)
(declare-fun VV$35$$35$6811 () Int)
(declare-fun Control.Exception.Base.patError () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792806605$35$$35$d3nL$35$$35$k_$35$$35$4800 () Int)
(declare-fun GHC.List.filter () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792806512$35$$35$d3mg$35$$35$k_$35$$35$2139 () Int)
(declare-fun fix$36$$36$krep_a3ch () Int)
(declare-fun fromJust () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792806610$35$$35$d3nQ$35$$35$k_$35$$35$5019 () Int)
(declare-fun lq_tmp$36$x$35$$35$3129 () Int)
(declare-fun GHC.Types.KindRepTyConApp () Int)
(declare-fun VV$35$$35$F$35$$35$154 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806557$35$$35$d3mZ () Int)
(declare-fun ProofComb.$63$ () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792806618$35$$35$d3nY$35$$35$k_$35$$35$5019 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806610$35$$35$d3nQ () Int)
(declare-fun GHC.List.cycle () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792806616$35$$35$d3nW$35$$35$k_$35$$35$5019 () Int)
(declare-fun lit$36$$39$Two () Str)
(declare-fun GHC.List.$33$$33$ () Int)
(declare-fun VV$35$$35$6338 () Int)
(declare-fun ds_d3i8 () Int)
(declare-fun GHC.Show.$36$fShowChar () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806645$35$$35$d3op () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806612$35$$35$d3nS () Int)
(declare-fun lit$36$C$58$$92$Users$92$MortenAske$92$Dropbox$92$master$92$finger$45$tree$92$FingSimple.hs$58$$40$106$44$1$41$$45$$40$108$44$40$41$$124$function$32$consDigit () Str)
(declare-fun VV$35$$35$6761 () Int)
(declare-fun GHC.List.tail () Int)
(declare-fun lit$36$a2 () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792806647$35$$35$d3or () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806661$35$$35$d3oF () Int)
(declare-fun lq_tmp$36$x$35$$35$5051 () Int)
(declare-fun VV$35$$35$F$35$$35$132 () Int)
(declare-fun VV$35$$35$F$35$$35$8 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792806607$35$$35$d3nN$35$$35$k_$35$$35$4800 () Int)
(declare-fun lq_tmp$36$x$35$$35$5499 () Int)
(declare-fun papp7 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806531$35$$35$d3mz () Str)
(declare-fun xs$35$$35$a2P6 () Int)
(declare-fun GHC.Classes.$47$$61$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806618$35$$35$d3nY () Int)
(declare-fun VV$35$$35$6528 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806596$35$$35$d3nC () Int)
(declare-fun lit$36$Two$32$ () Str)
(declare-fun VV$35$$35$F$35$$35$124 () Int)
(declare-fun t$35$$35$a2Pv () Int)
(declare-fun VV$35$$35$6942 () Int)
(declare-fun Main.Two () Int)
(declare-fun Main.Deep () Int)
(declare-fun lq_karg$36$e$35$$35$a2PF$35$$35$k_$35$$35$4811 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806565$35$$35$d3n7 () Int)
(declare-fun lq_karg$36$m$35$$35$a2PG$35$$35$k_$35$$35$5019 () Int)
(declare-fun lq_tmp$36$x$35$$35$3746 () Int)
(declare-fun VV$35$$35$F$35$$35$205 () Int)
(declare-fun Main.$36$tcFingerTree () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806561$35$$35$d3n3 () Int)
(declare-fun lq_tmp$36$x$35$$35$2149 () Int)
(declare-fun GHC.List.break () Int)
(declare-fun GHC.Types.True () Bool)
(declare-fun b$35$$35$a2OW () Int)
(declare-fun lq_karg$36$Main.empty$35$$35$k_$35$$35$4811 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806549$35$$35$d3mR () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792806596$35$$35$d3nC$35$$35$k_$35$$35$5019 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806608$35$$35$d3nO () Int)
(declare-fun lq_karg$36$ds_d3hF$35$$35$k_$35$$35$5019 () Int)
(declare-fun Main.digitS () Int)
(declare-fun GHC.Types.$91$$93$ () Int)
(declare-fun lq_tmp$36$x$35$$35$2826 () Int)
(declare-fun lq_karg$36$Main.empty$35$$35$k_$35$$35$3052 () Int)
(declare-fun GHC.List.splitAt () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792806600$35$$35$d3nG$35$$35$k_$35$$35$5019 () Int)
(declare-fun lq_tmp$36$x$35$$35$5627 () Int)
(declare-fun is$36$Main.Node2 () Int)
(declare-fun ds_d3gY () Int)
(declare-fun GHC.Base.$43$$43$ () Int)
(declare-fun GHC.Show.$36$dmshow () Int)
(declare-fun Main.One () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806600$35$$35$d3nG () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806564$35$$35$d3n6 () Int)
(declare-fun Main.$36$tcDigit () Int)
(declare-fun GHC.Real.$58$$37$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806560$35$$35$d3n2 () Str)
(declare-fun fix$36$$36$cshowsPrec$35$$35$a37g () Int)
(declare-fun VV$35$$35$6348 () Int)
(declare-fun fix$36$$36$krep_a3cg () Int)
(declare-fun VV$35$$35$5936 () Int)
(declare-fun GHC.Tuple.$40$$44$$41$ () Int)
(declare-fun lq_tmp$36$x$35$$35$3522 () Int)
(declare-fun lit$36$Deep$32$ () Str)
(declare-fun lit$36$b3$32$$61$$32$ () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792806541$35$$35$d3mJ () Int)
(declare-fun lit$36$One$32$ () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792806545$35$$35$d3mN () Int)
(declare-fun VV$35$$35$7853 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792806606$35$$35$d3nM$35$$35$k_$35$$35$4811 () Int)
(declare-fun VV$35$$35$F$35$$35$219 () Int)
(declare-fun VV$35$$35$7874 () Bool)
(declare-fun lq_karg$36$Main.empty$35$$35$k_$35$$35$2874 () Int)
(declare-fun lq_karg$36$VV$35$$35$2920$35$$35$k_$35$$35$2921 () Int)
(declare-fun fldList () Int)
(declare-fun GHC.Classes.$38$$38$ () Int)
(declare-fun lq_karg$36$VV$35$$35$3224$35$$35$k_$35$$35$3225 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806537$35$$35$d3mF () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806642$35$$35$d3om () Int)
(declare-fun fix$36$$36$krep_a3cr () Int)
(declare-fun lq_karg$36$VV$35$$35$3298$35$$35$k_$35$$35$3299 () Int)
(declare-fun lq_karg$36$VV$35$$35$3414$35$$35$k_$35$$35$3415 () Int)
(declare-fun lit$36$Node2$32$$123$ () Str)
(declare-fun lq_karg$36$Main.empty$35$$35$k_$35$$35$3299 () Int)
(declare-fun VV$35$$35$5898 () Int)
(declare-fun lit$36$b3 () Str)
(declare-fun GHC.Base.Nothing () Int)
(declare-fun lq_karg$36$Main.empty$35$$35$k_$35$$35$2139 () Int)
(declare-fun lq_karg$36$VV$35$$35$2794$35$$35$k_$35$$35$2795 () Int)
(declare-fun VV$35$$35$6965 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806552$35$$35$d3mU () Str)
(declare-fun fix$36$$36$dShow_a375 () Int)
(declare-fun a$35$$35$a2OQ () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$3 () Int)
(declare-fun lq_karg$36$VV$35$$35$3088$35$$35$k_$35$$35$3089 () Int)
(declare-fun VV$35$$35$6864 () Int)
(declare-fun GHC.Base.$36$fMonadIO () Int)
(declare-fun d$35$$35$a2OT () Int)
(declare-fun lq_tmp$36$x$35$$35$5691 () Int)
(declare-fun lq_karg$36$VV$35$$35$2138$35$$35$k_$35$$35$2139 () Int)
(declare-fun VV$35$$35$F$35$$35$165 () Int)
(declare-fun c$35$$35$a2PD () Int)
(declare-fun lq_karg$36$VV$35$$35$5018$35$$35$k_$35$$35$5019 () Int)
(declare-fun VV$35$$35$F$35$$35$138 () Int)
(declare-fun VV$35$$35$7663 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806539$35$$35$d3mH () Int)
(declare-fun Main.$36$tc$39$Empty () Int)
(declare-fun b$35$$35$a2OR () Int)
(declare-fun VV$35$$35$6435 () Int)
(declare-fun ds_d3iR () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792806602$35$$35$d3nI$35$$35$k_$35$$35$4811 () Int)
(declare-fun fix$36$$36$cshowList$35$$35$a3aa () Int)
(declare-fun lq_karg$36$VV$35$$35$2742$35$$35$k_$35$$35$2743 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806533$35$$35$d3mB () Str)
(declare-fun lq_tmp$36$x$35$$35$5042 () Int)
(declare-fun GHC.Types.GT () Int)
(declare-fun GHC.Classes.C$58$IP () Int)
(declare-fun c$35$$35$a2OS () Int)
(declare-fun GHC.Classes.$124$$124$ () Int)
(declare-fun r$35$$35$a2Nk () Int)
(declare-fun ProofComb.$61$$61$$61$ () Int)
(declare-fun lq_karg$36$VV$35$$35$3014$35$$35$k_$35$$35$3015 () Int)
(declare-fun lq_karg$36$Main.empty$35$$35$k_$35$$35$2795 () Int)
(declare-fun VV$35$$35$F$35$$35$64 () Int)
(declare-fun lq_tmp$36$x$35$$35$5718 () Int)
(declare-fun Data.Either.Left () Int)
(declare-fun GHC.List.last () Int)
(declare-fun lq_karg$36$VV$35$$35$4810$35$$35$k_$35$$35$4811 () Int)
(declare-fun lq_tmp$36$x$35$$35$5097 () Int)
(declare-fun GHC.Classes.$36$fOrdInt () Int)
(declare-fun lq_karg$36$VV$35$$35$5302$35$$35$k_$35$$35$5303 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806535$35$$35$d3mD () Int)
(declare-fun ProofComb.trivial () Int)
(declare-fun lq_karg$36$VV$35$$35$3550$35$$35$k_$35$$35$3551 () Int)
(declare-fun VV$35$$35$F$35$$35$147 () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$Main.Three$35$$35$1 () Int)
(declare-fun VV$35$$35$7694 () Int)
(declare-fun GHC.Integer.Type.S$35$ () Int)
(declare-fun GHC.List.scanl1 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806654$35$$35$d3oy () Int)
(declare-fun VV$35$$35$6955 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792806603$35$$35$d3nJ$35$$35$k_$35$$35$5019 () Int)
(declare-fun Data.Either.Right () Int)
(declare-fun VV$35$$35$F$35$$35$111 () Int)
(declare-fun Main.lem_add () Int)
(declare-fun fix$36$$36$krep_a3ci () Int)
(declare-fun Main.Single () Int)
(declare-fun Main.$36$tc$39$Three () Int)
(declare-fun ProofComb.$61$$62$$61$ () Int)
(declare-fun VV$35$$35$F$35$$35$155 () Int)
(declare-fun VV$35$$35$6854 () Int)
(declare-fun VV$35$$35$F$35$$35$212 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792806610$35$$35$d3nQ$35$$35$k_$35$$35$4800 () Int)
(declare-fun a$35$$35$a2OJ () Int)
(declare-fun Main.digitSize () Int)
(declare-fun lq_tmp$36$x$35$$35$5386 () Int)
(declare-fun lit$36$a3 () Str)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792806609$35$$35$d3nP$35$$35$k_$35$$35$5019 () Int)
(declare-fun GHC.Num.$45$ () Int)
(declare-fun VV$35$$35$F$35$$35$108 () Int)
(declare-fun len () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806526$35$$35$d3mu () Int)
(declare-fun papp6 () Int)
(declare-fun lit$36$Single$32$ () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792806605$35$$35$d3nL () Int)
(declare-fun VV$35$$35$F$35$$35$133 () Int)
(declare-fun ds_d3h0 () Int)
(declare-fun ds_d3iI () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806601$35$$35$d3nH () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792806607$35$$35$d3nN$35$$35$k_$35$$35$5019 () Int)
(declare-fun GHC.Base.. () Int)
(declare-fun x_Tuple22 () Int)
(declare-fun lq_karg$36$Main.empty$35$$35$k_$35$$35$3089 () Int)
(declare-fun lq_tmp$36$x$35$$35$5476 () Int)
(declare-fun VV$35$$35$F$35$$35$54 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792806605$35$$35$d3nL$35$$35$k_$35$$35$5019 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792806509$35$$35$d3md$35$$35$k_$35$$35$2139 () Str)
(declare-fun lq_tmp$36$x$35$$35$5049 () Int)
(declare-fun lq_karg$36$sf$35$$35$a2PH$35$$35$k_$35$$35$4811 () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$Main.Four$35$$35$2 () Int)
(declare-fun lq_tmp$36$x$35$$35$5508 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806607$35$$35$d3nN () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806609$35$$35$d3nP () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806603$35$$35$d3nJ () Int)
(declare-fun ds_d3ii () Int)
(declare-fun isAdmit () Int)
(declare-fun VV$35$$35$6221 () Int)
(declare-fun VV$35$$35$6316 () Int)
(declare-fun lq_karg$36$VV$35$$35$2873$35$$35$k_$35$$35$2874 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806510$35$$35$d3me () Int)
(declare-fun lq_tmp$36$x$35$$35$5563 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792806595$35$$35$d3nB$35$$35$k_$35$$35$4800 () Int)
(declare-fun GHC.Types.KindRepTypeLitS () Int)
(declare-fun GHC.Real.$36$W$58$$37$ () Int)
(declare-fun ds_d3gZ () Int)
(declare-fun lit$36$FingerTree () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792806512$35$$35$d3mg () Int)
(declare-fun VV$35$$35$6369 () Int)
(declare-fun fix$36$$36$krep_a3cd () Int)
(declare-fun lq_karg$36$a$35$$35$a2Px$35$$35$k_$35$$35$5019 () Int)
(declare-fun VV$35$$35$7915 () Int)
(declare-fun VV$35$$35$F$35$$35$158 () Int)
(declare-fun isJust () Int)
(declare-fun lq_karg$36$Main.empty$35$$35$k_$35$$35$3015 () Int)
(declare-fun lq_karg$36$VV$35$$35$4799$35$$35$k_$35$$35$4800 () Int)
(declare-fun fix$36$$36$cshowList$35$$35$a3aW () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806518$35$$35$d3mm () Int)
(declare-fun b$35$$35$a2PC () Int)
(declare-fun lq_tmp$36$x$35$$35$3493 () Int)
(declare-fun ds_d3i4 () Int)
(declare-fun lq_karg$36$VV$35$$35$2713$35$$35$k_$35$$35$2714 () Int)
(declare-fun lq_tmp$36$x$35$$35$2681 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806534$35$$35$d3mC () Int)
(declare-fun VV$35$$35$F$35$$35$105 () Int)
(declare-fun d$35$$35$a2PE () Int)
(declare-fun lit$36$a3$32$$61$$32$ () Str)
(declare-fun VV$35$$35$F$35$$35$163 () Int)
(declare-fun f$35$$35$a2Pw () Int)
(declare-fun VV$35$$35$6729 () Int)
(declare-fun VV$35$$35$F$35$$35$206 () Str)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792806599$35$$35$d3nF$35$$35$k_$35$$35$4811 () Int)
(declare-fun fix$36$$36$cshowList$35$$35$a38V () Int)
(declare-fun GHC.List.takeWhile () Int)
(declare-fun GHC.Types.TrNameD () Int)
(declare-fun VV$35$$35$6268 () Int)
(declare-fun VV$35$$35$F$35$$35$59 () Int)
(declare-fun VV$35$$35$6452 () Int)
(declare-fun VV$35$$35$6281 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806563$35$$35$d3n5 () Int)
(declare-fun GHC.Types.KindRepVar () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806630$35$$35$d3oa () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806562$35$$35$d3n4 () Str)
(declare-fun VV$35$$35$5880 () Int)
(declare-fun Main.$36$trModule () Int)
(declare-fun lit$36$Node3$32$$123$ () Str)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792806635$35$$35$d3of$35$$35$k_$35$$35$5288 () Int)
(declare-fun VV$35$$35$6416 () Int)
(declare-fun GHC.Types.KindRepTypeLitD () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$Main.Two$35$$35$2 () Int)
(declare-fun lq_tmp$36$x$35$$35$5700 () Int)
(declare-fun f$35$$35$a2OG () Int)
(declare-fun x_Tuple31 () Int)
(declare-fun lq_tmp$36$x$35$$35$5403 () Int)
(declare-fun VV$35$$35$7794 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806508$35$$35$d3mc () Int)
(declare-fun GHC.Integer.Type.Jp$35$ () Int)
(declare-fun VV$35$$35$F$35$$35$65 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806651$35$$35$d3ov () Int)
(declare-fun VV$35$$35$F$35$$35$146 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806632$35$$35$d3oc () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806636$35$$35$d3og () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806656$35$$35$d3oA () Int)
(declare-fun fix$36$$36$krep_a3cc () Int)
(declare-fun VV$35$$35$5932 () Int)
(declare-fun GHC.IO.Exception.IOError () Int)
(declare-fun lq_karg$36$c$35$$35$a2PD$35$$35$k_$35$$35$4811 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806634$35$$35$d3oe () Int)
(declare-fun GHC.List.take () Int)
(declare-fun lit$36$Node () Str)
(declare-fun lq_tmp$36$x$35$$35$3339 () Int)
(declare-fun GHC.Stack.Types.PushCallStack () Int)
(declare-fun prop () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792806636$35$$35$d3og$35$$35$k_$35$$35$5303 () Int)
(declare-fun GHC.Show.$36$fShowInt () Int)
(declare-fun VV$35$$35$5877 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806543$35$$35$d3mL () Int)
(declare-fun lit$36$b2 () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792806638$35$$35$d3oi () Int)
(declare-fun ds_d3i3 () Int)
(declare-fun lq_karg$36$Main.empty$35$$35$k_$35$$35$2758 () Int)
(declare-fun GHC.Classes.$60$$61$ () Int)
(declare-fun GHC.Types.TrNameS () Int)
(declare-fun VV$35$$35$F$35$$35$120 () Int)
(declare-fun GHC.Enum.C$58$Bounded () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$2 () Int)
(declare-fun a$35$$35$a2P7 () Int)
(declare-fun is$36$Main.Three () Int)
(declare-fun GHC.Base.map () Int)
(declare-fun VV$35$$35$F$35$$35$164 () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$2 () Int)
(declare-fun VV$35$$35$F$35$$35$139 () Int)
(declare-fun GHC.Show.C$58$Show () Int)
(declare-fun GHC.Base.$36$ () Int)
(declare-fun Main.c3 () Int)
(declare-fun b$35$$35$a2P9 () Int)
(declare-fun papp1 () Int)
(declare-fun ds_d3iN () Int)
(declare-fun lq_karg$36$Main.empty$35$$35$k_$35$$35$5303 () Int)
(declare-fun GHC.Classes.max () Int)
(declare-fun lq_karg$36$Main.empty$35$$35$k_$35$$35$3262 () Int)
(declare-fun GHC.Show.showSpace () Int)
(declare-fun c$35$$35$a2OO () Int)
(declare-fun ProofComb.$61$$61$$33$ () Int)
(declare-fun ProofComb.impossible () Int)
(declare-fun lq_karg$36$e$35$$35$a2PF$35$$35$k_$35$$35$5019 () Int)
(declare-fun VV$35$$35$F$35$$35$71 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792806604$35$$35$d3nK$35$$35$k_$35$$35$4800 () Int)
(declare-fun Main.empty () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792806600$35$$35$d3nG$35$$35$k_$35$$35$4811 () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$44$$41$$35$$35$3 () Int)
(declare-fun VV$35$$35$F$35$$35$53 () Int)
(declare-fun l$35$$35$a2Ni () Int)
(declare-fun lq_karg$36$m$35$$35$a2PG$35$$35$k_$35$$35$4811 () Int)
(declare-fun x$35$$35$a2P3 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792806598$35$$35$d3nE$35$$35$k_$35$$35$4800 () Int)
(declare-fun b$35$$35$a2ON () Int)
(declare-fun lq_karg$36$Main.empty$35$$35$k_$35$$35$5019 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792806613$35$$35$d3nT$35$$35$k_$35$$35$5019 () Int)
(declare-fun VV$35$$35$7799 () Int)
(declare-fun GHC.Classes.$60$ () Int)
(declare-fun tail () Int)
(declare-fun lq_karg$36$ds_d3hF$35$$35$k_$35$$35$4811 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792806596$35$$35$d3nC$35$$35$k_$35$$35$4811 () Int)
(declare-fun lq_tmp$36$x$35$$35$5435 () Int)
(declare-fun lq_karg$36$xs$35$$35$a2P2$35$$35$k_$35$$35$5288 () Int)
(declare-fun m$35$$35$a2Pf () Int)
(declare-fun VV$35$$35$7582 () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$Main.Single$35$$35$1 () Int)
(declare-fun lq_tmp$36$x$35$$35$4021 () Int)
(declare-fun VV$35$$35$6952 () Int)
(declare-fun fix$36$$36$krep_a3cn () Int)
(declare-fun lit$36$$39$Single () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792806613$35$$35$d3nT () Int)
(declare-fun a$35$$35$a2OM () Int)
(declare-fun GHC.Types.TyCon () Int)
(declare-fun GHC.Show.$36$fShow$91$$93$ () Int)
(declare-fun lq_tmp$36$x$35$$35$3149 () Int)
(declare-fun GHC.Stack.Types.FreezeCallStack () Int)
(declare-fun Main.Empty () Int)
(declare-fun lq_karg$36$Main.empty$35$$35$k_$35$$35$3178 () Int)
(declare-fun VV$35$$35$6547 () Int)
(declare-fun VV$35$$35$7896 () Int)
(declare-fun lit$36$b2$32$$61$$32$ () Str)
(declare-fun lit$36$$39$Node2 () Str)
(declare-fun GHC.Num.$42$ () Int)
(declare-fun Main.Three () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806633$35$$35$d3od () Int)
(declare-fun ds_d3gK () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806509$35$$35$d3md () Str)
(declare-fun e$35$$35$a2Pe () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806546$35$$35$d3mO () Str)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792806595$35$$35$d3nB$35$$35$k_$35$$35$5019 () Int)
(declare-fun lq_karg$36$b$35$$35$a2PC$35$$35$k_$35$$35$4811 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806528$35$$35$d3mw () Int)
(declare-fun a$35$$35$a2P1 () Int)
(declare-fun a$35$$35$a2OV () Int)
(declare-fun VV$35$$35$6841 () Int)
(declare-fun VV$35$$35$F$35$$35$207 () Int)
(declare-fun Main.from () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$Main.Node2$35$$35$2 () Int)
(declare-fun d$35$$35$a2Pt () Int)
(declare-fun lq_tmp$36$x$35$$35$5595 () Int)
(declare-fun lq_karg$36$d$35$$35$a2PE$35$$35$k_$35$$35$4811 () Int)
(declare-fun VV$35$$35$6775 () Int)
(declare-fun lit$36$Three$32$ () Str)
(declare-fun lq_karg$36$ds_d3fV$35$$35$k_$35$$35$2139 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806544$35$$35$d3mM () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792806542$35$$35$d3mK () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792806540$35$$35$d3mI () Str)
(declare-fun lq_tmp$36$x$35$$35$5247 () Int)
(declare-fun Main.$36$tc$39$Single () Int)
(declare-fun b$35$$35$a2Pr () Int)
(declare-fun Main.consDigit () Int)
(declare-fun d$35$$35$a2Pd () Int)
(declare-fun lq_tmp$36$x$35$$35$3359 () Int)
(declare-fun c$35$$35$a2Pc () Int)
(declare-fun lq_tmp$36$x$35$$35$5540 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806595$35$$35$d3nB () Int)
(declare-fun b$35$$35$a2Pb () Int)
(declare-fun c$35$$35$a2Ps () Int)
(declare-fun VV$35$$35$5916 () Int)
(declare-fun GHC.Types.EQ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806548$35$$35$d3mQ () Str)
(declare-fun VV$35$$35$7491 () Int)
(declare-fun VV$35$$35$F$35$$35$140 () Int)
(declare-fun lq_karg$36$a$35$$35$a2Px$35$$35$k_$35$$35$4800 () Int)
(declare-fun lq_karg$36$ds_d3i4$35$$35$k_$35$$35$4811 () Int)
(declare-fun fix$36$$36$krep_a3ce () Int)
(declare-fun lq_tmp$36$x$35$$35$3502 () Int)
(declare-fun lq_karg$36$Main.empty$35$$35$k_$35$$35$3368 () Int)
(declare-fun GHC.List.scanr () Int)
(declare-fun VV$35$$35$F$35$$35$145 () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$Main.Three$35$$35$3 () Int)
(declare-fun lq_karg$36$VV$35$$35$3051$35$$35$k_$35$$35$3052 () Int)
(declare-fun lq_tmp$36$x$35$$35$3103 () Int)
(declare-fun VV$35$$35$7810 () Int)
(declare-fun GHC.Num.negate () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792806609$35$$35$d3nP$35$$35$k_$35$$35$4811 () Int)
(declare-fun GHC.Real.fromIntegral () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806551$35$$35$d3mT () Int)
(declare-fun fix$36$$36$krep_a3cp () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792806607$35$$35$d3nN$35$$35$k_$35$$35$4811 () Int)
(declare-fun VV$35$$35$F$35$$35$123 () Int)
(declare-fun Main.main () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$1 () Int)
(declare-fun GHC.Classes.min () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806649$35$$35$d3ot () Int)
(declare-fun lq_karg$36$VV$35$$35$3261$35$$35$k_$35$$35$3262 () Int)
(declare-fun lq_karg$36$VV$35$$35$3461$35$$35$k_$35$$35$3462 () Int)
(declare-fun GHC.List.head () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$1 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792806605$35$$35$d3nL$35$$35$k_$35$$35$4811 () Int)
(declare-fun Main.Node3 () Int)
(declare-fun Main.nodeS () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$Main.One$35$$35$1 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806641$35$$35$d3ol () Int)
(declare-fun ds_d3iP () Int)
(declare-fun lq_karg$36$sf$35$$35$a2PH$35$$35$k_$35$$35$5019 () Int)
(declare-fun Main.$36$tcNode () Int)
(declare-fun GHC.Types.$36$WKindRepVar () Int)
(declare-fun VV$35$$35$6716 () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$Main.Two$35$$35$1 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806553$35$$35$d3mV () Int)
(declare-fun lq_karg$36$Main.empty$35$$35$k_$35$$35$3415 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806643$35$$35$d3on () Int)
(declare-fun VV$35$$35$F$35$$35$190 () Int)
(declare-fun sf$35$$35$a2PH () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792806603$35$$35$d3nJ$35$$35$k_$35$$35$4811 () Int)
(declare-fun x_Tuple32 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806536$35$$35$d3mE () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792806532$35$$35$d3mA () Int)
(declare-fun Main.a2 () Int)
(declare-fun lq_tmp$36$x$35$$35$4234 () Int)
(declare-fun lq_tmp$36$x$35$$35$5444 () Int)
(declare-fun lit$36$$39$Deep () Str)
(declare-fun lq_tmp$36$x$35$$35$2602 () Int)
(declare-fun Main.fromList () Int)
(declare-fun VV$35$$35$F$35$$35$69 () Int)
(declare-fun GHC.List.repeat () Int)
(declare-fun VV$35$$35$F$35$$35$117 () Int)
(declare-fun ProofComb.QED () Int)
(declare-fun lq_tmp$36$x$35$$35$5210 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806604$35$$35$d3nK () Int)
(declare-fun GHC.Base.$62$$62$ () Int)
(declare-fun fix$36$$36$krep_a3co () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 () Int)
(declare-fun VV$35$$35$F$35$$35$153 () Int)
(declare-fun lq_karg$36$e$35$$35$a2PF$35$$35$k_$35$$35$4800 () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$Main.Node3$35$$35$1 () Int)
(declare-fun ds_d3gA () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792806604$35$$35$d3nK$35$$35$k_$35$$35$5019 () Int)
(declare-fun GHC.Classes.not () Int)
(declare-fun ds_d3hF () Int)
(declare-fun VV$35$$35$6359 () Int)
(declare-fun GHC.Show.showString () Int)
(declare-fun lq_karg$36$Main.empty$35$$35$k_$35$$35$4800 () Int)
(declare-fun VV$35$$35$7633 () Int)
(declare-fun m$35$$35$a2PG () Int)
(declare-fun GHC.Num.$43$ () Int)
(declare-fun Data.Tuple.fst () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806598$35$$35$d3nE () Int)
(declare-fun GHC.Types.KindRepApp () Int)
(declare-fun lit$36$$39$Node3 () Str)
(declare-fun sf$35$$35$a2Pg () Int)
(declare-fun ds_d3iO () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792806653$35$$35$d3ox () Int)
(declare-fun GHC.Real.C$58$Integral () Int)
(declare-fun GHC.Base.Just () Int)
(declare-fun snd () Int)
(declare-fun fst () Int)
(declare-fun lq_tmp$36$x$35$$35$5636 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792806508$35$$35$d3mc$35$$35$k_$35$$35$2139 () Int)
(declare-fun is$36$Main.Single () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$44$$41$$35$$35$2 () Int)
(declare-fun ds_d3hv () Int)
(declare-fun lq_tmp$36$x$35$$35$5175 () Int)
(declare-fun lq_tmp$36$x$35$$35$3476 () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$Main.Four$35$$35$4 () Int)
(declare-fun Data.Tuple.snd () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792806598$35$$35$d3nE$35$$35$k_$35$$35$5019 () Int)
(declare-fun apply$35$$35$13 (Int (_ BitVec 32)) Bool)
(declare-fun apply$35$$35$9 (Int Str) Bool)
(declare-fun apply$35$$35$6 (Int Bool) Str)
(declare-fun apply$35$$35$11 (Int Str) (_ BitVec 32))
(declare-fun apply$35$$35$15 (Int (_ BitVec 32)) (_ BitVec 32))
(declare-fun apply$35$$35$0 (Int Int) Int)
(declare-fun apply$35$$35$8 (Int Str) Int)
(declare-fun apply$35$$35$1 (Int Int) Bool)
(declare-fun apply$35$$35$7 (Int Bool) (_ BitVec 32))
(declare-fun apply$35$$35$14 (Int (_ BitVec 32)) Str)
(declare-fun apply$35$$35$10 (Int Str) Str)
(declare-fun apply$35$$35$5 (Int Bool) Bool)
(declare-fun apply$35$$35$2 (Int Int) Str)
(declare-fun apply$35$$35$12 (Int (_ BitVec 32)) Int)
(declare-fun apply$35$$35$3 (Int Int) (_ BitVec 32))
(declare-fun apply$35$$35$4 (Int Bool) Int)
(declare-fun smt_lambda$35$$35$13 ((_ BitVec 32) Bool) Int)
(declare-fun smt_lambda$35$$35$9 (Str Bool) Int)
(declare-fun smt_lambda$35$$35$6 (Bool Str) Int)
(declare-fun smt_lambda$35$$35$11 (Str (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$15 ((_ BitVec 32) (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$0 (Int Int) Int)
(declare-fun smt_lambda$35$$35$8 (Str Int) Int)
(declare-fun smt_lambda$35$$35$1 (Int Bool) Int)
(declare-fun smt_lambda$35$$35$7 (Bool (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$14 ((_ BitVec 32) Str) Int)
(declare-fun smt_lambda$35$$35$10 (Str Str) Int)
(declare-fun smt_lambda$35$$35$5 (Bool Bool) Int)
(declare-fun smt_lambda$35$$35$2 (Int Str) Int)
(declare-fun smt_lambda$35$$35$12 ((_ BitVec 32) Int) Int)
(declare-fun smt_lambda$35$$35$3 (Int (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$4 (Bool Int) Int)
(declare-fun lam_arg$35$$35$1$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$2$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$3$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$4$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$5$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$6$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$7$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$1$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$2$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$3$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$4$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$5$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$6$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$7$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$1$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$2$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$3$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$4$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$5$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$6$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$7$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$1$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$2$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$3$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$4$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$5$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$6$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$7$35$$35$4 () Bool)

(assert (distinct lit$36$$39$Node3 lit$36$$39$Deep lit$36$Three$32$ lit$36$$39$Node2 lit$36$b2$32$$61$$32$ lit$36$$39$Single lit$36$b2 lit$36$Node lit$36$Node3$32$$123$ lit$36$a3$32$$61$$32$ lit$36$FingerTree lit$36$Single$32$ lit$36$a3 lit$36$b3 lit$36$Node2$32$$123$ lit$36$One$32$ lit$36$b3$32$$61$$32$ lit$36$Deep$32$ lit$36$Two$32$ lit$36$a2 lit$36$C$58$$92$Users$92$MortenAske$92$Dropbox$92$master$92$finger$45$tree$92$FingSimple.hs$58$$40$106$44$1$41$$45$$40$108$44$40$41$$124$function$32$consDigit lit$36$$39$Two lit$36$main lit$36$$39$One lit$36$Main lit$36$a2$32$$61$$32$ lit$36$test lit$36$Four$32$ lit$36$$125$ lit$36$Empty lit$36$c3$32$$61$$32$ lit$36$c3 lit$36$Digit lit$36$$39$Empty lit$36$$39$Four lit$36$$39$Three))

(assert (distinct GHC.Types.True GHC.Types.False))
(assert (distinct ProofComb.QED ProofComb.Admit))
(assert (distinct GHC.Types.EQ GHC.Types.GT GHC.Types.LT))
(assert (= (strLen lit$36$$39$Three) 6))
(assert (= (strLen lit$36$$39$Four) 5))
(assert (= (strLen lit$36$$39$Empty) 6))
(assert (= (strLen lit$36$Digit) 5))
(assert (= (strLen lit$36$c3) 2))
(assert (= (strLen lit$36$c3$32$$61$$32$) 5))
(assert (= (strLen lit$36$Empty) 5))
(assert (= (strLen lit$36$$125$) 1))
(assert (= (strLen lit$36$Four$32$) 5))
(assert (= (strLen lit$36$test) 4))
(assert (= (strLen lit$36$a2$32$$61$$32$) 5))
(assert (= (strLen lit$36$Main) 4))
(assert (= (strLen lit$36$$39$One) 4))
(assert (= (strLen lit$36$main) 4))
(assert (= (strLen lit$36$$39$Two) 4))
(assert (= (strLen lit$36$C$58$$92$Users$92$MortenAske$92$Dropbox$92$master$92$finger$45$tree$92$FingSimple.hs$58$$40$106$44$1$41$$45$$40$108$44$40$41$$124$function$32$consDigit) 96))
(assert (= (strLen lit$36$a2) 2))
(assert (= (strLen lit$36$Two$32$) 4))
(assert (= (strLen lit$36$Deep$32$) 5))
(assert (= (strLen lit$36$b3$32$$61$$32$) 5))
(assert (= (strLen lit$36$One$32$) 4))
(assert (= (strLen lit$36$Node2$32$$123$) 7))
(assert (= (strLen lit$36$b3) 2))
(assert (= (strLen lit$36$a3) 2))
(assert (= (strLen lit$36$Single$32$) 7))
(assert (= (strLen lit$36$FingerTree) 10))
(assert (= (strLen lit$36$a3$32$$61$$32$) 5))
(assert (= (strLen lit$36$Node3$32$$123$) 7))
(assert (= (strLen lit$36$Node) 4))
(assert (= (strLen lit$36$b2) 2))
(assert (= (strLen lit$36$$39$Single) 7))
(assert (= (strLen lit$36$b2$32$$61$$32$) 5))
(assert (= (strLen lit$36$$39$Node2) 6))
(assert (= (strLen lit$36$Three$32$) 6))
(assert (= (strLen lit$36$$39$Deep) 5))
(assert (= (strLen lit$36$$39$Node3) 6))
(push 1)
(push 1)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert (and GHC.Types.True))
(assert true)
(assert true)
(assert true)
(assert (and (not GHC.Types.False)))
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert (and (= ProofComb.QED ProofComb.QED)))
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert (and (= GHC.Types.True GHC.Types.True)))
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert (and (= GHC.Types.False GHC.Types.False)))
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(push 1)
(assert true)
(assert true)
(push 1)
(assert (and (and (and (and (and (and (= (apply$35$$35$1 (as is$36$Main.Deep Int) VV$35$$35$F$35$$35$219) false) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Single$35$$35$1 Int) VV$35$$35$F$35$$35$219) a$35$$35$a2P1)) (= (apply$35$$35$1 (as is$36$Main.Single Int) VV$35$$35$F$35$$35$219) true)) (= (apply$35$$35$1 (as is$36$Main.Empty Int) VV$35$$35$F$35$$35$219) false)) (= (apply$35$$35$1 (as Main.isEmpty Int) VV$35$$35$F$35$$35$219) false)) (= VV$35$$35$F$35$$35$219 (apply$35$$35$0 (as Main.Single Int) a$35$$35$a2P1)))))
(assert true)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Empty Int) VV$35$$35$F$35$$35$219))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Empty Int) VV$35$$35$F$35$$35$219)))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Single Int) VV$35$$35$F$35$$35$219))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Single Int) VV$35$$35$F$35$$35$219)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert true)
(push 1)
(assert (and (and (< (apply$35$$35$0 (as Main.digitSize Int) lq_anf$36$$35$$35$7205759403792806508$35$$35$d3mc) 4) (= lq_anf$36$$35$$35$7205759403792806508$35$$35$d3mc ds_d3fV))))
(assert (and (< (apply$35$$35$0 (as Main.digitSize Int) ds_d3fV) 4)))
(assert true)
(push 1)
(assert (and (and (and (and (and (and (and (and (= (apply$35$$35$1 (as is$36$Main.Four Int) VV$35$$35$F$35$$35$216) false) (= (apply$35$$35$1 (as is$36$Main.Three Int) VV$35$$35$F$35$$35$216) false)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Two$35$$35$2 Int) VV$35$$35$F$35$$35$216) b$35$$35$a2Pm)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Two$35$$35$1 Int) VV$35$$35$F$35$$35$216) a$35$$35$a2Pl)) (= (apply$35$$35$1 (as is$36$Main.Two Int) VV$35$$35$F$35$$35$216) true)) (= (apply$35$$35$1 (as is$36$Main.One Int) VV$35$$35$F$35$$35$216) false)) (= (apply$35$$35$0 (as Main.digitSize Int) VV$35$$35$F$35$$35$216) 2)) (= VV$35$$35$F$35$$35$216 (apply$35$$35$0 (apply$35$$35$0 (as Main.Two Int) a$35$$35$a2Pl) b$35$$35$a2Pm)))))
(assert (and (and (and (and (< (apply$35$$35$0 (as Main.digitSize Int) lq_anf$36$$35$$35$7205759403792806508$35$$35$d3mc) 4) (= lq_anf$36$$35$$35$7205759403792806508$35$$35$d3mc ds_d3fV)) (and (and (and (and (and (and (= (apply$35$$35$1 (as is$36$Main.Four Int) lq_anf$36$$35$$35$7205759403792806508$35$$35$d3mc) false) (= (apply$35$$35$1 (as is$36$Main.Three Int) lq_anf$36$$35$$35$7205759403792806508$35$$35$d3mc) false)) (= (apply$35$$35$1 (as is$36$Main.Two Int) lq_anf$36$$35$$35$7205759403792806508$35$$35$d3mc) false)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.One$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792806508$35$$35$d3mc) b$35$$35$a2Pm)) (= (apply$35$$35$1 (as is$36$Main.One Int) lq_anf$36$$35$$35$7205759403792806508$35$$35$d3mc) true)) (= (apply$35$$35$0 (as Main.digitSize Int) lq_anf$36$$35$$35$7205759403792806508$35$$35$d3mc) 1)) (= lq_anf$36$$35$$35$7205759403792806508$35$$35$d3mc (apply$35$$35$0 (as Main.One Int) b$35$$35$a2Pm)))) (and (= lq_anf$36$$35$$35$7205759403792806508$35$$35$d3mc (apply$35$$35$0 (as Main.One Int) b$35$$35$a2Pm)) (and (and (and (and (and (and (= (apply$35$$35$1 (as is$36$Main.Four Int) lq_anf$36$$35$$35$7205759403792806508$35$$35$d3mc) false) (= (apply$35$$35$1 (as is$36$Main.Three Int) lq_anf$36$$35$$35$7205759403792806508$35$$35$d3mc) false)) (= (apply$35$$35$1 (as is$36$Main.Two Int) lq_anf$36$$35$$35$7205759403792806508$35$$35$d3mc) false)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.One$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792806508$35$$35$d3mc) b$35$$35$a2Pm)) (= (apply$35$$35$1 (as is$36$Main.One Int) lq_anf$36$$35$$35$7205759403792806508$35$$35$d3mc) true)) (= (apply$35$$35$0 (as Main.digitSize Int) lq_anf$36$$35$$35$7205759403792806508$35$$35$d3mc) 1)) (= lq_anf$36$$35$$35$7205759403792806508$35$$35$d3mc (apply$35$$35$0 (as Main.One Int) b$35$$35$a2Pm)))))))
(assert true)
(assert (and (and (< (apply$35$$35$0 (as Main.digitSize Int) lq_anf$36$$35$$35$7205759403792806508$35$$35$d3mc) 4) (= lq_anf$36$$35$$35$7205759403792806508$35$$35$d3mc ds_d3fV))))
(pop 1)
(push 1)
(assert (and (and (and (and (and (and (and (and (and (= (apply$35$$35$1 (as is$36$Main.Four Int) VV$35$$35$F$35$$35$212) false) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Three$35$$35$3 Int) VV$35$$35$F$35$$35$212) c$35$$35$a2Pp)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Three$35$$35$2 Int) VV$35$$35$F$35$$35$212) b$35$$35$a2Po)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Three$35$$35$1 Int) VV$35$$35$F$35$$35$212) a$35$$35$a2Pl)) (= (apply$35$$35$1 (as is$36$Main.Three Int) VV$35$$35$F$35$$35$212) true)) (= (apply$35$$35$1 (as is$36$Main.Two Int) VV$35$$35$F$35$$35$212) false)) (= (apply$35$$35$1 (as is$36$Main.One Int) VV$35$$35$F$35$$35$212) false)) (= (apply$35$$35$0 (as Main.digitSize Int) VV$35$$35$F$35$$35$212) 3)) (= VV$35$$35$F$35$$35$212 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Main.Three Int) a$35$$35$a2Pl) b$35$$35$a2Po) c$35$$35$a2Pp)))))
(assert (and (and (and (and (< (apply$35$$35$0 (as Main.digitSize Int) lq_anf$36$$35$$35$7205759403792806508$35$$35$d3mc) 4) (= lq_anf$36$$35$$35$7205759403792806508$35$$35$d3mc ds_d3fV)) (and (and (and (and (and (and (and (= (apply$35$$35$1 (as is$36$Main.Four Int) lq_anf$36$$35$$35$7205759403792806508$35$$35$d3mc) false) (= (apply$35$$35$1 (as is$36$Main.Three Int) lq_anf$36$$35$$35$7205759403792806508$35$$35$d3mc) false)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Two$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792806508$35$$35$d3mc) c$35$$35$a2Pp)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Two$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792806508$35$$35$d3mc) b$35$$35$a2Po)) (= (apply$35$$35$1 (as is$36$Main.Two Int) lq_anf$36$$35$$35$7205759403792806508$35$$35$d3mc) true)) (= (apply$35$$35$1 (as is$36$Main.One Int) lq_anf$36$$35$$35$7205759403792806508$35$$35$d3mc) false)) (= (apply$35$$35$0 (as Main.digitSize Int) lq_anf$36$$35$$35$7205759403792806508$35$$35$d3mc) 2)) (= lq_anf$36$$35$$35$7205759403792806508$35$$35$d3mc (apply$35$$35$0 (apply$35$$35$0 (as Main.Two Int) b$35$$35$a2Po) c$35$$35$a2Pp)))) (and (= lq_anf$36$$35$$35$7205759403792806508$35$$35$d3mc (apply$35$$35$0 (apply$35$$35$0 (as Main.Two Int) b$35$$35$a2Po) c$35$$35$a2Pp)) (and (and (and (and (and (and (and (= (apply$35$$35$1 (as is$36$Main.Four Int) lq_anf$36$$35$$35$7205759403792806508$35$$35$d3mc) false) (= (apply$35$$35$1 (as is$36$Main.Three Int) lq_anf$36$$35$$35$7205759403792806508$35$$35$d3mc) false)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Two$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792806508$35$$35$d3mc) c$35$$35$a2Pp)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Two$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792806508$35$$35$d3mc) b$35$$35$a2Po)) (= (apply$35$$35$1 (as is$36$Main.Two Int) lq_anf$36$$35$$35$7205759403792806508$35$$35$d3mc) true)) (= (apply$35$$35$1 (as is$36$Main.One Int) lq_anf$36$$35$$35$7205759403792806508$35$$35$d3mc) false)) (= (apply$35$$35$0 (as Main.digitSize Int) lq_anf$36$$35$$35$7205759403792806508$35$$35$d3mc) 2)) (= lq_anf$36$$35$$35$7205759403792806508$35$$35$d3mc (apply$35$$35$0 (apply$35$$35$0 (as Main.Two Int) b$35$$35$a2Po) c$35$$35$a2Pp)))))))
(assert true)
(assert true)
(assert (and (and (< (apply$35$$35$0 (as Main.digitSize Int) lq_anf$36$$35$$35$7205759403792806508$35$$35$d3mc) 4) (= lq_anf$36$$35$$35$7205759403792806508$35$$35$d3mc ds_d3fV))))
(pop 1)
(push 1)
(assert (and (and (and (and (and (and (and (and (and (and (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Four$35$$35$4 Int) VV$35$$35$F$35$$35$207) d$35$$35$a2Pt) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Four$35$$35$3 Int) VV$35$$35$F$35$$35$207) c$35$$35$a2Ps)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Four$35$$35$2 Int) VV$35$$35$F$35$$35$207) b$35$$35$a2Pr)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Four$35$$35$1 Int) VV$35$$35$F$35$$35$207) a$35$$35$a2Pl)) (= (apply$35$$35$1 (as is$36$Main.Four Int) VV$35$$35$F$35$$35$207) true)) (= (apply$35$$35$1 (as is$36$Main.Three Int) VV$35$$35$F$35$$35$207) false)) (= (apply$35$$35$1 (as is$36$Main.Two Int) VV$35$$35$F$35$$35$207) false)) (= (apply$35$$35$1 (as is$36$Main.One Int) VV$35$$35$F$35$$35$207) false)) (= (apply$35$$35$0 (as Main.digitSize Int) VV$35$$35$F$35$$35$207) 4)) (= VV$35$$35$F$35$$35$207 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Main.Four Int) a$35$$35$a2Pl) b$35$$35$a2Pr) c$35$$35$a2Ps) d$35$$35$a2Pt)))))
(assert (and (and (and (and (< (apply$35$$35$0 (as Main.digitSize Int) lq_anf$36$$35$$35$7205759403792806508$35$$35$d3mc) 4) (= lq_anf$36$$35$$35$7205759403792806508$35$$35$d3mc ds_d3fV)) (and (and (and (and (and (and (and (and (= (apply$35$$35$1 (as is$36$Main.Four Int) lq_anf$36$$35$$35$7205759403792806508$35$$35$d3mc) false) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Three$35$$35$3 Int) lq_anf$36$$35$$35$7205759403792806508$35$$35$d3mc) d$35$$35$a2Pt)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Three$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792806508$35$$35$d3mc) c$35$$35$a2Ps)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Three$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792806508$35$$35$d3mc) b$35$$35$a2Pr)) (= (apply$35$$35$1 (as is$36$Main.Three Int) lq_anf$36$$35$$35$7205759403792806508$35$$35$d3mc) true)) (= (apply$35$$35$1 (as is$36$Main.Two Int) lq_anf$36$$35$$35$7205759403792806508$35$$35$d3mc) false)) (= (apply$35$$35$1 (as is$36$Main.One Int) lq_anf$36$$35$$35$7205759403792806508$35$$35$d3mc) false)) (= (apply$35$$35$0 (as Main.digitSize Int) lq_anf$36$$35$$35$7205759403792806508$35$$35$d3mc) 3)) (= lq_anf$36$$35$$35$7205759403792806508$35$$35$d3mc (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Main.Three Int) b$35$$35$a2Pr) c$35$$35$a2Ps) d$35$$35$a2Pt)))) (and (= lq_anf$36$$35$$35$7205759403792806508$35$$35$d3mc (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Main.Three Int) b$35$$35$a2Pr) c$35$$35$a2Ps) d$35$$35$a2Pt)) (and (and (and (and (and (and (and (and (= (apply$35$$35$1 (as is$36$Main.Four Int) lq_anf$36$$35$$35$7205759403792806508$35$$35$d3mc) false) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Three$35$$35$3 Int) lq_anf$36$$35$$35$7205759403792806508$35$$35$d3mc) d$35$$35$a2Pt)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Three$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792806508$35$$35$d3mc) c$35$$35$a2Ps)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Three$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792806508$35$$35$d3mc) b$35$$35$a2Pr)) (= (apply$35$$35$1 (as is$36$Main.Three Int) lq_anf$36$$35$$35$7205759403792806508$35$$35$d3mc) true)) (= (apply$35$$35$1 (as is$36$Main.Two Int) lq_anf$36$$35$$35$7205759403792806508$35$$35$d3mc) false)) (= (apply$35$$35$1 (as is$36$Main.One Int) lq_anf$36$$35$$35$7205759403792806508$35$$35$d3mc) false)) (= (apply$35$$35$0 (as Main.digitSize Int) lq_anf$36$$35$$35$7205759403792806508$35$$35$d3mc) 3)) (= lq_anf$36$$35$$35$7205759403792806508$35$$35$d3mc (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Main.Three Int) b$35$$35$a2Pr) c$35$$35$a2Ps) d$35$$35$a2Pt)))))))
(assert true)
(assert true)
(assert true)
(assert (and (and (< (apply$35$$35$0 (as Main.digitSize Int) lq_anf$36$$35$$35$7205759403792806508$35$$35$d3mc) 4) (= lq_anf$36$$35$$35$7205759403792806508$35$$35$d3mc ds_d3fV))))
(pop 1)
(push 1)
(assert (and (= lq_anf$36$$35$$35$7205759403792806509$35$$35$d3md lit$36$C$58$$92$Users$92$MortenAske$92$Dropbox$92$master$92$finger$45$tree$92$FingSimple.hs$58$$40$106$44$1$41$$45$$40$108$44$40$41$$124$function$32$consDigit)))
(assert (and (and (and (and (< (apply$35$$35$0 (as Main.digitSize Int) lq_anf$36$$35$$35$7205759403792806508$35$$35$d3mc) 4) (= lq_anf$36$$35$$35$7205759403792806508$35$$35$d3mc ds_d3fV)) (and (and (and (and (and (and (and (and (and (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Four$35$$35$4 Int) lq_anf$36$$35$$35$7205759403792806508$35$$35$d3mc) lq_anf$36$$35$$35$7205759403792806513$35$$35$d3mh) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Four$35$$35$3 Int) lq_anf$36$$35$$35$7205759403792806508$35$$35$d3mc) lq_anf$36$$35$$35$7205759403792806512$35$$35$d3mg)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Four$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792806508$35$$35$d3mc) lq_anf$36$$35$$35$7205759403792806511$35$$35$d3mf)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Four$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792806508$35$$35$d3mc) lq_anf$36$$35$$35$7205759403792806510$35$$35$d3me)) (= (apply$35$$35$1 (as is$36$Main.Four Int) lq_anf$36$$35$$35$7205759403792806508$35$$35$d3mc) true)) (= (apply$35$$35$1 (as is$36$Main.Three Int) lq_anf$36$$35$$35$7205759403792806508$35$$35$d3mc) false)) (= (apply$35$$35$1 (as is$36$Main.Two Int) lq_anf$36$$35$$35$7205759403792806508$35$$35$d3mc) false)) (= (apply$35$$35$1 (as is$36$Main.One Int) lq_anf$36$$35$$35$7205759403792806508$35$$35$d3mc) false)) (= (apply$35$$35$0 (as Main.digitSize Int) lq_anf$36$$35$$35$7205759403792806508$35$$35$d3mc) 4)) (= lq_anf$36$$35$$35$7205759403792806508$35$$35$d3mc (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Main.Four Int) lq_anf$36$$35$$35$7205759403792806510$35$$35$d3me) lq_anf$36$$35$$35$7205759403792806511$35$$35$d3mf) lq_anf$36$$35$$35$7205759403792806512$35$$35$d3mg) lq_anf$36$$35$$35$7205759403792806513$35$$35$d3mh)))) (and (= lq_anf$36$$35$$35$7205759403792806508$35$$35$d3mc (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Main.Four Int) lq_anf$36$$35$$35$7205759403792806510$35$$35$d3me) lq_anf$36$$35$$35$7205759403792806511$35$$35$d3mf) lq_anf$36$$35$$35$7205759403792806512$35$$35$d3mg) lq_anf$36$$35$$35$7205759403792806513$35$$35$d3mh)) (and (and (and (and (and (and (and (and (and (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Four$35$$35$4 Int) lq_anf$36$$35$$35$7205759403792806508$35$$35$d3mc) lq_anf$36$$35$$35$7205759403792806513$35$$35$d3mh) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Four$35$$35$3 Int) lq_anf$36$$35$$35$7205759403792806508$35$$35$d3mc) lq_anf$36$$35$$35$7205759403792806512$35$$35$d3mg)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Four$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792806508$35$$35$d3mc) lq_anf$36$$35$$35$7205759403792806511$35$$35$d3mf)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Four$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792806508$35$$35$d3mc) lq_anf$36$$35$$35$7205759403792806510$35$$35$d3me)) (= (apply$35$$35$1 (as is$36$Main.Four Int) lq_anf$36$$35$$35$7205759403792806508$35$$35$d3mc) true)) (= (apply$35$$35$1 (as is$36$Main.Three Int) lq_anf$36$$35$$35$7205759403792806508$35$$35$d3mc) false)) (= (apply$35$$35$1 (as is$36$Main.Two Int) lq_anf$36$$35$$35$7205759403792806508$35$$35$d3mc) false)) (= (apply$35$$35$1 (as is$36$Main.One Int) lq_anf$36$$35$$35$7205759403792806508$35$$35$d3mc) false)) (= (apply$35$$35$0 (as Main.digitSize Int) lq_anf$36$$35$$35$7205759403792806508$35$$35$d3mc) 4)) (= lq_anf$36$$35$$35$7205759403792806508$35$$35$d3mc (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Main.Four Int) lq_anf$36$$35$$35$7205759403792806510$35$$35$d3me) lq_anf$36$$35$$35$7205759403792806511$35$$35$d3mf) lq_anf$36$$35$$35$7205759403792806512$35$$35$d3mg) lq_anf$36$$35$$35$7205759403792806513$35$$35$d3mh)))))))
(assert true)
(assert true)
(assert true)
(assert true)
(assert (and (and (< (apply$35$$35$0 (as Main.digitSize Int) lq_anf$36$$35$$35$7205759403792806508$35$$35$d3mc) 4) (= lq_anf$36$$35$$35$7205759403792806508$35$$35$d3mc ds_d3fV))))
(push 1)
(pop 1)
(push 1)
(assert (and (and (= VV$35$$35$F$35$$35$206 lit$36$C$58$$92$Users$92$MortenAske$92$Dropbox$92$master$92$finger$45$tree$92$FingSimple.hs$58$$40$106$44$1$41$$45$$40$108$44$40$41$$124$function$32$consDigit) (= VV$35$$35$F$35$$35$206 lq_anf$36$$35$$35$7205759403792806509$35$$35$d3md))))
(pop 1)
(pop 1)
(pop 1)
(push 1)
(assert true)
(assert true)
(push 1)
(assert (and (= lq_anf$36$$35$$35$7205759403792806518$35$$35$d3mm ds_d3gA)))
(assert (and (and (and (= lq_anf$36$$35$$35$7205759403792806514$35$$35$d3mi ds_d3gd) (and (and (and (and (and (and (and (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$3 Int) lq_anf$36$$35$$35$7205759403792806514$35$$35$d3mi) sf$35$$35$a2Pg) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792806514$35$$35$d3mi) m$35$$35$a2Pf)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792806514$35$$35$d3mi) ds_d3gA)) (= (apply$35$$35$1 (as is$36$Main.Deep Int) lq_anf$36$$35$$35$7205759403792806514$35$$35$d3mi) true)) (= (apply$35$$35$1 (as is$36$Main.Single Int) lq_anf$36$$35$$35$7205759403792806514$35$$35$d3mi) false)) (= (apply$35$$35$1 (as is$36$Main.Empty Int) lq_anf$36$$35$$35$7205759403792806514$35$$35$d3mi) false)) (= (apply$35$$35$1 (as Main.isEmpty Int) lq_anf$36$$35$$35$7205759403792806514$35$$35$d3mi) false)) (= lq_anf$36$$35$$35$7205759403792806514$35$$35$d3mi (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Main.Deep Int) ds_d3gA) m$35$$35$a2Pf) sf$35$$35$a2Pg)))) (and (= lq_anf$36$$35$$35$7205759403792806514$35$$35$d3mi (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Main.Deep Int) ds_d3gA) m$35$$35$a2Pf) sf$35$$35$a2Pg)) (and (and (and (and (and (and (and (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$3 Int) lq_anf$36$$35$$35$7205759403792806514$35$$35$d3mi) sf$35$$35$a2Pg) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792806514$35$$35$d3mi) m$35$$35$a2Pf)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792806514$35$$35$d3mi) ds_d3gA)) (= (apply$35$$35$1 (as is$36$Main.Deep Int) lq_anf$36$$35$$35$7205759403792806514$35$$35$d3mi) true)) (= (apply$35$$35$1 (as is$36$Main.Single Int) lq_anf$36$$35$$35$7205759403792806514$35$$35$d3mi) false)) (= (apply$35$$35$1 (as is$36$Main.Empty Int) lq_anf$36$$35$$35$7205759403792806514$35$$35$d3mi) false)) (= (apply$35$$35$1 (as Main.isEmpty Int) lq_anf$36$$35$$35$7205759403792806514$35$$35$d3mi) false)) (= lq_anf$36$$35$$35$7205759403792806514$35$$35$d3mi (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Main.Deep Int) ds_d3gA) m$35$$35$a2Pf) sf$35$$35$a2Pg)))))))
(assert true)
(assert true)
(assert true)
(assert (and (= lq_anf$36$$35$$35$7205759403792806514$35$$35$d3mi ds_d3gd)))
(assert (and (= lq_anf$36$$35$$35$7205759403792806514$35$$35$d3mi ds_d3gd)))
(assert true)
(assert true)
(push 1)
(assert (and (= VV$35$$35$F$35$$35$196 ds_d3gA)))
(assert (and (and (and (= lq_anf$36$$35$$35$7205759403792806518$35$$35$d3mm ds_d3gA) (and (and (and (and (and (and (= (apply$35$$35$1 (as is$36$Main.Four Int) lq_anf$36$$35$$35$7205759403792806518$35$$35$d3mm) false) (= (apply$35$$35$1 (as is$36$Main.Three Int) lq_anf$36$$35$$35$7205759403792806518$35$$35$d3mm) false)) (= (apply$35$$35$1 (as is$36$Main.Two Int) lq_anf$36$$35$$35$7205759403792806518$35$$35$d3mm) false)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.One$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792806518$35$$35$d3mm) lq_anf$36$$35$$35$7205759403792806525$35$$35$d3mt)) (= (apply$35$$35$1 (as is$36$Main.One Int) lq_anf$36$$35$$35$7205759403792806518$35$$35$d3mm) true)) (= (apply$35$$35$0 (as Main.digitSize Int) lq_anf$36$$35$$35$7205759403792806518$35$$35$d3mm) 1)) (= lq_anf$36$$35$$35$7205759403792806518$35$$35$d3mm (apply$35$$35$0 (as Main.One Int) lq_anf$36$$35$$35$7205759403792806525$35$$35$d3mt)))) (and (= lq_anf$36$$35$$35$7205759403792806518$35$$35$d3mm (apply$35$$35$0 (as Main.One Int) lq_anf$36$$35$$35$7205759403792806525$35$$35$d3mt)) (and (and (and (and (and (and (= (apply$35$$35$1 (as is$36$Main.Four Int) lq_anf$36$$35$$35$7205759403792806518$35$$35$d3mm) false) (= (apply$35$$35$1 (as is$36$Main.Three Int) lq_anf$36$$35$$35$7205759403792806518$35$$35$d3mm) false)) (= (apply$35$$35$1 (as is$36$Main.Two Int) lq_anf$36$$35$$35$7205759403792806518$35$$35$d3mm) false)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.One$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792806518$35$$35$d3mm) lq_anf$36$$35$$35$7205759403792806525$35$$35$d3mt)) (= (apply$35$$35$1 (as is$36$Main.One Int) lq_anf$36$$35$$35$7205759403792806518$35$$35$d3mm) true)) (= (apply$35$$35$0 (as Main.digitSize Int) lq_anf$36$$35$$35$7205759403792806518$35$$35$d3mm) 1)) (= lq_anf$36$$35$$35$7205759403792806518$35$$35$d3mm (apply$35$$35$0 (as Main.One Int) lq_anf$36$$35$$35$7205759403792806525$35$$35$d3mt)))))))
(assert true)
(assert (and (= lq_anf$36$$35$$35$7205759403792806518$35$$35$d3mm ds_d3gA)))
(pop 1)
(push 1)
(assert (and (= VV$35$$35$F$35$$35$190 ds_d3gA)))
(assert (and (and (and (= lq_anf$36$$35$$35$7205759403792806518$35$$35$d3mm ds_d3gA) (and (and (and (and (and (and (and (= (apply$35$$35$1 (as is$36$Main.Four Int) lq_anf$36$$35$$35$7205759403792806518$35$$35$d3mm) false) (= (apply$35$$35$1 (as is$36$Main.Three Int) lq_anf$36$$35$$35$7205759403792806518$35$$35$d3mm) false)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Two$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792806518$35$$35$d3mm) lq_anf$36$$35$$35$7205759403792806524$35$$35$d3ms)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Two$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792806518$35$$35$d3mm) lq_anf$36$$35$$35$7205759403792806523$35$$35$d3mr)) (= (apply$35$$35$1 (as is$36$Main.Two Int) lq_anf$36$$35$$35$7205759403792806518$35$$35$d3mm) true)) (= (apply$35$$35$1 (as is$36$Main.One Int) lq_anf$36$$35$$35$7205759403792806518$35$$35$d3mm) false)) (= (apply$35$$35$0 (as Main.digitSize Int) lq_anf$36$$35$$35$7205759403792806518$35$$35$d3mm) 2)) (= lq_anf$36$$35$$35$7205759403792806518$35$$35$d3mm (apply$35$$35$0 (apply$35$$35$0 (as Main.Two Int) lq_anf$36$$35$$35$7205759403792806523$35$$35$d3mr) lq_anf$36$$35$$35$7205759403792806524$35$$35$d3ms)))) (and (= lq_anf$36$$35$$35$7205759403792806518$35$$35$d3mm (apply$35$$35$0 (apply$35$$35$0 (as Main.Two Int) lq_anf$36$$35$$35$7205759403792806523$35$$35$d3mr) lq_anf$36$$35$$35$7205759403792806524$35$$35$d3ms)) (and (and (and (and (and (and (and (= (apply$35$$35$1 (as is$36$Main.Four Int) lq_anf$36$$35$$35$7205759403792806518$35$$35$d3mm) false) (= (apply$35$$35$1 (as is$36$Main.Three Int) lq_anf$36$$35$$35$7205759403792806518$35$$35$d3mm) false)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Two$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792806518$35$$35$d3mm) lq_anf$36$$35$$35$7205759403792806524$35$$35$d3ms)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Two$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792806518$35$$35$d3mm) lq_anf$36$$35$$35$7205759403792806523$35$$35$d3mr)) (= (apply$35$$35$1 (as is$36$Main.Two Int) lq_anf$36$$35$$35$7205759403792806518$35$$35$d3mm) true)) (= (apply$35$$35$1 (as is$36$Main.One Int) lq_anf$36$$35$$35$7205759403792806518$35$$35$d3mm) false)) (= (apply$35$$35$0 (as Main.digitSize Int) lq_anf$36$$35$$35$7205759403792806518$35$$35$d3mm) 2)) (= lq_anf$36$$35$$35$7205759403792806518$35$$35$d3mm (apply$35$$35$0 (apply$35$$35$0 (as Main.Two Int) lq_anf$36$$35$$35$7205759403792806523$35$$35$d3mr) lq_anf$36$$35$$35$7205759403792806524$35$$35$d3ms)))))))
(assert true)
(assert true)
(assert (and (= lq_anf$36$$35$$35$7205759403792806518$35$$35$d3mm ds_d3gA)))
(pop 1)
(push 1)
(assert (and (= VV$35$$35$F$35$$35$184 ds_d3gA)))
(assert (and (and (and (= lq_anf$36$$35$$35$7205759403792806518$35$$35$d3mm ds_d3gA) (and (and (and (and (and (and (and (and (= (apply$35$$35$1 (as is$36$Main.Four Int) lq_anf$36$$35$$35$7205759403792806518$35$$35$d3mm) false) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Three$35$$35$3 Int) lq_anf$36$$35$$35$7205759403792806518$35$$35$d3mm) lq_anf$36$$35$$35$7205759403792806528$35$$35$d3mw)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Three$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792806518$35$$35$d3mm) lq_anf$36$$35$$35$7205759403792806527$35$$35$d3mv)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Three$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792806518$35$$35$d3mm) lq_anf$36$$35$$35$7205759403792806526$35$$35$d3mu)) (= (apply$35$$35$1 (as is$36$Main.Three Int) lq_anf$36$$35$$35$7205759403792806518$35$$35$d3mm) true)) (= (apply$35$$35$1 (as is$36$Main.Two Int) lq_anf$36$$35$$35$7205759403792806518$35$$35$d3mm) false)) (= (apply$35$$35$1 (as is$36$Main.One Int) lq_anf$36$$35$$35$7205759403792806518$35$$35$d3mm) false)) (= (apply$35$$35$0 (as Main.digitSize Int) lq_anf$36$$35$$35$7205759403792806518$35$$35$d3mm) 3)) (= lq_anf$36$$35$$35$7205759403792806518$35$$35$d3mm (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Main.Three Int) lq_anf$36$$35$$35$7205759403792806526$35$$35$d3mu) lq_anf$36$$35$$35$7205759403792806527$35$$35$d3mv) lq_anf$36$$35$$35$7205759403792806528$35$$35$d3mw)))) (and (= lq_anf$36$$35$$35$7205759403792806518$35$$35$d3mm (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Main.Three Int) lq_anf$36$$35$$35$7205759403792806526$35$$35$d3mu) lq_anf$36$$35$$35$7205759403792806527$35$$35$d3mv) lq_anf$36$$35$$35$7205759403792806528$35$$35$d3mw)) (and (and (and (and (and (and (and (and (= (apply$35$$35$1 (as is$36$Main.Four Int) lq_anf$36$$35$$35$7205759403792806518$35$$35$d3mm) false) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Three$35$$35$3 Int) lq_anf$36$$35$$35$7205759403792806518$35$$35$d3mm) lq_anf$36$$35$$35$7205759403792806528$35$$35$d3mw)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Three$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792806518$35$$35$d3mm) lq_anf$36$$35$$35$7205759403792806527$35$$35$d3mv)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Three$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792806518$35$$35$d3mm) lq_anf$36$$35$$35$7205759403792806526$35$$35$d3mu)) (= (apply$35$$35$1 (as is$36$Main.Three Int) lq_anf$36$$35$$35$7205759403792806518$35$$35$d3mm) true)) (= (apply$35$$35$1 (as is$36$Main.Two Int) lq_anf$36$$35$$35$7205759403792806518$35$$35$d3mm) false)) (= (apply$35$$35$1 (as is$36$Main.One Int) lq_anf$36$$35$$35$7205759403792806518$35$$35$d3mm) false)) (= (apply$35$$35$0 (as Main.digitSize Int) lq_anf$36$$35$$35$7205759403792806518$35$$35$d3mm) 3)) (= lq_anf$36$$35$$35$7205759403792806518$35$$35$d3mm (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Main.Three Int) lq_anf$36$$35$$35$7205759403792806526$35$$35$d3mu) lq_anf$36$$35$$35$7205759403792806527$35$$35$d3mv) lq_anf$36$$35$$35$7205759403792806528$35$$35$d3mw)))))))
(assert true)
(assert true)
(assert true)
(assert (and (= lq_anf$36$$35$$35$7205759403792806518$35$$35$d3mm ds_d3gA)))
(pop 1)
(pop 1)
(push 1)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert (and (= fix$36$$36$krep_a3cf (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a3cg) fix$36$$36$krep_a3ch))))
(assert (and (= fix$36$$36$krep_a3ch (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a3ci) fix$36$$36$krep_a3ck))))
(assert (and (= fix$36$$36$krep_a3ck (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a3cg) fix$36$$36$krep_a3cc))))
(assert (and (= fix$36$$36$krep_a3ce (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a3cd) fix$36$$36$krep_a3cc))))
(assert (and (= fix$36$$36$krep_a3cn (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a3cd) fix$36$$36$krep_a3cl))))
(assert (and (= fix$36$$36$krep_a3cl (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a3cd) fix$36$$36$krep_a3cm))))
(assert (and (= fix$36$$36$krep_a3cm (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a3cd) fix$36$$36$krep_a3cj))))
(assert (and (= fix$36$$36$krep_a3cr (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a3cd) fix$36$$36$krep_a3cq))))
(assert (and (= fix$36$$36$krep_a3cq (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a3cd) fix$36$$36$krep_a3cp))))
(assert (and (= fix$36$$36$krep_a3cp (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a3cd) fix$36$$36$krep_a3co))))
(assert (and (= fix$36$$36$krep_a3co (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a3cd) fix$36$$36$krep_a3cg))))
(assert true)
(push 1)
(assert (and (= lq_anf$36$$35$$35$7205759403792806595$35$$35$d3nB ds_d3hF)))
(assert true)
(assert true)
(assert true)
(push 1)
(assert (and (= VV$35$$35$F$35$$35$124 ProofComb.trivial)))
(assert (and (and (and (= lq_anf$36$$35$$35$7205759403792806595$35$$35$d3nB ds_d3hF) (and (and (and (and (= (apply$35$$35$1 (as is$36$Main.Deep Int) lq_anf$36$$35$$35$7205759403792806595$35$$35$d3nB) false) (= (apply$35$$35$1 (as is$36$Main.Single Int) lq_anf$36$$35$$35$7205759403792806595$35$$35$d3nB) false)) (= (apply$35$$35$1 (as is$36$Main.Empty Int) lq_anf$36$$35$$35$7205759403792806595$35$$35$d3nB) true)) (= (apply$35$$35$1 (as Main.isEmpty Int) lq_anf$36$$35$$35$7205759403792806595$35$$35$d3nB) true)) (= lq_anf$36$$35$$35$7205759403792806595$35$$35$d3nB (as Main.Empty Int)))) (and (= lq_anf$36$$35$$35$7205759403792806595$35$$35$d3nB (as Main.Empty Int)) (and (and (and (and (= (apply$35$$35$1 (as is$36$Main.Deep Int) lq_anf$36$$35$$35$7205759403792806595$35$$35$d3nB) false) (= (apply$35$$35$1 (as is$36$Main.Single Int) lq_anf$36$$35$$35$7205759403792806595$35$$35$d3nB) false)) (= (apply$35$$35$1 (as is$36$Main.Empty Int) lq_anf$36$$35$$35$7205759403792806595$35$$35$d3nB) true)) (= (apply$35$$35$1 (as Main.isEmpty Int) lq_anf$36$$35$$35$7205759403792806595$35$$35$d3nB) true)) (= lq_anf$36$$35$$35$7205759403792806595$35$$35$d3nB (as Main.Empty Int)))))))
(assert (and (= lq_anf$36$$35$$35$7205759403792806595$35$$35$d3nB ds_d3hF)))
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Empty Int) ds_d3hF))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Empty Int) ds_d3hF))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not false))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not (not true))))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= VV$35$$35$F$35$$35$123 ProofComb.trivial)))
(assert (and (and (and (= lq_anf$36$$35$$35$7205759403792806595$35$$35$d3nB ds_d3hF) (and (and (and (and (and (= (apply$35$$35$1 (as is$36$Main.Deep Int) lq_anf$36$$35$$35$7205759403792806595$35$$35$d3nB) false) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Single$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792806595$35$$35$d3nB) ds_d3i3)) (= (apply$35$$35$1 (as is$36$Main.Single Int) lq_anf$36$$35$$35$7205759403792806595$35$$35$d3nB) true)) (= (apply$35$$35$1 (as is$36$Main.Empty Int) lq_anf$36$$35$$35$7205759403792806595$35$$35$d3nB) false)) (= (apply$35$$35$1 (as Main.isEmpty Int) lq_anf$36$$35$$35$7205759403792806595$35$$35$d3nB) false)) (= lq_anf$36$$35$$35$7205759403792806595$35$$35$d3nB (apply$35$$35$0 (as Main.Single Int) ds_d3i3)))) (and (= lq_anf$36$$35$$35$7205759403792806595$35$$35$d3nB (apply$35$$35$0 (as Main.Single Int) ds_d3i3)) (and (and (and (and (and (= (apply$35$$35$1 (as is$36$Main.Deep Int) lq_anf$36$$35$$35$7205759403792806595$35$$35$d3nB) false) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Single$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792806595$35$$35$d3nB) ds_d3i3)) (= (apply$35$$35$1 (as is$36$Main.Single Int) lq_anf$36$$35$$35$7205759403792806595$35$$35$d3nB) true)) (= (apply$35$$35$1 (as is$36$Main.Empty Int) lq_anf$36$$35$$35$7205759403792806595$35$$35$d3nB) false)) (= (apply$35$$35$1 (as Main.isEmpty Int) lq_anf$36$$35$$35$7205759403792806595$35$$35$d3nB) false)) (= lq_anf$36$$35$$35$7205759403792806595$35$$35$d3nB (apply$35$$35$0 (as Main.Single Int) ds_d3i3)))))))
(assert true)
(assert (and (= lq_anf$36$$35$$35$7205759403792806595$35$$35$d3nB ds_d3hF)))
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Empty Int) ds_d3hF))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Empty Int) ds_d3hF)))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Single Int) ds_d3hF))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Single Int) ds_d3hF)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Empty Int) ds_d3hF))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Empty Int) ds_d3hF)))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Single Int) ds_d3hF))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Single Int) ds_d3hF)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not false))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not false))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not (not true))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not true))))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= lq_anf$36$$35$$35$7205759403792806596$35$$35$d3nC ds_d3i4)))
(assert (and (and (and (= lq_anf$36$$35$$35$7205759403792806595$35$$35$d3nB ds_d3hF) (and (and (and (and (and (and (and (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$3 Int) lq_anf$36$$35$$35$7205759403792806595$35$$35$d3nB) sf$35$$35$a2PH) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792806595$35$$35$d3nB) m$35$$35$a2PG)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792806595$35$$35$d3nB) ds_d3i4)) (= (apply$35$$35$1 (as is$36$Main.Deep Int) lq_anf$36$$35$$35$7205759403792806595$35$$35$d3nB) true)) (= (apply$35$$35$1 (as is$36$Main.Single Int) lq_anf$36$$35$$35$7205759403792806595$35$$35$d3nB) false)) (= (apply$35$$35$1 (as is$36$Main.Empty Int) lq_anf$36$$35$$35$7205759403792806595$35$$35$d3nB) false)) (= (apply$35$$35$1 (as Main.isEmpty Int) lq_anf$36$$35$$35$7205759403792806595$35$$35$d3nB) false)) (= lq_anf$36$$35$$35$7205759403792806595$35$$35$d3nB (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Main.Deep Int) ds_d3i4) m$35$$35$a2PG) sf$35$$35$a2PH)))) (and (= lq_anf$36$$35$$35$7205759403792806595$35$$35$d3nB (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Main.Deep Int) ds_d3i4) m$35$$35$a2PG) sf$35$$35$a2PH)) (and (and (and (and (and (and (and (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$3 Int) lq_anf$36$$35$$35$7205759403792806595$35$$35$d3nB) sf$35$$35$a2PH) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792806595$35$$35$d3nB) m$35$$35$a2PG)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792806595$35$$35$d3nB) ds_d3i4)) (= (apply$35$$35$1 (as is$36$Main.Deep Int) lq_anf$36$$35$$35$7205759403792806595$35$$35$d3nB) true)) (= (apply$35$$35$1 (as is$36$Main.Single Int) lq_anf$36$$35$$35$7205759403792806595$35$$35$d3nB) false)) (= (apply$35$$35$1 (as is$36$Main.Empty Int) lq_anf$36$$35$$35$7205759403792806595$35$$35$d3nB) false)) (= (apply$35$$35$1 (as Main.isEmpty Int) lq_anf$36$$35$$35$7205759403792806595$35$$35$d3nB) false)) (= lq_anf$36$$35$$35$7205759403792806595$35$$35$d3nB (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Main.Deep Int) ds_d3i4) m$35$$35$a2PG) sf$35$$35$a2PH)))))))
(assert true)
(assert true)
(assert true)
(assert (and (= lq_anf$36$$35$$35$7205759403792806595$35$$35$d3nB ds_d3hF)))
(push 1)
(assert (and (and (and (= lq_anf$36$$35$$35$7205759403792806596$35$$35$d3nC ds_d3i4) (and (and (and (and (and (and (= (apply$35$$35$1 (as is$36$Main.Four Int) lq_anf$36$$35$$35$7205759403792806596$35$$35$d3nC) false) (= (apply$35$$35$1 (as is$36$Main.Three Int) lq_anf$36$$35$$35$7205759403792806596$35$$35$d3nC) false)) (= (apply$35$$35$1 (as is$36$Main.Two Int) lq_anf$36$$35$$35$7205759403792806596$35$$35$d3nC) false)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.One$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792806596$35$$35$d3nC) lq_anf$36$$35$$35$7205759403792806626$35$$35$d3o6)) (= (apply$35$$35$1 (as is$36$Main.One Int) lq_anf$36$$35$$35$7205759403792806596$35$$35$d3nC) true)) (= (apply$35$$35$0 (as Main.digitSize Int) lq_anf$36$$35$$35$7205759403792806596$35$$35$d3nC) 1)) (= lq_anf$36$$35$$35$7205759403792806596$35$$35$d3nC (apply$35$$35$0 (as Main.One Int) lq_anf$36$$35$$35$7205759403792806626$35$$35$d3o6)))) (and (= lq_anf$36$$35$$35$7205759403792806596$35$$35$d3nC (apply$35$$35$0 (as Main.One Int) lq_anf$36$$35$$35$7205759403792806626$35$$35$d3o6)) (and (and (and (and (and (and (= (apply$35$$35$1 (as is$36$Main.Four Int) lq_anf$36$$35$$35$7205759403792806596$35$$35$d3nC) false) (= (apply$35$$35$1 (as is$36$Main.Three Int) lq_anf$36$$35$$35$7205759403792806596$35$$35$d3nC) false)) (= (apply$35$$35$1 (as is$36$Main.Two Int) lq_anf$36$$35$$35$7205759403792806596$35$$35$d3nC) false)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.One$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792806596$35$$35$d3nC) lq_anf$36$$35$$35$7205759403792806626$35$$35$d3o6)) (= (apply$35$$35$1 (as is$36$Main.One Int) lq_anf$36$$35$$35$7205759403792806596$35$$35$d3nC) true)) (= (apply$35$$35$0 (as Main.digitSize Int) lq_anf$36$$35$$35$7205759403792806596$35$$35$d3nC) 1)) (= lq_anf$36$$35$$35$7205759403792806596$35$$35$d3nC (apply$35$$35$0 (as Main.One Int) lq_anf$36$$35$$35$7205759403792806626$35$$35$d3o6)))))))
(assert true)
(assert (and (= lq_anf$36$$35$$35$7205759403792806596$35$$35$d3nC ds_d3i4)))
(push 1)
(assert (and (and (=> (apply$35$$35$1 isAdmit ProofComb.QED) false) (=> (not (apply$35$$35$1 isAdmit ProofComb.QED)) true))))
(assert (and (and (and (and (= (apply$35$$35$0 (as Main.digitSize Int) lq_anf$36$$35$$35$7205759403792806597$35$$35$d3nD) (+ (apply$35$$35$0 (as Main.digitSize Int) ds_d3i4) 1)) (= lq_anf$36$$35$$35$7205759403792806597$35$$35$d3nD (apply$35$$35$0 (apply$35$$35$0 (as Main.consDigit Int) a$35$$35$a2Px) ds_d3i4))) (= lq_anf$36$$35$$35$7205759403792806597$35$$35$d3nD (ite (apply$35$$35$1 (as is$36$Main.One Int) ds_d3i4) (apply$35$$35$0 (apply$35$$35$0 (as Main.Two Int) a$35$$35$a2Px) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.One$35$$35$1 Int) ds_d3i4)) (ite (apply$35$$35$1 (as is$36$Main.Two Int) ds_d3i4) (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Main.Three Int) a$35$$35$a2Px) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Two$35$$35$1 Int) ds_d3i4)) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Two$35$$35$2 Int) ds_d3i4)) (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Main.Four Int) a$35$$35$a2Px) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Three$35$$35$1 Int) ds_d3i4)) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Three$35$$35$2 Int) ds_d3i4)) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Three$35$$35$3 Int) ds_d3i4)))))) (= lq_anf$36$$35$$35$7205759403792806597$35$$35$d3nD (apply$35$$35$0 (apply$35$$35$0 (as Main.consDigit Int) a$35$$35$a2Px) ds_d3i4)))))
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.One Int) ds_d3i4))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.One Int) ds_d3i4)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Empty Int) ds_d3hF))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Empty Int) ds_d3hF)))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Single Int) ds_d3hF))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Single Int) ds_d3hF)))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.One Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$1 Int) ds_d3hF)))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.One Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$1 Int) ds_d3hF))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Empty Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$2 Int) ds_d3hF)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Empty Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$2 Int) ds_d3hF))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.One Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$3 Int) ds_d3hF)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.One Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$3 Int) ds_d3hF))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Two Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$3 Int) ds_d3hF)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Two Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$3 Int) ds_d3hF))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Three Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$3 Int) ds_d3hF)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Three Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$3 Int) ds_d3hF))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Empty Int) ds_d3hF))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Empty Int) ds_d3hF)))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Single Int) ds_d3hF))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Single Int) ds_d3hF)))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.One Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$1 Int) ds_d3hF)))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.One Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$1 Int) ds_d3hF))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.One Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$1 Int) ds_d3hF)))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.One Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$1 Int) ds_d3hF))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not false))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not false))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not false))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not (not true))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Empty Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$2 Int) ds_d3hF)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Empty Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$2 Int) ds_d3hF))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.One Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$3 Int) ds_d3hF)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.One Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$3 Int) ds_d3hF))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Two Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$3 Int) ds_d3hF)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Two Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$3 Int) ds_d3hF))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Three Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$3 Int) ds_d3hF)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Three Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$3 Int) ds_d3hF))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= VV$35$$35$F$35$$35$120 ds_d3i4)))
(pop 1)
(pop 1)
(push 1)
(assert (and (and (and (= lq_anf$36$$35$$35$7205759403792806596$35$$35$d3nC ds_d3i4) (and (and (and (and (and (and (and (= (apply$35$$35$1 (as is$36$Main.Four Int) lq_anf$36$$35$$35$7205759403792806596$35$$35$d3nC) false) (= (apply$35$$35$1 (as is$36$Main.Three Int) lq_anf$36$$35$$35$7205759403792806596$35$$35$d3nC) false)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Two$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792806596$35$$35$d3nC) lq_anf$36$$35$$35$7205759403792806625$35$$35$d3o5)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Two$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792806596$35$$35$d3nC) lq_anf$36$$35$$35$7205759403792806624$35$$35$d3o4)) (= (apply$35$$35$1 (as is$36$Main.Two Int) lq_anf$36$$35$$35$7205759403792806596$35$$35$d3nC) true)) (= (apply$35$$35$1 (as is$36$Main.One Int) lq_anf$36$$35$$35$7205759403792806596$35$$35$d3nC) false)) (= (apply$35$$35$0 (as Main.digitSize Int) lq_anf$36$$35$$35$7205759403792806596$35$$35$d3nC) 2)) (= lq_anf$36$$35$$35$7205759403792806596$35$$35$d3nC (apply$35$$35$0 (apply$35$$35$0 (as Main.Two Int) lq_anf$36$$35$$35$7205759403792806624$35$$35$d3o4) lq_anf$36$$35$$35$7205759403792806625$35$$35$d3o5)))) (and (= lq_anf$36$$35$$35$7205759403792806596$35$$35$d3nC (apply$35$$35$0 (apply$35$$35$0 (as Main.Two Int) lq_anf$36$$35$$35$7205759403792806624$35$$35$d3o4) lq_anf$36$$35$$35$7205759403792806625$35$$35$d3o5)) (and (and (and (and (and (and (and (= (apply$35$$35$1 (as is$36$Main.Four Int) lq_anf$36$$35$$35$7205759403792806596$35$$35$d3nC) false) (= (apply$35$$35$1 (as is$36$Main.Three Int) lq_anf$36$$35$$35$7205759403792806596$35$$35$d3nC) false)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Two$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792806596$35$$35$d3nC) lq_anf$36$$35$$35$7205759403792806625$35$$35$d3o5)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Two$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792806596$35$$35$d3nC) lq_anf$36$$35$$35$7205759403792806624$35$$35$d3o4)) (= (apply$35$$35$1 (as is$36$Main.Two Int) lq_anf$36$$35$$35$7205759403792806596$35$$35$d3nC) true)) (= (apply$35$$35$1 (as is$36$Main.One Int) lq_anf$36$$35$$35$7205759403792806596$35$$35$d3nC) false)) (= (apply$35$$35$0 (as Main.digitSize Int) lq_anf$36$$35$$35$7205759403792806596$35$$35$d3nC) 2)) (= lq_anf$36$$35$$35$7205759403792806596$35$$35$d3nC (apply$35$$35$0 (apply$35$$35$0 (as Main.Two Int) lq_anf$36$$35$$35$7205759403792806624$35$$35$d3o4) lq_anf$36$$35$$35$7205759403792806625$35$$35$d3o5)))))))
(assert true)
(assert true)
(assert (and (= lq_anf$36$$35$$35$7205759403792806596$35$$35$d3nC ds_d3i4)))
(push 1)
(assert (and (and (=> (apply$35$$35$1 isAdmit ProofComb.QED) false) (=> (not (apply$35$$35$1 isAdmit ProofComb.QED)) true))))
(assert (and (and (and (and (= (apply$35$$35$0 (as Main.digitSize Int) lq_anf$36$$35$$35$7205759403792806597$35$$35$d3nD) (+ (apply$35$$35$0 (as Main.digitSize Int) ds_d3i4) 1)) (= lq_anf$36$$35$$35$7205759403792806597$35$$35$d3nD (apply$35$$35$0 (apply$35$$35$0 (as Main.consDigit Int) a$35$$35$a2Px) ds_d3i4))) (= lq_anf$36$$35$$35$7205759403792806597$35$$35$d3nD (ite (apply$35$$35$1 (as is$36$Main.One Int) ds_d3i4) (apply$35$$35$0 (apply$35$$35$0 (as Main.Two Int) a$35$$35$a2Px) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.One$35$$35$1 Int) ds_d3i4)) (ite (apply$35$$35$1 (as is$36$Main.Two Int) ds_d3i4) (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Main.Three Int) a$35$$35$a2Px) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Two$35$$35$1 Int) ds_d3i4)) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Two$35$$35$2 Int) ds_d3i4)) (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Main.Four Int) a$35$$35$a2Px) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Three$35$$35$1 Int) ds_d3i4)) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Three$35$$35$2 Int) ds_d3i4)) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Three$35$$35$3 Int) ds_d3i4)))))) (= lq_anf$36$$35$$35$7205759403792806597$35$$35$d3nD (apply$35$$35$0 (apply$35$$35$0 (as Main.consDigit Int) a$35$$35$a2Px) ds_d3i4)))))
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.One Int) ds_d3i4))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.One Int) ds_d3i4)))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Two Int) ds_d3i4))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Two Int) ds_d3i4)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Empty Int) ds_d3hF))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Empty Int) ds_d3hF)))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Single Int) ds_d3hF))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Single Int) ds_d3hF)))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.One Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$1 Int) ds_d3hF)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.One Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$1 Int) ds_d3hF))))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Two Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$1 Int) ds_d3hF)))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Two Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$1 Int) ds_d3hF))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Empty Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$2 Int) ds_d3hF)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Empty Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$2 Int) ds_d3hF))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.One Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$3 Int) ds_d3hF)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.One Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$3 Int) ds_d3hF))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Two Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$3 Int) ds_d3hF)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Two Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$3 Int) ds_d3hF))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Three Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$3 Int) ds_d3hF)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Three Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$3 Int) ds_d3hF))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Empty Int) ds_d3hF))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Empty Int) ds_d3hF)))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Single Int) ds_d3hF))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Single Int) ds_d3hF)))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.One Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$1 Int) ds_d3hF)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.One Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$1 Int) ds_d3hF))))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Two Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$1 Int) ds_d3hF)))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Two Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$1 Int) ds_d3hF))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.One Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$1 Int) ds_d3hF)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.One Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$1 Int) ds_d3hF))))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Two Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$1 Int) ds_d3hF)))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Two Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$1 Int) ds_d3hF))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not false))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not false))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not false))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not false))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not (not true))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Empty Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$2 Int) ds_d3hF)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Empty Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$2 Int) ds_d3hF))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.One Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$3 Int) ds_d3hF)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.One Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$3 Int) ds_d3hF))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Two Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$3 Int) ds_d3hF)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Two Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$3 Int) ds_d3hF))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Three Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$3 Int) ds_d3hF)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Three Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$3 Int) ds_d3hF))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= VV$35$$35$F$35$$35$114 ds_d3i4)))
(pop 1)
(pop 1)
(push 1)
(assert (and (and (and (= lq_anf$36$$35$$35$7205759403792806596$35$$35$d3nC ds_d3i4) (and (and (and (and (and (and (and (and (= (apply$35$$35$1 (as is$36$Main.Four Int) lq_anf$36$$35$$35$7205759403792806596$35$$35$d3nC) false) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Three$35$$35$3 Int) lq_anf$36$$35$$35$7205759403792806596$35$$35$d3nC) lq_anf$36$$35$$35$7205759403792806629$35$$35$d3o9)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Three$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792806596$35$$35$d3nC) lq_anf$36$$35$$35$7205759403792806628$35$$35$d3o8)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Three$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792806596$35$$35$d3nC) lq_anf$36$$35$$35$7205759403792806627$35$$35$d3o7)) (= (apply$35$$35$1 (as is$36$Main.Three Int) lq_anf$36$$35$$35$7205759403792806596$35$$35$d3nC) true)) (= (apply$35$$35$1 (as is$36$Main.Two Int) lq_anf$36$$35$$35$7205759403792806596$35$$35$d3nC) false)) (= (apply$35$$35$1 (as is$36$Main.One Int) lq_anf$36$$35$$35$7205759403792806596$35$$35$d3nC) false)) (= (apply$35$$35$0 (as Main.digitSize Int) lq_anf$36$$35$$35$7205759403792806596$35$$35$d3nC) 3)) (= lq_anf$36$$35$$35$7205759403792806596$35$$35$d3nC (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Main.Three Int) lq_anf$36$$35$$35$7205759403792806627$35$$35$d3o7) lq_anf$36$$35$$35$7205759403792806628$35$$35$d3o8) lq_anf$36$$35$$35$7205759403792806629$35$$35$d3o9)))) (and (= lq_anf$36$$35$$35$7205759403792806596$35$$35$d3nC (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Main.Three Int) lq_anf$36$$35$$35$7205759403792806627$35$$35$d3o7) lq_anf$36$$35$$35$7205759403792806628$35$$35$d3o8) lq_anf$36$$35$$35$7205759403792806629$35$$35$d3o9)) (and (and (and (and (and (and (and (and (= (apply$35$$35$1 (as is$36$Main.Four Int) lq_anf$36$$35$$35$7205759403792806596$35$$35$d3nC) false) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Three$35$$35$3 Int) lq_anf$36$$35$$35$7205759403792806596$35$$35$d3nC) lq_anf$36$$35$$35$7205759403792806629$35$$35$d3o9)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Three$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792806596$35$$35$d3nC) lq_anf$36$$35$$35$7205759403792806628$35$$35$d3o8)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Three$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792806596$35$$35$d3nC) lq_anf$36$$35$$35$7205759403792806627$35$$35$d3o7)) (= (apply$35$$35$1 (as is$36$Main.Three Int) lq_anf$36$$35$$35$7205759403792806596$35$$35$d3nC) true)) (= (apply$35$$35$1 (as is$36$Main.Two Int) lq_anf$36$$35$$35$7205759403792806596$35$$35$d3nC) false)) (= (apply$35$$35$1 (as is$36$Main.One Int) lq_anf$36$$35$$35$7205759403792806596$35$$35$d3nC) false)) (= (apply$35$$35$0 (as Main.digitSize Int) lq_anf$36$$35$$35$7205759403792806596$35$$35$d3nC) 3)) (= lq_anf$36$$35$$35$7205759403792806596$35$$35$d3nC (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Main.Three Int) lq_anf$36$$35$$35$7205759403792806627$35$$35$d3o7) lq_anf$36$$35$$35$7205759403792806628$35$$35$d3o8) lq_anf$36$$35$$35$7205759403792806629$35$$35$d3o9)))))))
(assert true)
(assert true)
(assert true)
(assert (and (= lq_anf$36$$35$$35$7205759403792806596$35$$35$d3nC ds_d3i4)))
(push 1)
(assert (and (and (=> (apply$35$$35$1 isAdmit ProofComb.QED) false) (=> (not (apply$35$$35$1 isAdmit ProofComb.QED)) true))))
(assert (and (and (and (and (= (apply$35$$35$0 (as Main.digitSize Int) lq_anf$36$$35$$35$7205759403792806597$35$$35$d3nD) (+ (apply$35$$35$0 (as Main.digitSize Int) ds_d3i4) 1)) (= lq_anf$36$$35$$35$7205759403792806597$35$$35$d3nD (apply$35$$35$0 (apply$35$$35$0 (as Main.consDigit Int) a$35$$35$a2Px) ds_d3i4))) (= lq_anf$36$$35$$35$7205759403792806597$35$$35$d3nD (ite (apply$35$$35$1 (as is$36$Main.One Int) ds_d3i4) (apply$35$$35$0 (apply$35$$35$0 (as Main.Two Int) a$35$$35$a2Px) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.One$35$$35$1 Int) ds_d3i4)) (ite (apply$35$$35$1 (as is$36$Main.Two Int) ds_d3i4) (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Main.Three Int) a$35$$35$a2Px) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Two$35$$35$1 Int) ds_d3i4)) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Two$35$$35$2 Int) ds_d3i4)) (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Main.Four Int) a$35$$35$a2Px) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Three$35$$35$1 Int) ds_d3i4)) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Three$35$$35$2 Int) ds_d3i4)) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Three$35$$35$3 Int) ds_d3i4)))))) (= lq_anf$36$$35$$35$7205759403792806597$35$$35$d3nD (apply$35$$35$0 (apply$35$$35$0 (as Main.consDigit Int) a$35$$35$a2Px) ds_d3i4)))))
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.One Int) ds_d3i4))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.One Int) ds_d3i4)))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Two Int) ds_d3i4))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Two Int) ds_d3i4)))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Empty Int) ds_d3hF))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Empty Int) ds_d3hF)))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Single Int) ds_d3hF))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Single Int) ds_d3hF)))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.One Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$1 Int) ds_d3hF)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.One Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$1 Int) ds_d3hF))))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Two Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$1 Int) ds_d3hF)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Two Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$1 Int) ds_d3hF))))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Three Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$1 Int) ds_d3hF)))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Three Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$1 Int) ds_d3hF))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Empty Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$2 Int) ds_d3hF)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Empty Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$2 Int) ds_d3hF))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.One Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$3 Int) ds_d3hF)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.One Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$3 Int) ds_d3hF))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Two Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$3 Int) ds_d3hF)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Two Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$3 Int) ds_d3hF))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Three Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$3 Int) ds_d3hF)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Three Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$3 Int) ds_d3hF))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Empty Int) ds_d3hF))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Empty Int) ds_d3hF)))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Single Int) ds_d3hF))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Single Int) ds_d3hF)))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.One Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$1 Int) ds_d3hF)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.One Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$1 Int) ds_d3hF))))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Two Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$1 Int) ds_d3hF)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Two Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$1 Int) ds_d3hF))))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Three Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$1 Int) ds_d3hF)))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Three Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$1 Int) ds_d3hF))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.One Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$1 Int) ds_d3hF)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.One Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$1 Int) ds_d3hF))))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Two Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$1 Int) ds_d3hF)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Two Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$1 Int) ds_d3hF))))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not false))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not false))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not false))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not false))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not false))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Empty Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$2 Int) ds_d3hF)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Empty Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$2 Int) ds_d3hF))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.One Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$3 Int) ds_d3hF)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.One Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$3 Int) ds_d3hF))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Two Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$3 Int) ds_d3hF)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Two Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$3 Int) ds_d3hF))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Three Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$3 Int) ds_d3hF)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Three Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$3 Int) ds_d3hF))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= VV$35$$35$F$35$$35$108 ds_d3i4)))
(pop 1)
(pop 1)
(push 1)
(assert (and (= lq_anf$36$$35$$35$7205759403792806622$35$$35$d3o2 (+ lq_anf$36$$35$$35$7205759403792806620$35$$35$d3o0 lq_anf$36$$35$$35$7205759403792806621$35$$35$d3o1))))
(assert (and (and (and (= lq_anf$36$$35$$35$7205759403792806621$35$$35$d3o1 (apply$35$$35$0 (apply$35$$35$0 (as Main.digitS Int) f$35$$35$a2Pw) sf$35$$35$a2PH)) (= lq_anf$36$$35$$35$7205759403792806621$35$$35$d3o1 (ite (apply$35$$35$1 (as is$36$Main.One Int) sf$35$$35$a2PH) (apply$35$$35$0 f$35$$35$a2Pw (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.One$35$$35$1 Int) sf$35$$35$a2PH)) (ite (apply$35$$35$1 (as is$36$Main.Two Int) sf$35$$35$a2PH) (+ (apply$35$$35$0 f$35$$35$a2Pw (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Two$35$$35$1 Int) sf$35$$35$a2PH)) (apply$35$$35$0 f$35$$35$a2Pw (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Two$35$$35$2 Int) sf$35$$35$a2PH))) (ite (apply$35$$35$1 (as is$36$Main.Three Int) sf$35$$35$a2PH) (+ (+ (apply$35$$35$0 f$35$$35$a2Pw (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Three$35$$35$1 Int) sf$35$$35$a2PH)) (apply$35$$35$0 f$35$$35$a2Pw (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Three$35$$35$2 Int) sf$35$$35$a2PH))) (apply$35$$35$0 f$35$$35$a2Pw (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Three$35$$35$3 Int) sf$35$$35$a2PH))) (+ (+ (+ (apply$35$$35$0 f$35$$35$a2Pw (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Four$35$$35$1 Int) sf$35$$35$a2PH)) (apply$35$$35$0 f$35$$35$a2Pw (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Four$35$$35$2 Int) sf$35$$35$a2PH))) (apply$35$$35$0 f$35$$35$a2Pw (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Four$35$$35$3 Int) sf$35$$35$a2PH))) (apply$35$$35$0 f$35$$35$a2Pw (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Four$35$$35$4 Int) sf$35$$35$a2PH)))))))) (= lq_anf$36$$35$$35$7205759403792806621$35$$35$d3o1 (apply$35$$35$0 (apply$35$$35$0 (as Main.digitS Int) f$35$$35$a2Pw) sf$35$$35$a2PH)))))
(assert (and (= lq_anf$36$$35$$35$7205759403792806620$35$$35$d3o0 (+ lq_anf$36$$35$$35$7205759403792806617$35$$35$d3nX lq_anf$36$$35$$35$7205759403792806619$35$$35$d3nZ))))
(assert (and (and (and (= lq_anf$36$$35$$35$7205759403792806619$35$$35$d3nZ (apply$35$$35$0 (apply$35$$35$0 (as Main.nodeS Int) f$35$$35$a2Pw) lq_anf$36$$35$$35$7205759403792806618$35$$35$d3nY)) (= lq_anf$36$$35$$35$7205759403792806619$35$$35$d3nZ (ite (apply$35$$35$1 (as is$36$Main.Node2 Int) lq_anf$36$$35$$35$7205759403792806618$35$$35$d3nY) (+ (apply$35$$35$0 f$35$$35$a2Pw (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Node2$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792806618$35$$35$d3nY)) (apply$35$$35$0 f$35$$35$a2Pw (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Node2$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792806618$35$$35$d3nY))) (+ (+ (apply$35$$35$0 f$35$$35$a2Pw (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Node3$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792806618$35$$35$d3nY)) (apply$35$$35$0 f$35$$35$a2Pw (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Node3$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792806618$35$$35$d3nY))) (apply$35$$35$0 f$35$$35$a2Pw (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Node3$35$$35$3 Int) lq_anf$36$$35$$35$7205759403792806618$35$$35$d3nY)))))) (= lq_anf$36$$35$$35$7205759403792806619$35$$35$d3nZ (apply$35$$35$0 (apply$35$$35$0 (as Main.nodeS Int) f$35$$35$a2Pw) lq_anf$36$$35$$35$7205759403792806618$35$$35$d3nY)))))
(assert (and (and (and (and (and (and (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Node3$35$$35$3 Int) lq_anf$36$$35$$35$7205759403792806618$35$$35$d3nY) e$35$$35$a2PF) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Node3$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792806618$35$$35$d3nY) d$35$$35$a2PE)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Node3$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792806618$35$$35$d3nY) c$35$$35$a2PD)) (= (apply$35$$35$1 (as is$36$Main.Node3 Int) lq_anf$36$$35$$35$7205759403792806618$35$$35$d3nY) true)) (= (apply$35$$35$1 (as is$36$Main.Node2 Int) lq_anf$36$$35$$35$7205759403792806618$35$$35$d3nY) false)) (= lq_anf$36$$35$$35$7205759403792806618$35$$35$d3nY (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Main.Node3 Int) c$35$$35$a2PD) d$35$$35$a2PE) e$35$$35$a2PF)))))
(assert (and (= lq_anf$36$$35$$35$7205759403792806617$35$$35$d3nX (+ lq_anf$36$$35$$35$7205759403792806614$35$$35$d3nU lq_anf$36$$35$$35$7205759403792806616$35$$35$d3nW))))
(assert (and (and (and (= lq_anf$36$$35$$35$7205759403792806616$35$$35$d3nW (apply$35$$35$0 (apply$35$$35$0 (as Main.size Int) lq_anf$36$$35$$35$7205759403792806615$35$$35$d3nV) m$35$$35$a2PG)) (= lq_anf$36$$35$$35$7205759403792806616$35$$35$d3nW (ite (apply$35$$35$1 (as is$36$Main.Empty Int) m$35$$35$a2PG) 0 (ite (apply$35$$35$1 (as is$36$Main.Single Int) m$35$$35$a2PG) (apply$35$$35$0 lq_anf$36$$35$$35$7205759403792806615$35$$35$d3nV (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Single$35$$35$1 Int) m$35$$35$a2PG)) (+ (+ (apply$35$$35$0 (apply$35$$35$0 (as Main.digitS Int) lq_anf$36$$35$$35$7205759403792806615$35$$35$d3nV) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$1 Int) m$35$$35$a2PG)) (apply$35$$35$0 (apply$35$$35$0 (as Main.size Int) (apply$35$$35$0 (as Main.nodeS Int) lq_anf$36$$35$$35$7205759403792806615$35$$35$d3nV)) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$2 Int) m$35$$35$a2PG))) (apply$35$$35$0 (apply$35$$35$0 (as Main.digitS Int) lq_anf$36$$35$$35$7205759403792806615$35$$35$d3nV) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$3 Int) m$35$$35$a2PG))))))) (= lq_anf$36$$35$$35$7205759403792806616$35$$35$d3nW (apply$35$$35$0 (apply$35$$35$0 (as Main.size Int) lq_anf$36$$35$$35$7205759403792806615$35$$35$d3nV) m$35$$35$a2PG)))))
(assert (and (= lq_anf$36$$35$$35$7205759403792806615$35$$35$d3nV (apply$35$$35$0 (as Main.nodeS Int) f$35$$35$a2Pw))))
(assert (and (= lq_anf$36$$35$$35$7205759403792806614$35$$35$d3nU (+ lq_anf$36$$35$$35$7205759403792806612$35$$35$d3nS lq_anf$36$$35$$35$7205759403792806613$35$$35$d3nT))))
(assert (and (= lq_anf$36$$35$$35$7205759403792806613$35$$35$d3nT (apply$35$$35$0 f$35$$35$a2Pw b$35$$35$a2PC))))
(assert (and (= lq_anf$36$$35$$35$7205759403792806612$35$$35$d3nS (apply$35$$35$0 f$35$$35$a2Pw a$35$$35$a2Px))))
(assert (and (= (apply$35$$35$0 (apply$35$$35$0 (as Main.size Int) lq_anf$36$$35$$35$7205759403792806608$35$$35$d3nO) (apply$35$$35$0 (apply$35$$35$0 (as Main.$60$$124$ Int) lq_anf$36$$35$$35$7205759403792806609$35$$35$d3nP) m$35$$35$a2PG)) (+ (apply$35$$35$0 (apply$35$$35$0 (as Main.size Int) lq_anf$36$$35$$35$7205759403792806608$35$$35$d3nO) m$35$$35$a2PG) (apply$35$$35$0 lq_anf$36$$35$$35$7205759403792806608$35$$35$d3nO lq_anf$36$$35$$35$7205759403792806609$35$$35$d3nP)))))
(assert (and (and (and (and (and (and (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Node3$35$$35$3 Int) lq_anf$36$$35$$35$7205759403792806609$35$$35$d3nP) e$35$$35$a2PF) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Node3$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792806609$35$$35$d3nP) d$35$$35$a2PE)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Node3$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792806609$35$$35$d3nP) c$35$$35$a2PD)) (= (apply$35$$35$1 (as is$36$Main.Node3 Int) lq_anf$36$$35$$35$7205759403792806609$35$$35$d3nP) true)) (= (apply$35$$35$1 (as is$36$Main.Node2 Int) lq_anf$36$$35$$35$7205759403792806609$35$$35$d3nP) false)) (= lq_anf$36$$35$$35$7205759403792806609$35$$35$d3nP (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Main.Node3 Int) c$35$$35$a2PD) d$35$$35$a2PE) e$35$$35$a2PF)))))
(assert (and (= lq_anf$36$$35$$35$7205759403792806608$35$$35$d3nO (apply$35$$35$0 (as Main.nodeS Int) f$35$$35$a2Pw))))
(assert (and (= lq_anf$36$$35$$35$7205759403792806607$35$$35$d3nN (+ lq_anf$36$$35$$35$7205759403792806605$35$$35$d3nL lq_anf$36$$35$$35$7205759403792806606$35$$35$d3nM))))
(assert (and (and (and (= lq_anf$36$$35$$35$7205759403792806606$35$$35$d3nM (apply$35$$35$0 (apply$35$$35$0 (as Main.digitS Int) f$35$$35$a2Pw) sf$35$$35$a2PH)) (= lq_anf$36$$35$$35$7205759403792806606$35$$35$d3nM (ite (apply$35$$35$1 (as is$36$Main.One Int) sf$35$$35$a2PH) (apply$35$$35$0 f$35$$35$a2Pw (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.One$35$$35$1 Int) sf$35$$35$a2PH)) (ite (apply$35$$35$1 (as is$36$Main.Two Int) sf$35$$35$a2PH) (+ (apply$35$$35$0 f$35$$35$a2Pw (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Two$35$$35$1 Int) sf$35$$35$a2PH)) (apply$35$$35$0 f$35$$35$a2Pw (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Two$35$$35$2 Int) sf$35$$35$a2PH))) (ite (apply$35$$35$1 (as is$36$Main.Three Int) sf$35$$35$a2PH) (+ (+ (apply$35$$35$0 f$35$$35$a2Pw (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Three$35$$35$1 Int) sf$35$$35$a2PH)) (apply$35$$35$0 f$35$$35$a2Pw (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Three$35$$35$2 Int) sf$35$$35$a2PH))) (apply$35$$35$0 f$35$$35$a2Pw (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Three$35$$35$3 Int) sf$35$$35$a2PH))) (+ (+ (+ (apply$35$$35$0 f$35$$35$a2Pw (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Four$35$$35$1 Int) sf$35$$35$a2PH)) (apply$35$$35$0 f$35$$35$a2Pw (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Four$35$$35$2 Int) sf$35$$35$a2PH))) (apply$35$$35$0 f$35$$35$a2Pw (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Four$35$$35$3 Int) sf$35$$35$a2PH))) (apply$35$$35$0 f$35$$35$a2Pw (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Four$35$$35$4 Int) sf$35$$35$a2PH)))))))) (= lq_anf$36$$35$$35$7205759403792806606$35$$35$d3nM (apply$35$$35$0 (apply$35$$35$0 (as Main.digitS Int) f$35$$35$a2Pw) sf$35$$35$a2PH)))))
(assert (and (= lq_anf$36$$35$$35$7205759403792806605$35$$35$d3nL (+ lq_anf$36$$35$$35$7205759403792806600$35$$35$d3nG lq_anf$36$$35$$35$7205759403792806604$35$$35$d3nK))))
(assert (and (and (and (= lq_anf$36$$35$$35$7205759403792806604$35$$35$d3nK (apply$35$$35$0 (apply$35$$35$0 (as Main.size Int) lq_anf$36$$35$$35$7205759403792806601$35$$35$d3nH) lq_anf$36$$35$$35$7205759403792806603$35$$35$d3nJ)) (= lq_anf$36$$35$$35$7205759403792806604$35$$35$d3nK (ite (apply$35$$35$1 (as is$36$Main.Empty Int) lq_anf$36$$35$$35$7205759403792806603$35$$35$d3nJ) 0 (ite (apply$35$$35$1 (as is$36$Main.Single Int) lq_anf$36$$35$$35$7205759403792806603$35$$35$d3nJ) (apply$35$$35$0 lq_anf$36$$35$$35$7205759403792806601$35$$35$d3nH (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Single$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792806603$35$$35$d3nJ)) (+ (+ (apply$35$$35$0 (apply$35$$35$0 (as Main.digitS Int) lq_anf$36$$35$$35$7205759403792806601$35$$35$d3nH) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792806603$35$$35$d3nJ)) (apply$35$$35$0 (apply$35$$35$0 (as Main.size Int) (apply$35$$35$0 (as Main.nodeS Int) lq_anf$36$$35$$35$7205759403792806601$35$$35$d3nH)) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792806603$35$$35$d3nJ))) (apply$35$$35$0 (apply$35$$35$0 (as Main.digitS Int) lq_anf$36$$35$$35$7205759403792806601$35$$35$d3nH) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$3 Int) lq_anf$36$$35$$35$7205759403792806603$35$$35$d3nJ))))))) (= lq_anf$36$$35$$35$7205759403792806604$35$$35$d3nK (apply$35$$35$0 (apply$35$$35$0 (as Main.size Int) lq_anf$36$$35$$35$7205759403792806601$35$$35$d3nH) lq_anf$36$$35$$35$7205759403792806603$35$$35$d3nJ)))))
(assert (and (and (and (= lq_anf$36$$35$$35$7205759403792806603$35$$35$d3nJ (apply$35$$35$0 (apply$35$$35$0 (as Main.$60$$124$ Int) lq_anf$36$$35$$35$7205759403792806602$35$$35$d3nI) m$35$$35$a2PG)) (= lq_anf$36$$35$$35$7205759403792806603$35$$35$d3nJ (ite (apply$35$$35$1 (as is$36$Main.Empty Int) m$35$$35$a2PG) (apply$35$$35$0 (as Main.Single Int) lq_anf$36$$35$$35$7205759403792806602$35$$35$d3nI) (ite (apply$35$$35$1 (as is$36$Main.Single Int) m$35$$35$a2PG) (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Main.Deep Int) (apply$35$$35$0 (as Main.One Int) lq_anf$36$$35$$35$7205759403792806602$35$$35$d3nI)) (as Main.Empty Int)) (apply$35$$35$0 (as Main.One Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Single$35$$35$1 Int) m$35$$35$a2PG))) (ite (apply$35$$35$1 (as is$36$Main.One Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$1 Int) m$35$$35$a2PG)) (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Main.Deep Int) (apply$35$$35$0 (apply$35$$35$0 (as Main.consDigit Int) lq_anf$36$$35$$35$7205759403792806602$35$$35$d3nI) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$1 Int) m$35$$35$a2PG))) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$2 Int) m$35$$35$a2PG)) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$3 Int) m$35$$35$a2PG)) (ite (apply$35$$35$1 (as is$36$Main.Two Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$1 Int) m$35$$35$a2PG)) (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Main.Deep Int) (apply$35$$35$0 (apply$35$$35$0 (as Main.consDigit Int) lq_anf$36$$35$$35$7205759403792806602$35$$35$d3nI) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$1 Int) m$35$$35$a2PG))) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$2 Int) m$35$$35$a2PG)) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$3 Int) m$35$$35$a2PG)) (ite (apply$35$$35$1 (as is$36$Main.Three Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$1 Int) m$35$$35$a2PG)) (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Main.Deep Int) (apply$35$$35$0 (apply$35$$35$0 (as Main.consDigit Int) lq_anf$36$$35$$35$7205759403792806602$35$$35$d3nI) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$1 Int) m$35$$35$a2PG))) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$2 Int) m$35$$35$a2PG)) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$3 Int) m$35$$35$a2PG)) (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Main.Deep Int) (apply$35$$35$0 (apply$35$$35$0 (as Main.Two Int) lq_anf$36$$35$$35$7205759403792806602$35$$35$d3nI) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Four$35$$35$1 Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$1 Int) m$35$$35$a2PG)))) (apply$35$$35$0 (apply$35$$35$0 (as Main.$60$$124$ Int) (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Main.Node3 Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Four$35$$35$2 Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$1 Int) m$35$$35$a2PG))) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Four$35$$35$3 Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$1 Int) m$35$$35$a2PG))) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Four$35$$35$4 Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$1 Int) m$35$$35$a2PG)))) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$2 Int) m$35$$35$a2PG))) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$3 Int) m$35$$35$a2PG))))))))) (= lq_anf$36$$35$$35$7205759403792806603$35$$35$d3nJ (apply$35$$35$0 (apply$35$$35$0 (as Main.$60$$124$ Int) lq_anf$36$$35$$35$7205759403792806602$35$$35$d3nI) m$35$$35$a2PG)))))
(assert (and (and (and (and (and (and (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Node3$35$$35$3 Int) lq_anf$36$$35$$35$7205759403792806602$35$$35$d3nI) e$35$$35$a2PF) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Node3$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792806602$35$$35$d3nI) d$35$$35$a2PE)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Node3$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792806602$35$$35$d3nI) c$35$$35$a2PD)) (= (apply$35$$35$1 (as is$36$Main.Node3 Int) lq_anf$36$$35$$35$7205759403792806602$35$$35$d3nI) true)) (= (apply$35$$35$1 (as is$36$Main.Node2 Int) lq_anf$36$$35$$35$7205759403792806602$35$$35$d3nI) false)) (= lq_anf$36$$35$$35$7205759403792806602$35$$35$d3nI (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Main.Node3 Int) c$35$$35$a2PD) d$35$$35$a2PE) e$35$$35$a2PF)))))
(assert (and (= lq_anf$36$$35$$35$7205759403792806601$35$$35$d3nH (apply$35$$35$0 (as Main.nodeS Int) f$35$$35$a2Pw))))
(assert (and (= lq_anf$36$$35$$35$7205759403792806600$35$$35$d3nG (+ lq_anf$36$$35$$35$7205759403792806598$35$$35$d3nE lq_anf$36$$35$$35$7205759403792806599$35$$35$d3nF))))
(assert (and (= lq_anf$36$$35$$35$7205759403792806599$35$$35$d3nF (apply$35$$35$0 f$35$$35$a2Pw b$35$$35$a2PC))))
(assert (and (= lq_anf$36$$35$$35$7205759403792806598$35$$35$d3nE (apply$35$$35$0 f$35$$35$a2Pw a$35$$35$a2Px))))
(assert (and (and (and (= lq_anf$36$$35$$35$7205759403792806596$35$$35$d3nC ds_d3i4) (and (and (and (and (and (and (and (and (and (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Four$35$$35$4 Int) lq_anf$36$$35$$35$7205759403792806596$35$$35$d3nC) e$35$$35$a2PF) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Four$35$$35$3 Int) lq_anf$36$$35$$35$7205759403792806596$35$$35$d3nC) d$35$$35$a2PE)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Four$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792806596$35$$35$d3nC) c$35$$35$a2PD)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Four$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792806596$35$$35$d3nC) b$35$$35$a2PC)) (= (apply$35$$35$1 (as is$36$Main.Four Int) lq_anf$36$$35$$35$7205759403792806596$35$$35$d3nC) true)) (= (apply$35$$35$1 (as is$36$Main.Three Int) lq_anf$36$$35$$35$7205759403792806596$35$$35$d3nC) false)) (= (apply$35$$35$1 (as is$36$Main.Two Int) lq_anf$36$$35$$35$7205759403792806596$35$$35$d3nC) false)) (= (apply$35$$35$1 (as is$36$Main.One Int) lq_anf$36$$35$$35$7205759403792806596$35$$35$d3nC) false)) (= (apply$35$$35$0 (as Main.digitSize Int) lq_anf$36$$35$$35$7205759403792806596$35$$35$d3nC) 4)) (= lq_anf$36$$35$$35$7205759403792806596$35$$35$d3nC (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Main.Four Int) b$35$$35$a2PC) c$35$$35$a2PD) d$35$$35$a2PE) e$35$$35$a2PF)))) (and (= lq_anf$36$$35$$35$7205759403792806596$35$$35$d3nC (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Main.Four Int) b$35$$35$a2PC) c$35$$35$a2PD) d$35$$35$a2PE) e$35$$35$a2PF)) (and (and (and (and (and (and (and (and (and (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Four$35$$35$4 Int) lq_anf$36$$35$$35$7205759403792806596$35$$35$d3nC) e$35$$35$a2PF) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Four$35$$35$3 Int) lq_anf$36$$35$$35$7205759403792806596$35$$35$d3nC) d$35$$35$a2PE)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Four$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792806596$35$$35$d3nC) c$35$$35$a2PD)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Four$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792806596$35$$35$d3nC) b$35$$35$a2PC)) (= (apply$35$$35$1 (as is$36$Main.Four Int) lq_anf$36$$35$$35$7205759403792806596$35$$35$d3nC) true)) (= (apply$35$$35$1 (as is$36$Main.Three Int) lq_anf$36$$35$$35$7205759403792806596$35$$35$d3nC) false)) (= (apply$35$$35$1 (as is$36$Main.Two Int) lq_anf$36$$35$$35$7205759403792806596$35$$35$d3nC) false)) (= (apply$35$$35$1 (as is$36$Main.One Int) lq_anf$36$$35$$35$7205759403792806596$35$$35$d3nC) false)) (= (apply$35$$35$0 (as Main.digitSize Int) lq_anf$36$$35$$35$7205759403792806596$35$$35$d3nC) 4)) (= lq_anf$36$$35$$35$7205759403792806596$35$$35$d3nC (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Main.Four Int) b$35$$35$a2PC) c$35$$35$a2PD) d$35$$35$a2PE) e$35$$35$a2PF)))))))
(assert true)
(assert true)
(assert true)
(assert true)
(assert (and (= lq_anf$36$$35$$35$7205759403792806596$35$$35$d3nC ds_d3i4)))
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Empty Int) m$35$$35$a2PG))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Empty Int) m$35$$35$a2PG)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Empty Int) m$35$$35$a2PG))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Empty Int) m$35$$35$a2PG)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Empty Int) (apply$35$$35$0 (apply$35$$35$0 (as Main.$60$$124$ Int) lq_anf$36$$35$$35$7205759403792806609$35$$35$d3nP) m$35$$35$a2PG)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Empty Int) (apply$35$$35$0 (apply$35$$35$0 (as Main.$60$$124$ Int) lq_anf$36$$35$$35$7205759403792806609$35$$35$d3nP) m$35$$35$a2PG))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Empty Int) lq_anf$36$$35$$35$7205759403792806603$35$$35$d3nJ))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Empty Int) lq_anf$36$$35$$35$7205759403792806603$35$$35$d3nJ)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Empty Int) m$35$$35$a2PG))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Empty Int) m$35$$35$a2PG)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Empty Int) m$35$$35$a2PG))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Empty Int) m$35$$35$a2PG)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Node2 Int) lq_anf$36$$35$$35$7205759403792806618$35$$35$d3nY))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Node2 Int) lq_anf$36$$35$$35$7205759403792806618$35$$35$d3nY)))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.One Int) sf$35$$35$a2PH))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.One Int) sf$35$$35$a2PH)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Two Int) sf$35$$35$a2PH))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Two Int) sf$35$$35$a2PH)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Three Int) sf$35$$35$a2PH))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Three Int) sf$35$$35$a2PH)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Empty Int) m$35$$35$a2PG))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Empty Int) m$35$$35$a2PG)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (and (=> (apply$35$$35$1 isAdmit ProofComb.QED) false) (=> (not (apply$35$$35$1 isAdmit ProofComb.QED)) true))))
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Empty Int) m$35$$35$a2PG))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Empty Int) m$35$$35$a2PG)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Empty Int) m$35$$35$a2PG))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Empty Int) m$35$$35$a2PG)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Empty Int) (apply$35$$35$0 (apply$35$$35$0 (as Main.$60$$124$ Int) lq_anf$36$$35$$35$7205759403792806609$35$$35$d3nP) m$35$$35$a2PG)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Empty Int) (apply$35$$35$0 (apply$35$$35$0 (as Main.$60$$124$ Int) lq_anf$36$$35$$35$7205759403792806609$35$$35$d3nP) m$35$$35$a2PG))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Empty Int) lq_anf$36$$35$$35$7205759403792806603$35$$35$d3nJ))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Empty Int) lq_anf$36$$35$$35$7205759403792806603$35$$35$d3nJ)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Empty Int) m$35$$35$a2PG))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Empty Int) m$35$$35$a2PG)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Empty Int) m$35$$35$a2PG))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Empty Int) m$35$$35$a2PG)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Empty Int) ds_d3hF))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Empty Int) ds_d3hF)))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Single Int) ds_d3hF))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Single Int) ds_d3hF)))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.One Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$1 Int) ds_d3hF)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.One Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$1 Int) ds_d3hF))))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Two Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$1 Int) ds_d3hF)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Two Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$1 Int) ds_d3hF))))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Three Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$1 Int) ds_d3hF)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Three Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$1 Int) ds_d3hF))))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Empty Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$2 Int) ds_d3hF)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Empty Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$2 Int) ds_d3hF))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.One Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$3 Int) ds_d3hF)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.One Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$3 Int) ds_d3hF))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Two Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$3 Int) ds_d3hF)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Two Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$3 Int) ds_d3hF))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Three Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$3 Int) ds_d3hF)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Three Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$3 Int) ds_d3hF))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Empty Int) ds_d3hF))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Empty Int) ds_d3hF)))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Single Int) ds_d3hF))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Single Int) ds_d3hF)))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.One Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$1 Int) ds_d3hF)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.One Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$1 Int) ds_d3hF))))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Two Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$1 Int) ds_d3hF)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Two Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$1 Int) ds_d3hF))))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Three Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$1 Int) ds_d3hF)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Three Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$1 Int) ds_d3hF))))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Empty Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$2 Int) ds_d3hF)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Empty Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$2 Int) ds_d3hF))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Empty Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$2 Int) ds_d3hF)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Empty Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$2 Int) ds_d3hF))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Empty Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$2 Int) ds_d3hF)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Empty Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$2 Int) ds_d3hF))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Empty Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$2 Int) ds_d3hF)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Empty Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$2 Int) ds_d3hF))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not false))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Empty Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$2 Int) ds_d3hF)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Empty Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$2 Int) ds_d3hF))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Empty Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$2 Int) ds_d3hF)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Empty Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$2 Int) ds_d3hF))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not false))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Empty Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$2 Int) ds_d3hF)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Empty Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$2 Int) ds_d3hF))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Empty Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$2 Int) ds_d3hF)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Empty Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$2 Int) ds_d3hF))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not false))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not (not true))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Empty Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$2 Int) ds_d3hF)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Empty Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$2 Int) ds_d3hF))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Empty Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$2 Int) ds_d3hF)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Empty Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$2 Int) ds_d3hF))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Empty Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$2 Int) ds_d3hF)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Empty Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$2 Int) ds_d3hF))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Empty Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$2 Int) ds_d3hF)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Empty Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$2 Int) ds_d3hF))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Empty Int) (apply$35$$35$0 (apply$35$$35$0 (as Main.$60$$124$ Int) (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Main.Node3 Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Four$35$$35$2 Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$1 Int) ds_d3hF))) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Four$35$$35$3 Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$1 Int) ds_d3hF))) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Four$35$$35$4 Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$1 Int) ds_d3hF)))) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$2 Int) ds_d3hF))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Empty Int) (apply$35$$35$0 (apply$35$$35$0 (as Main.$60$$124$ Int) (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Main.Node3 Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Four$35$$35$2 Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$1 Int) ds_d3hF))) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Four$35$$35$3 Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$1 Int) ds_d3hF))) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Four$35$$35$4 Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$1 Int) ds_d3hF)))) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$2 Int) ds_d3hF)))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Empty Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$2 Int) ds_d3hF)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Empty Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$2 Int) ds_d3hF))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Empty Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$2 Int) ds_d3hF)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Empty Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$2 Int) ds_d3hF))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.One Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$3 Int) ds_d3hF)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.One Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$3 Int) ds_d3hF))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Two Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$3 Int) ds_d3hF)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Two Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$3 Int) ds_d3hF))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Three Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$3 Int) ds_d3hF)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Three Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Main.Deep$35$$35$3 Int) ds_d3hF))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Empty Int) m$35$$35$a2PG))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Empty Int) m$35$$35$a2PG)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (and (= VV$35$$35$F$35$$35$71 (+ lq_anf$36$$35$$35$7205759403792806620$35$$35$d3o0 lq_anf$36$$35$$35$7205759403792806621$35$$35$d3o1)) (= VV$35$$35$F$35$$35$71 lq_anf$36$$35$$35$7205759403792806622$35$$35$d3o2))))
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Empty Int) m$35$$35$a2PG))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Empty Int) m$35$$35$a2PG)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Empty Int) m$35$$35$a2PG))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Empty Int) m$35$$35$a2PG)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Empty Int) (apply$35$$35$0 (apply$35$$35$0 (as Main.$60$$124$ Int) lq_anf$36$$35$$35$7205759403792806609$35$$35$d3nP) m$35$$35$a2PG)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Empty Int) (apply$35$$35$0 (apply$35$$35$0 (as Main.$60$$124$ Int) lq_anf$36$$35$$35$7205759403792806609$35$$35$d3nP) m$35$$35$a2PG))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Empty Int) lq_anf$36$$35$$35$7205759403792806603$35$$35$d3nJ))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Empty Int) lq_anf$36$$35$$35$7205759403792806603$35$$35$d3nJ)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Empty Int) m$35$$35$a2PG))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Empty Int) m$35$$35$a2PG)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Empty Int) m$35$$35$a2PG))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Empty Int) m$35$$35$a2PG)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Empty Int) m$35$$35$a2PG))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Empty Int) m$35$$35$a2PG)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(pop 1)
(pop 1)
(pop 1)
(push 1)
(assert (and (= (apply$35$$35$0 (apply$35$$35$0 (as Main.size Int) lq_anf$36$$35$$35$7205759403792806630$35$$35$d3oa) (apply$35$$35$0 (apply$35$$35$0 (as Main.$60$$124$ Int) a$35$$35$a2Pu) t$35$$35$a2Pv)) (+ (apply$35$$35$0 (apply$35$$35$0 (as Main.size Int) lq_anf$36$$35$$35$7205759403792806630$35$$35$d3oa) t$35$$35$a2Pv) (apply$35$$35$0 lq_anf$36$$35$$35$7205759403792806630$35$$35$d3oa a$35$$35$a2Pu)))))
(assert (and (and (= lq_anf$36$$35$$35$7205759403792806630$35$$35$d3oa (as Main.to1 Int)) (= lq_anf$36$$35$$35$7205759403792806630$35$$35$d3oa (as Main.to1 Int)))))
(assert true)
(assert true)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Empty Int) t$35$$35$a2Pv))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Empty Int) t$35$$35$a2Pv)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Empty Int) t$35$$35$a2Pv))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Empty Int) t$35$$35$a2Pv)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Empty Int) t$35$$35$a2Pv))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Empty Int) t$35$$35$a2Pv)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Empty Int) t$35$$35$a2Pv))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Empty Int) t$35$$35$a2Pv)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Empty Int) (apply$35$$35$0 (apply$35$$35$0 (as Main.$60$$124$ Int) a$35$$35$a2Pu) t$35$$35$a2Pv)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Empty Int) (apply$35$$35$0 (apply$35$$35$0 (as Main.$60$$124$ Int) a$35$$35$a2Pu) t$35$$35$a2Pv))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Empty Int) t$35$$35$a2Pv))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Empty Int) t$35$$35$a2Pv)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Empty Int) t$35$$35$a2Pv))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Empty Int) t$35$$35$a2Pv)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Empty Int) (apply$35$$35$0 (apply$35$$35$0 (as Main.$60$$124$ Int) a$35$$35$a2Pu) t$35$$35$a2Pv)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Empty Int) (apply$35$$35$0 (apply$35$$35$0 (as Main.$60$$124$ Int) a$35$$35$a2Pu) t$35$$35$a2Pv))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert true)
(assert true)
(push 1)
(assert (and (and (and (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792806631$35$$35$d3ob) 0) (= lq_anf$36$$35$$35$7205759403792806631$35$$35$d3ob ds_d3i8)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792806631$35$$35$d3ob) 0))))
(assert (and (>= (apply$35$$35$0 (as len Int) ds_d3i8) 0)))
(push 1)
(assert (and (= VV$35$$35$F$35$$35$64 ProofComb.trivial)))
(assert (and (and (and (and (and (and (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792806631$35$$35$d3ob) 0) (= lq_anf$36$$35$$35$7205759403792806631$35$$35$d3ob ds_d3i8)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792806631$35$$35$d3ob) 0)) (and (and (and (and (and (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792806631$35$$35$d3ob) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792806631$35$$35$d3ob) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792806631$35$$35$d3ob) false)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792806631$35$$35$d3ob) true)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792806631$35$$35$d3ob) 0)) (= lq_anf$36$$35$$35$7205759403792806631$35$$35$d3ob (as GHC.Types.$91$$93$ Int)))) (and (= lq_anf$36$$35$$35$7205759403792806631$35$$35$d3ob (as GHC.Types.$91$$93$ Int)) (and (and (and (and (and (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792806631$35$$35$d3ob) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792806631$35$$35$d3ob) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792806631$35$$35$d3ob) false)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792806631$35$$35$d3ob) true)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792806631$35$$35$d3ob) 0)) (= lq_anf$36$$35$$35$7205759403792806631$35$$35$d3ob (as GHC.Types.$91$$93$ Int))))) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792806631$35$$35$d3ob) 0))))
(assert (and (and (and (and (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792806631$35$$35$d3ob) 0) (= lq_anf$36$$35$$35$7205759403792806631$35$$35$d3ob ds_d3i8)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792806631$35$$35$d3ob) 0)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792806631$35$$35$d3ob) 0))))
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) ds_d3i8))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert true)
(assert (and (= (apply$35$$35$0 (as len Int) xs$35$$35$a2P6) (apply$35$$35$0 (as Main.fingerTreeSize Int) (apply$35$$35$0 (as Main.from Int) xs$35$$35$a2P6)))))
(assert (and (= (apply$35$$35$0 (apply$35$$35$0 (as Main.size Int) (as Main.to1 Int)) (apply$35$$35$0 (apply$35$$35$0 (as Main.$60$$124$ Int) x$35$$35$a2P5) lq_anf$36$$35$$35$7205759403792806632$35$$35$d3oc)) (+ (apply$35$$35$0 (apply$35$$35$0 (as Main.size Int) (as Main.to1 Int)) lq_anf$36$$35$$35$7205759403792806632$35$$35$d3oc) (apply$35$$35$0 (as Main.to1 Int) x$35$$35$a2P5)))))
(assert (and (and (and (= lq_anf$36$$35$$35$7205759403792806632$35$$35$d3oc (apply$35$$35$0 (as Main.from Int) xs$35$$35$a2P6)) (= lq_anf$36$$35$$35$7205759403792806632$35$$35$d3oc (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a2P6) (as Main.Empty Int) (apply$35$$35$0 (apply$35$$35$0 (as Main.$60$$124$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) xs$35$$35$a2P6)) (apply$35$$35$0 (as Main.from Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a2P6)))))) (= lq_anf$36$$35$$35$7205759403792806632$35$$35$d3oc (apply$35$$35$0 (as Main.from Int) xs$35$$35$a2P6)))))
(assert (and (and (and (and (and (and (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792806631$35$$35$d3ob) 0) (= lq_anf$36$$35$$35$7205759403792806631$35$$35$d3ob ds_d3i8)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792806631$35$$35$d3ob) 0)) (and (and (and (and (and (and (and (and (and (and (and (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792806631$35$$35$d3ob) xs$35$$35$a2P6) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792806631$35$$35$d3ob) x$35$$35$a2P5)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792806631$35$$35$d3ob) xs$35$$35$a2P6)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792806631$35$$35$d3ob) x$35$$35$a2P5)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792806631$35$$35$d3ob) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792806631$35$$35$d3ob) false)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792806631$35$$35$d3ob) xs$35$$35$a2P6)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792806631$35$$35$d3ob) x$35$$35$a2P5)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792806631$35$$35$d3ob) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792806631$35$$35$d3ob) false)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792806631$35$$35$d3ob) (+ 1 (apply$35$$35$0 (as len Int) xs$35$$35$a2P6)))) (= lq_anf$36$$35$$35$7205759403792806631$35$$35$d3ob (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) x$35$$35$a2P5) xs$35$$35$a2P6)))) (and (= lq_anf$36$$35$$35$7205759403792806631$35$$35$d3ob (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) x$35$$35$a2P5) xs$35$$35$a2P6)) (and (and (and (and (and (and (and (and (and (and (and (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792806631$35$$35$d3ob) xs$35$$35$a2P6) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792806631$35$$35$d3ob) x$35$$35$a2P5)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792806631$35$$35$d3ob) xs$35$$35$a2P6)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792806631$35$$35$d3ob) x$35$$35$a2P5)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792806631$35$$35$d3ob) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792806631$35$$35$d3ob) false)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792806631$35$$35$d3ob) xs$35$$35$a2P6)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792806631$35$$35$d3ob) x$35$$35$a2P5)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792806631$35$$35$d3ob) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792806631$35$$35$d3ob) false)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792806631$35$$35$d3ob) (+ 1 (apply$35$$35$0 (as len Int) xs$35$$35$a2P6)))) (= lq_anf$36$$35$$35$7205759403792806631$35$$35$d3ob (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) x$35$$35$a2P5) xs$35$$35$a2P6))))) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792806631$35$$35$d3ob) 0))))
(assert (and (>= (apply$35$$35$0 (as len Int) xs$35$$35$a2P6) 0)))
(assert true)
(assert (and (and (and (and (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792806631$35$$35$d3ob) 0) (= lq_anf$36$$35$$35$7205759403792806631$35$$35$d3ob ds_d3i8)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792806631$35$$35$d3ob) 0)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792806631$35$$35$d3ob) 0))))
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) ds_d3i8))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) ds_d3i8)))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) ds_d3i8)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) ds_d3i8))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) ds_d3i8)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) ds_d3i8))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Empty Int) (apply$35$$35$0 (as Main.from Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) ds_d3i8))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Empty Int) (apply$35$$35$0 (as Main.from Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) ds_d3i8)))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) ds_d3i8)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) ds_d3i8))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) ds_d3i8)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) ds_d3i8))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Empty Int) (apply$35$$35$0 (as Main.from Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) ds_d3i8))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Empty Int) (apply$35$$35$0 (as Main.from Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) ds_d3i8)))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) ds_d3i8)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) ds_d3i8))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) ds_d3i8)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) ds_d3i8))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Empty Int) (apply$35$$35$0 (as Main.from Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) ds_d3i8))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Empty Int) (apply$35$$35$0 (as Main.from Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) ds_d3i8)))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Empty Int) (apply$35$$35$0 (apply$35$$35$0 (as Main.$60$$124$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) ds_d3i8)) (apply$35$$35$0 (as Main.from Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) ds_d3i8)))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Empty Int) (apply$35$$35$0 (apply$35$$35$0 (as Main.$60$$124$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) ds_d3i8)) (apply$35$$35$0 (as Main.from Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) ds_d3i8))))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a2P6))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a2P6)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a2P6))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a2P6)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a2P6))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a2P6)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Empty Int) (apply$35$$35$0 (as Main.from Int) xs$35$$35$a2P6)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Empty Int) (apply$35$$35$0 (as Main.from Int) xs$35$$35$a2P6))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Empty Int) lq_anf$36$$35$$35$7205759403792806632$35$$35$d3oc))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Empty Int) lq_anf$36$$35$$35$7205759403792806632$35$$35$d3oc)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Empty Int) lq_anf$36$$35$$35$7205759403792806632$35$$35$d3oc))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Empty Int) lq_anf$36$$35$$35$7205759403792806632$35$$35$d3oc)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Empty Int) (apply$35$$35$0 (apply$35$$35$0 (as Main.$60$$124$ Int) x$35$$35$a2P5) lq_anf$36$$35$$35$7205759403792806632$35$$35$d3oc)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Empty Int) (apply$35$$35$0 (apply$35$$35$0 (as Main.$60$$124$ Int) x$35$$35$a2P5) lq_anf$36$$35$$35$7205759403792806632$35$$35$d3oc))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Empty Int) lq_anf$36$$35$$35$7205759403792806632$35$$35$d3oc))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Empty Int) lq_anf$36$$35$$35$7205759403792806632$35$$35$d3oc)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a2P6))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a2P6)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(pop 1)
(push 1)
(assert (and (= (apply$35$$35$0 (as len Int) xs$35$$35$a2P2) (apply$35$$35$0 (as Main.fingerTreeSize Int) (apply$35$$35$0 (as Main.from Int) xs$35$$35$a2P2)))))
(assert (and (and (and (= lq_anf$36$$35$$35$7205759403792806635$35$$35$d3of (apply$35$$35$0 (as Main.from Int) xs$35$$35$a2P2)) (= lq_anf$36$$35$$35$7205759403792806635$35$$35$d3of (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a2P2) (as Main.Empty Int) (apply$35$$35$0 (apply$35$$35$0 (as Main.$60$$124$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) xs$35$$35$a2P2)) (apply$35$$35$0 (as Main.from Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a2P2)))))) (= lq_anf$36$$35$$35$7205759403792806635$35$$35$d3of (apply$35$$35$0 (as Main.from Int) xs$35$$35$a2P2)))))
(assert (and (>= (apply$35$$35$0 (as len Int) xs$35$$35$a2P2) 0)))
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Empty Int) VV$35$$35$F$35$$35$50))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Empty Int) VV$35$$35$F$35$$35$50)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a2P2))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a2P2)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a2P2))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a2P2)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a2P2))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a2P2)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a2P2))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a2P2)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Empty Int) (apply$35$$35$0 (as Main.from Int) xs$35$$35$a2P2)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Empty Int) (apply$35$$35$0 (as Main.from Int) xs$35$$35$a2P2))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (apply$35$$35$0 (as Main.fingerTreeSize Int) VV$35$$35$F$35$$35$8) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792806657$35$$35$d3oB))))
(assert (and (and (and (and (and (and (and (and (and (and (and (and (and (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792806657$35$$35$d3oB) lq_anf$36$$35$$35$7205759403792806656$35$$35$d3oA) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792806657$35$$35$d3oB) lq_anf$36$$35$$35$7205759403792806637$35$$35$d3oh)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792806657$35$$35$d3oB) lq_anf$36$$35$$35$7205759403792806656$35$$35$d3oA)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792806657$35$$35$d3oB) lq_anf$36$$35$$35$7205759403792806637$35$$35$d3oh)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792806657$35$$35$d3oB) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792806657$35$$35$d3oB) false)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792806657$35$$35$d3oB) lq_anf$36$$35$$35$7205759403792806656$35$$35$d3oA)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792806657$35$$35$d3oB) lq_anf$36$$35$$35$7205759403792806637$35$$35$d3oh)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792806657$35$$35$d3oB) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792806657$35$$35$d3oB) false)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792806657$35$$35$d3oB) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792806656$35$$35$d3oA)))) (= lq_anf$36$$35$$35$7205759403792806657$35$$35$d3oB (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792806637$35$$35$d3oh) lq_anf$36$$35$$35$7205759403792806656$35$$35$d3oA))) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792806657$35$$35$d3oB) 0))))
(assert (and (and (and (and (and (and (and (and (and (and (and (and (and (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792806656$35$$35$d3oA) lq_anf$36$$35$$35$7205759403792806655$35$$35$d3oz) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792806656$35$$35$d3oA) lq_anf$36$$35$$35$7205759403792806638$35$$35$d3oi)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792806656$35$$35$d3oA) lq_anf$36$$35$$35$7205759403792806655$35$$35$d3oz)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792806656$35$$35$d3oA) lq_anf$36$$35$$35$7205759403792806638$35$$35$d3oi)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792806656$35$$35$d3oA) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792806656$35$$35$d3oA) false)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792806656$35$$35$d3oA) lq_anf$36$$35$$35$7205759403792806655$35$$35$d3oz)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792806656$35$$35$d3oA) lq_anf$36$$35$$35$7205759403792806638$35$$35$d3oi)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792806656$35$$35$d3oA) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792806656$35$$35$d3oA) false)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792806656$35$$35$d3oA) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792806655$35$$35$d3oz)))) (= lq_anf$36$$35$$35$7205759403792806656$35$$35$d3oA (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792806638$35$$35$d3oi) lq_anf$36$$35$$35$7205759403792806655$35$$35$d3oz))) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792806656$35$$35$d3oA) 0))))
(assert (and (and (and (and (and (and (and (and (and (and (and (and (and (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792806655$35$$35$d3oz) lq_anf$36$$35$$35$7205759403792806654$35$$35$d3oy) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792806655$35$$35$d3oz) lq_anf$36$$35$$35$7205759403792806639$35$$35$d3oj)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792806655$35$$35$d3oz) lq_anf$36$$35$$35$7205759403792806654$35$$35$d3oy)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792806655$35$$35$d3oz) lq_anf$36$$35$$35$7205759403792806639$35$$35$d3oj)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792806655$35$$35$d3oz) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792806655$35$$35$d3oz) false)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792806655$35$$35$d3oz) lq_anf$36$$35$$35$7205759403792806654$35$$35$d3oy)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792806655$35$$35$d3oz) lq_anf$36$$35$$35$7205759403792806639$35$$35$d3oj)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792806655$35$$35$d3oz) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792806655$35$$35$d3oz) false)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792806655$35$$35$d3oz) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792806654$35$$35$d3oy)))) (= lq_anf$36$$35$$35$7205759403792806655$35$$35$d3oz (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792806639$35$$35$d3oj) lq_anf$36$$35$$35$7205759403792806654$35$$35$d3oy))) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792806655$35$$35$d3oz) 0))))
(assert (and (and (and (and (and (and (and (and (and (and (and (and (and (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792806654$35$$35$d3oy) lq_anf$36$$35$$35$7205759403792806653$35$$35$d3ox) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792806654$35$$35$d3oy) lq_anf$36$$35$$35$7205759403792806640$35$$35$d3ok)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792806654$35$$35$d3oy) lq_anf$36$$35$$35$7205759403792806653$35$$35$d3ox)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792806654$35$$35$d3oy) lq_anf$36$$35$$35$7205759403792806640$35$$35$d3ok)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792806654$35$$35$d3oy) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792806654$35$$35$d3oy) false)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792806654$35$$35$d3oy) lq_anf$36$$35$$35$7205759403792806653$35$$35$d3ox)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792806654$35$$35$d3oy) lq_anf$36$$35$$35$7205759403792806640$35$$35$d3ok)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792806654$35$$35$d3oy) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792806654$35$$35$d3oy) false)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792806654$35$$35$d3oy) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792806653$35$$35$d3ox)))) (= lq_anf$36$$35$$35$7205759403792806654$35$$35$d3oy (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792806640$35$$35$d3ok) lq_anf$36$$35$$35$7205759403792806653$35$$35$d3ox))) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792806654$35$$35$d3oy) 0))))
(assert (and (and (and (and (and (and (and (and (and (and (and (and (and (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792806653$35$$35$d3ox) lq_anf$36$$35$$35$7205759403792806652$35$$35$d3ow) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792806653$35$$35$d3ox) lq_anf$36$$35$$35$7205759403792806641$35$$35$d3ol)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792806653$35$$35$d3ox) lq_anf$36$$35$$35$7205759403792806652$35$$35$d3ow)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792806653$35$$35$d3ox) lq_anf$36$$35$$35$7205759403792806641$35$$35$d3ol)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792806653$35$$35$d3ox) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792806653$35$$35$d3ox) false)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792806653$35$$35$d3ox) lq_anf$36$$35$$35$7205759403792806652$35$$35$d3ow)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792806653$35$$35$d3ox) lq_anf$36$$35$$35$7205759403792806641$35$$35$d3ol)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792806653$35$$35$d3ox) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792806653$35$$35$d3ox) false)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792806653$35$$35$d3ox) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792806652$35$$35$d3ow)))) (= lq_anf$36$$35$$35$7205759403792806653$35$$35$d3ox (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792806641$35$$35$d3ol) lq_anf$36$$35$$35$7205759403792806652$35$$35$d3ow))) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792806653$35$$35$d3ox) 0))))
(assert (and (and (and (and (and (and (and (and (and (and (and (and (and (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792806652$35$$35$d3ow) lq_anf$36$$35$$35$7205759403792806651$35$$35$d3ov) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792806652$35$$35$d3ow) lq_anf$36$$35$$35$7205759403792806642$35$$35$d3om)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792806652$35$$35$d3ow) lq_anf$36$$35$$35$7205759403792806651$35$$35$d3ov)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792806652$35$$35$d3ow) lq_anf$36$$35$$35$7205759403792806642$35$$35$d3om)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792806652$35$$35$d3ow) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792806652$35$$35$d3ow) false)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792806652$35$$35$d3ow) lq_anf$36$$35$$35$7205759403792806651$35$$35$d3ov)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792806652$35$$35$d3ow) lq_anf$36$$35$$35$7205759403792806642$35$$35$d3om)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792806652$35$$35$d3ow) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792806652$35$$35$d3ow) false)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792806652$35$$35$d3ow) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792806651$35$$35$d3ov)))) (= lq_anf$36$$35$$35$7205759403792806652$35$$35$d3ow (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792806642$35$$35$d3om) lq_anf$36$$35$$35$7205759403792806651$35$$35$d3ov))) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792806652$35$$35$d3ow) 0))))
(assert (and (and (and (and (and (and (and (and (and (and (and (and (and (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792806651$35$$35$d3ov) lq_anf$36$$35$$35$7205759403792806650$35$$35$d3ou) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792806651$35$$35$d3ov) lq_anf$36$$35$$35$7205759403792806643$35$$35$d3on)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792806651$35$$35$d3ov) lq_anf$36$$35$$35$7205759403792806650$35$$35$d3ou)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792806651$35$$35$d3ov) lq_anf$36$$35$$35$7205759403792806643$35$$35$d3on)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792806651$35$$35$d3ov) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792806651$35$$35$d3ov) false)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792806651$35$$35$d3ov) lq_anf$36$$35$$35$7205759403792806650$35$$35$d3ou)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792806651$35$$35$d3ov) lq_anf$36$$35$$35$7205759403792806643$35$$35$d3on)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792806651$35$$35$d3ov) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792806651$35$$35$d3ov) false)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792806651$35$$35$d3ov) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792806650$35$$35$d3ou)))) (= lq_anf$36$$35$$35$7205759403792806651$35$$35$d3ov (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792806643$35$$35$d3on) lq_anf$36$$35$$35$7205759403792806650$35$$35$d3ou))) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792806651$35$$35$d3ov) 0))))
(assert (and (and (and (and (and (and (and (and (and (and (and (and (and (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792806650$35$$35$d3ou) lq_anf$36$$35$$35$7205759403792806649$35$$35$d3ot) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792806650$35$$35$d3ou) lq_anf$36$$35$$35$7205759403792806644$35$$35$d3oo)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792806650$35$$35$d3ou) lq_anf$36$$35$$35$7205759403792806649$35$$35$d3ot)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792806650$35$$35$d3ou) lq_anf$36$$35$$35$7205759403792806644$35$$35$d3oo)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792806650$35$$35$d3ou) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792806650$35$$35$d3ou) false)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792806650$35$$35$d3ou) lq_anf$36$$35$$35$7205759403792806649$35$$35$d3ot)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792806650$35$$35$d3ou) lq_anf$36$$35$$35$7205759403792806644$35$$35$d3oo)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792806650$35$$35$d3ou) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792806650$35$$35$d3ou) false)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792806650$35$$35$d3ou) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792806649$35$$35$d3ot)))) (= lq_anf$36$$35$$35$7205759403792806650$35$$35$d3ou (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792806644$35$$35$d3oo) lq_anf$36$$35$$35$7205759403792806649$35$$35$d3ot))) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792806650$35$$35$d3ou) 0))))
(assert (and (and (and (and (and (and (and (and (and (and (and (and (and (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792806649$35$$35$d3ot) lq_anf$36$$35$$35$7205759403792806648$35$$35$d3os) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792806649$35$$35$d3ot) lq_anf$36$$35$$35$7205759403792806645$35$$35$d3op)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792806649$35$$35$d3ot) lq_anf$36$$35$$35$7205759403792806648$35$$35$d3os)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792806649$35$$35$d3ot) lq_anf$36$$35$$35$7205759403792806645$35$$35$d3op)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792806649$35$$35$d3ot) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792806649$35$$35$d3ot) false)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792806649$35$$35$d3ot) lq_anf$36$$35$$35$7205759403792806648$35$$35$d3os)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792806649$35$$35$d3ot) lq_anf$36$$35$$35$7205759403792806645$35$$35$d3op)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792806649$35$$35$d3ot) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792806649$35$$35$d3ot) false)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792806649$35$$35$d3ot) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792806648$35$$35$d3os)))) (= lq_anf$36$$35$$35$7205759403792806649$35$$35$d3ot (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792806645$35$$35$d3op) lq_anf$36$$35$$35$7205759403792806648$35$$35$d3os))) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792806649$35$$35$d3ot) 0))))
(assert (and (and (and (and (and (and (and (and (and (and (and (and (and (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792806648$35$$35$d3os) lq_anf$36$$35$$35$7205759403792806647$35$$35$d3or) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792806648$35$$35$d3os) lq_anf$36$$35$$35$7205759403792806646$35$$35$d3oq)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792806648$35$$35$d3os) lq_anf$36$$35$$35$7205759403792806647$35$$35$d3or)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792806648$35$$35$d3os) lq_anf$36$$35$$35$7205759403792806646$35$$35$d3oq)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792806648$35$$35$d3os) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792806648$35$$35$d3os) false)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792806648$35$$35$d3os) lq_anf$36$$35$$35$7205759403792806647$35$$35$d3or)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792806648$35$$35$d3os) lq_anf$36$$35$$35$7205759403792806646$35$$35$d3oq)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792806648$35$$35$d3os) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792806648$35$$35$d3os) false)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792806648$35$$35$d3os) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792806647$35$$35$d3or)))) (= lq_anf$36$$35$$35$7205759403792806648$35$$35$d3os (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792806646$35$$35$d3oq) lq_anf$36$$35$$35$7205759403792806647$35$$35$d3or))) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792806648$35$$35$d3os) 0))))
(assert (and (and (and (and (and (and (and (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792806647$35$$35$d3or) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792806647$35$$35$d3or) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792806647$35$$35$d3or) false)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792806647$35$$35$d3or) true)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792806647$35$$35$d3or) 0)) (= lq_anf$36$$35$$35$7205759403792806647$35$$35$d3or (as GHC.Types.$91$$93$ Int))) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792806647$35$$35$d3or) 0))))
(assert (and (= lq_anf$36$$35$$35$7205759403792806646$35$$35$d3oq 10)))
(assert (and (= lq_anf$36$$35$$35$7205759403792806645$35$$35$d3op 9)))
(assert (and (= lq_anf$36$$35$$35$7205759403792806644$35$$35$d3oo 8)))
(assert (and (= lq_anf$36$$35$$35$7205759403792806643$35$$35$d3on 7)))
(assert (and (= lq_anf$36$$35$$35$7205759403792806642$35$$35$d3om 6)))
(assert (and (= lq_anf$36$$35$$35$7205759403792806641$35$$35$d3ol 5)))
(assert (and (= lq_anf$36$$35$$35$7205759403792806640$35$$35$d3ok 4)))
(assert (and (= lq_anf$36$$35$$35$7205759403792806639$35$$35$d3oj 3)))
(assert (and (= lq_anf$36$$35$$35$7205759403792806638$35$$35$d3oi 2)))
(assert (and (= lq_anf$36$$35$$35$7205759403792806637$35$$35$d3oh 1)))
(assert true)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Empty Int) VV$35$$35$F$35$$35$8))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$Main.Empty Int) VV$35$$35$F$35$$35$8)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(pop 1)
(pop 1)
(pop 1)
(pop 1)
(pop 1)
(push 1)
(assert (and (and (and (and (and (and (= (apply$35$$35$1 (as is$36$Main.Deep Int) VV$35$$35$F$35$$35$221) false) (= (apply$35$$35$1 (as is$36$Main.Single Int) VV$35$$35$F$35$$35$221) false)) (= (apply$35$$35$1 (as is$36$Main.Empty Int) VV$35$$35$F$35$$35$221) true)) (= (apply$35$$35$1 (as Main.isEmpty Int) VV$35$$35$F$35$$35$221) true)) (= VV$35$$35$F$35$$35$221 (as Main.Empty Int))) (= VV$35$$35$F$35$$35$221 (as Main.Empty Int)))))
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$Main.Empty Int) VV$35$$35$F$35$$35$221))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(pop 1)
