1:1-1:1::Main.$trModule :: "GHC.Types.Module"
67:1-67:1::$cfrom :: "forall a##xo b##xo c##xo .\n(Main.ViewL a##xo b##xo)\n-> (GHC.Generics.Rep (Main.ViewL a##xo b##xo) c##xo)"
72:11-72:18::Main.$fGenericViewL :: "forall a##xo b##xo .\n(GHC.Generics.Generic (Main.ViewL a##xo b##xo))"
77:1-77:1::$cfrom :: "forall a##xo b##xo c##xo .\n(Main.ViewR a##xo b##xo)\n-> (GHC.Generics.Rep (Main.ViewR a##xo b##xo) c##xo)"
83:11-83:18::Main.$fGenericViewR :: "forall a##xo b##xo .\n(GHC.Generics.Generic (Main.ViewR a##xo b##xo))"
96:10-96:54::Main.$fSemigroupFingerTree :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(GHC.Base.Semigroup (Main.FingerTree a##xo b##xo))"
97:5-97:9::$c<> :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(Main.FingerTree a##xo b##xo)\n-> (Main.FingerTree a##xo b##xo)\n   -> (Main.FingerTree a##xo b##xo)"
97:12-97:16::_ :: "(Main.FingerTree a##xo b##xo)\n-> (Main.FingerTree a##xo b##xo)\n   -> (Main.FingerTree a##xo b##xo)"
101:10-101:51::Main.$fMonoidFingerTree :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(GHC.Base.Monoid (Main.FingerTree a##xo b##xo))"
102:5-102:11::$cmempty :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(Main.FingerTree a##xo b##xo)"
102:14-102:19::_ :: "(Main.FingerTree a##xo b##xo)"
109:1-109:1::$cfrom :: "forall a##xo b##xo .\n(Main.Digit a##xo)\n-> (GHC.Generics.Rep (Main.Digit a##xo) b##xo)"
116:11-116:18::Main.$fGenericDigit :: "forall a##xo . (GHC.Generics.Generic (Main.Digit a##xo))"
134:10-134:48::Main.$fMeasuredvDigit :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(Main.Measured a##xo (Main.Digit b##xo))"
135:5-135:12::$cmeasure :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(Main.Digit b##xo)\n-> a##xo"
135:15-135:22::_ :: "(a##xo\n -> b##xo)\n-> (Main.Digit a##xo)\n   -> b##xo"
141:1-141:1::$cfrom :: "forall a##xo b##xo c##xo .\n(Main.Node a##xo b##xo)\n-> (GHC.Generics.Rep (Main.Node a##xo b##xo) c##xo)"
144:11-144:18::Main.$fGenericNode :: "forall a##xo b##xo . (GHC.Generics.Generic (Main.Node a##xo b##xo))"
153:1-153:6::Main.node2 :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\nb##xo\n-> b##xo\n   -> (Main.Node a##xo b##xo)"
153:7-153:8::a :: "a##xo"
153:9-153:10::b :: "a##xo"
153:18-153:55::_ :: "a##xo\n-> a##xo\n   -> (Main.Node b##xo a##xo)"
153:25-153:32::_ :: "a##xo\n-> b##xo"
153:35-153:44::_ :: "a##xo\n-> a##xo\n   -> a##xo"
153:45-153:52::_ :: "a##xo\n-> b##xo"
156:1-156:6::Main.node3 :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\nb##xo\n-> b##xo\n   -> b##xo\n      -> (Main.Node a##xo b##xo)"
156:7-156:8::a :: "a##xo"
156:9-156:10::b :: "a##xo"
156:11-156:12::c :: "a##xo"
156:18-156:75::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
156:25-156:32::_ :: "a##xo\n-> b##xo"
156:35-156:44::_ :: "a##xo\n-> a##xo\n   -> a##xo"
156:45-156:52::_ :: "a##xo\n-> b##xo"
156:55-156:64::_ :: "a##xo\n-> a##xo\n   -> a##xo"
156:65-156:72::_ :: "a##xo\n-> b##xo"
158:10-158:45::Main.$fMeasuredvNode :: "forall a##xo b##xo .\n(GHC.Base.Monoid<[]> a##xo) =>\n(Main.Measured a##xo (Main.Node a##xo b##xo))"
159:5-159:12::$cmeasure :: "forall a##xo b##xo .\n(GHC.Base.Monoid<[]> a##xo) =>\n(Main.Node a##xo b##xo)\n-> a##xo"
163:1-163:12::Main.nodeToDigit :: "forall a##xo b##xo .\n(Main.Node a##xo b##xo)\n-> (Main.Digit b##xo)"
163:29-163:34::_ :: "a##xo\n-> (Main.Digit a##xo)"
164:31-164:38::_ :: "a##xo\n-> a##xo\n   -> (Main.Digit a##xo)"
177:1-177:1::$cfrom :: "forall a##xo b##xo c##xo .\n(Main.FingerTree a##xo b##xo)\n-> (GHC.Generics.Rep (Main.FingerTree a##xo b##xo) c##xo)"
188:15-188:22::Main.$fGenericFingerTree :: "forall a##xo b##xo .\n(GHC.Generics.Generic (Main.FingerTree a##xo b##xo))"
193:1-193:5::Main.deep :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(Main.Digit b##xo)\n-> (Main.FingerTree a##xo (Main.Node a##xo b##xo))\n   -> (Main.Digit b##xo)\n      -> (Main.FingerTree a##xo b##xo)"
193:6-193:8::pr :: "(Main.Digit a##xo)"
193:9-193:10::m :: "(Main.FingerTree a##xo (Main.Node a##xo b##xo))"
193:11-193:13::sf :: "(Main.Digit a##xo)"
194:5-194:65::_ :: "(Main.Digit a##xo)\n-> (Main.FingerTree b##xo (Main.Node b##xo a##xo))\n   -> (Main.Digit a##xo)\n      -> (Main.FingerTree b##xo a##xo)"
194:11-194:64::lq_anf$##7205759403792837033 :: "a##xo"
194:12-194:19::_ :: "(Main.Digit a##xo)\n-> b##xo"
194:23-194:32::_ :: "a##xo\n-> a##xo\n   -> a##xo"
194:33-194:40::_ :: "(Main.FingerTree a##xo (Main.Node a##xo b##xo))\n-> a##xo"
194:44-194:53::_ :: "a##xo\n-> a##xo\n   -> a##xo"
194:54-194:61::_ :: "(Main.Digit a##xo)\n-> b##xo"
197:10-197:55::Main.$fMeasuredvFingerTree :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(Main.Measured a##xo (Main.FingerTree a##xo b##xo))"
198:5-198:12::$cmeasure :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(Main.FingerTree a##xo b##xo)\n-> a##xo"
198:32-198:38::$dMonoid_a9d3 :: "{v : (GHC.Base.Monoid a##xo) | v == $dMonoid_a9d3}"
199:32-199:39::_ :: "a##xo\n-> b##xo"
230:1-230:6::Main.fmap' :: "forall a##xo b##xo c##xo d##xo .\n(Main.Measured<[]> a##xo b##xo, Main.Measured<[]> c##xo d##xo) =>\n(b##xo\n -> d##xo)\n-> (Main.FingerTree a##xo b##xo)\n   -> (Main.FingerTree c##xo d##xo)"
230:9-230:16::$dMeasured_a7XM :: "{v : (Main.Measured a##xo b##xo) | v == $dMeasured_a7XM}"
234:1-234:8::Main.mapTree :: "forall a##xo b##xo c##xo d##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(c##xo\n -> b##xo)\n-> (Main.FingerTree d##xo c##xo)\n   -> (Main.FingerTree a##xo b##xo)"
235:32-235:33::_ :: "a##xo\n-> b##xo"
237:5-237:9::_ :: "(Main.Digit a##xo)\n-> (Main.FingerTree b##xo (Main.Node b##xo a##xo))\n   -> (Main.Digit a##xo)\n      -> (Main.FingerTree b##xo a##xo)"
237:11-237:21::_ :: "(Main.Digit a##xo)\n-> (Main.Digit b##xo)"
237:27-237:34::Main.mapTree :: "forall a##xo b##xo c##xo d##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(c##xo\n -> b##xo)\n-> (Main.FingerTree d##xo c##xo)\n   -> (Main.FingerTree a##xo b##xo)"
237:36-237:43::_ :: "(a##xo\n -> b##xo)\n-> (Main.Node c##xo a##xo)\n   -> (Main.Node d##xo b##xo)"
237:51-237:61::_ :: "(Main.Digit a##xo)\n-> (Main.Digit b##xo)"
241:1-241:8::Main.mapNode :: "forall a##xo b##xo c##xo d##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(c##xo\n -> b##xo)\n-> (Main.Node d##xo c##xo)\n   -> (Main.Node a##xo b##xo)"
241:9-241:10::f :: "a##xo\n-> b##xo"
241:27-241:32::_ :: "a##xo\n-> a##xo\n   -> (Main.Node b##xo a##xo)"
241:34-241:35::_ :: "{v : a##xo\n     -> b##xo | v == f}"
241:40-241:41::_ :: "{v : a##xo\n     -> b##xo | v == f}"
242:29-242:34::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
242:36-242:37::_ :: "{v : a##xo\n     -> b##xo | v == f}"
242:42-242:43::_ :: "{v : a##xo\n     -> b##xo | v == f}"
242:48-242:49::_ :: "{v : a##xo\n     -> b##xo | v == f}"
245:1-245:9::Main.mapDigit :: "forall a##xo b##xo .\n(a##xo\n -> b##xo)\n-> (Main.Digit a##xo)\n   -> (Main.Digit b##xo)"
245:10-245:11::f :: "a##xo\n-> b##xo"
245:27-245:28::_ :: "{v : a##xo\n     -> b##xo | v == f}"
246:24-246:33::_ :: "a##xo\n-> (Main.Digit a##xo)"
246:29-246:30::_ :: "{v : a##xo\n     -> b##xo | v == f}"
246:35-246:36::_ :: "{v : a##xo\n     -> b##xo | v == f}"
247:28-247:39::_ :: "a##xo\n-> a##xo\n   -> (Main.Digit a##xo)"
247:35-247:36::_ :: "{v : a##xo\n     -> b##xo | v == f}"
247:41-247:42::_ :: "{v : a##xo\n     -> b##xo | v == f}"
247:47-247:48::_ :: "{v : a##xo\n     -> b##xo | v == f}"
248:29-248:39::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Digit a##xo)"
248:35-248:36::_ :: "{v : a##xo\n     -> b##xo | v == f}"
248:41-248:42::_ :: "{v : a##xo\n     -> b##xo | v == f}"
248:47-248:48::_ :: "{v : a##xo\n     -> b##xo | v == f}"
248:53-248:54::_ :: "{v : a##xo\n     -> b##xo | v == f}"
254:1-254:12::Main.fmapWithPos :: "forall a##xo b##xo c##xo d##xo .\n(Main.Measured<[]> a##xo b##xo, Main.Measured<[]> c##xo d##xo) =>\n(a##xo\n -> b##xo\n    -> d##xo)\n-> (Main.FingerTree a##xo b##xo)\n   -> (Main.FingerTree c##xo d##xo)"
254:13-254:14::f :: "a##xo\n-> b##xo\n   -> c##xo"
254:17-254:26::_ :: "(a##xo\n -> b##xo\n    -> c##xo)\n-> a##xo\n   -> (Main.FingerTree a##xo b##xo)\n      -> (Main.FingerTree d##xo c##xo)"
258:1-258:10::Main.mapWPTree :: "forall a##xo b##xo c##xo d##xo .\n(Main.Measured<[]> a##xo b##xo, Main.Measured<[]> c##xo d##xo) =>\n(a##xo\n -> b##xo\n    -> d##xo)\n-> a##xo\n   -> (Main.FingerTree a##xo b##xo)\n      -> (Main.FingerTree c##xo d##xo)"
259:36-259:37::_ :: "a##xo\n-> b##xo\n   -> c##xo"
261:5-261:9::_ :: "(Main.Digit a##xo)\n-> (Main.FingerTree b##xo (Main.Node b##xo a##xo))\n   -> (Main.Digit a##xo)\n      -> (Main.FingerTree b##xo a##xo)"
261:11-261:21::_ :: "(a##xo\n -> b##xo\n    -> c##xo)\n-> a##xo\n   -> (Main.Digit b##xo)\n      -> (Main.Digit c##xo)"
262:11-262:20::Main.mapWPTree :: "forall a##xo b##xo c##xo d##xo .\n(Main.Measured<[]> a##xo b##xo, Main.Measured<[]> c##xo d##xo) =>\n(a##xo\n -> b##xo\n    -> d##xo)\n-> a##xo\n   -> (Main.FingerTree a##xo b##xo)\n      -> (Main.FingerTree c##xo d##xo)"
262:22-262:31::_ :: "(a##xo\n -> b##xo\n    -> c##xo)\n-> a##xo\n   -> (Main.Node a##xo b##xo)\n      -> (Main.Node d##xo c##xo)"
263:11-263:21::_ :: "(a##xo\n -> b##xo\n    -> c##xo)\n-> a##xo\n   -> (Main.Digit b##xo)\n      -> (Main.Digit c##xo)"
265:5-265:8::vpr :: "a##xo"
265:16-265:42::_ :: "a##xo"
265:21-265:30::_ :: "a##xo\n-> a##xo\n   -> a##xo"
265:32-265:39::_ :: "(Main.Digit a##xo)\n-> b##xo"
266:5-266:7::vm :: "a##xo"
266:16-266:41::_ :: "a##xo"
266:21-266:30::_ :: "a##xo\n-> a##xo\n   -> a##xo"
266:32-266:39::_ :: "(Main.FingerTree a##xo (Main.Node a##xo b##xo))\n-> a##xo"
270:1-270:10::Main.mapWPNode :: "forall a##xo b##xo c##xo d##xo .\n(Main.Measured<[]> a##xo b##xo, Main.Measured<[]> c##xo d##xo) =>\n(a##xo\n -> b##xo\n    -> d##xo)\n-> a##xo\n   -> (Main.Node a##xo b##xo)\n      -> (Main.Node c##xo d##xo)"
270:11-270:12::f :: "a##xo\n-> b##xo\n   -> c##xo"
270:13-270:14::v :: "a##xo"
270:31-270:36::_ :: "a##xo\n-> a##xo\n   -> (Main.Node b##xo a##xo)"
270:38-270:39::_ :: "{v : a##xo\n     -> b##xo\n        -> c##xo | v == f}"
270:46-270:47::_ :: "{v : a##xo\n     -> b##xo\n        -> c##xo | v == f}"
272:5-272:7::va :: "a##xo"
272:15-272:36::_ :: "a##xo"
272:17-272:26::_ :: "a##xo\n-> a##xo\n   -> a##xo"
272:27-272:34::_ :: "a##xo\n-> b##xo"
273:33-273:38::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
273:40-273:41::_ :: "{v : a##xo\n     -> b##xo\n        -> c##xo | v == f}"
273:48-273:49::_ :: "{v : a##xo\n     -> b##xo\n        -> c##xo | v == f}"
273:57-273:58::_ :: "{v : a##xo\n     -> b##xo\n        -> c##xo | v == f}"
275:5-275:7::va :: "a##xo"
275:15-275:36::_ :: "a##xo"
275:17-275:26::_ :: "a##xo\n-> a##xo\n   -> a##xo"
275:27-275:34::_ :: "a##xo\n-> b##xo"
276:5-276:8::vab :: "a##xo"
276:15-276:37::_ :: "a##xo"
276:18-276:27::_ :: "a##xo\n-> a##xo\n   -> a##xo"
276:28-276:35::_ :: "a##xo\n-> b##xo"
279:1-279:11::Main.mapWPDigit :: "forall a##xo b##xo c##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(a##xo\n -> b##xo\n    -> c##xo)\n-> a##xo\n   -> (Main.Digit b##xo)\n      -> (Main.Digit c##xo)"
279:12-279:13::f :: "a##xo\n-> b##xo\n   -> c##xo"
279:14-279:15::v :: "a##xo"
279:31-279:32::_ :: "{v : a##xo\n     -> b##xo\n        -> c##xo | v == f}"
280:28-280:39::_ :: "a##xo\n-> (Main.Digit a##xo)"
280:33-280:34::_ :: "{v : a##xo\n     -> b##xo\n        -> c##xo | v == f}"
280:41-280:42::_ :: "{v : a##xo\n     -> b##xo\n        -> c##xo | v == f}"
282:5-282:7::va :: "a##xo"
282:15-282:36::_ :: "a##xo"
282:17-282:26::_ :: "a##xo\n-> a##xo\n   -> a##xo"
282:27-282:34::_ :: "a##xo\n-> b##xo"
283:32-283:45::_ :: "a##xo\n-> a##xo\n   -> (Main.Digit a##xo)"
283:39-283:40::_ :: "{v : a##xo\n     -> b##xo\n        -> c##xo | v == f}"
283:47-283:48::_ :: "{v : a##xo\n     -> b##xo\n        -> c##xo | v == f}"
283:56-283:57::_ :: "{v : a##xo\n     -> b##xo\n        -> c##xo | v == f}"
285:5-285:7::va :: "a##xo"
285:15-285:36::_ :: "a##xo"
285:17-285:26::_ :: "a##xo\n-> a##xo\n   -> a##xo"
285:27-285:34::_ :: "a##xo\n-> b##xo"
286:5-286:8::vab :: "a##xo"
286:15-286:37::_ :: "a##xo"
286:18-286:27::_ :: "a##xo\n-> a##xo\n   -> a##xo"
286:28-286:35::_ :: "a##xo\n-> b##xo"
287:33-287:45::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Digit a##xo)"
287:39-287:40::_ :: "{v : a##xo\n     -> b##xo\n        -> c##xo | v == f}"
287:47-287:48::_ :: "{v : a##xo\n     -> b##xo\n        -> c##xo | v == f}"
287:56-287:57::_ :: "{v : a##xo\n     -> b##xo\n        -> c##xo | v == f}"
287:66-287:67::_ :: "{v : a##xo\n     -> b##xo\n        -> c##xo | v == f}"
289:5-289:7::va :: "a##xo"
289:15-289:36::_ :: "a##xo"
289:17-289:26::_ :: "a##xo\n-> a##xo\n   -> a##xo"
289:27-289:34::_ :: "a##xo\n-> b##xo"
290:5-290:8::vab :: "a##xo"
290:15-290:37::_ :: "a##xo"
290:18-290:27::_ :: "a##xo\n-> a##xo\n   -> a##xo"
290:28-290:35::_ :: "a##xo\n-> b##xo"
291:5-291:9::vabc :: "a##xo"
291:15-291:38::_ :: "a##xo"
291:19-291:28::_ :: "a##xo\n-> a##xo\n   -> a##xo"
291:29-291:36::_ :: "a##xo\n-> b##xo"
300:1-300:16::Main.fmapWithContext :: "forall a##xo b##xo c##xo d##xo .\n(Main.Measured<[]> a##xo b##xo, Main.Measured<[]> c##xo d##xo) =>\n(a##xo\n -> b##xo\n    -> a##xo\n       -> d##xo)\n-> (Main.FingerTree a##xo b##xo)\n   -> (Main.FingerTree c##xo d##xo)"
300:17-300:18::f :: "a##xo\n-> b##xo\n   -> a##xo\n      -> c##xo"
300:19-300:20::t :: "(Main.FingerTree a##xo b##xo)"
300:23-300:32::_ :: "(a##xo\n -> b##xo\n    -> a##xo\n       -> c##xo)\n-> a##xo\n   -> (Main.FingerTree a##xo b##xo)\n      -> a##xo\n         -> (Main.FingerTree d##xo c##xo)"
304:1-304:10::Main.mapWCTree :: "forall a##xo b##xo c##xo d##xo .\n(Main.Measured<[]> a##xo b##xo, Main.Measured<[]> c##xo d##xo) =>\n(a##xo\n -> b##xo\n    -> a##xo\n       -> d##xo)\n-> a##xo\n   -> (Main.FingerTree a##xo b##xo)\n      -> a##xo\n         -> (Main.FingerTree c##xo d##xo)"
305:40-305:41::_ :: "a##xo\n-> b##xo\n   -> a##xo\n      -> c##xo"
307:5-307:9::_ :: "(Main.Digit a##xo)\n-> (Main.FingerTree b##xo (Main.Node b##xo a##xo))\n   -> (Main.Digit a##xo)\n      -> (Main.FingerTree b##xo a##xo)"
307:11-307:21::_ :: "(a##xo\n -> b##xo\n    -> a##xo\n       -> c##xo)\n-> a##xo\n   -> (Main.Digit b##xo)\n      -> a##xo\n         -> (Main.Digit c##xo)"
308:11-308:20::Main.mapWCTree :: "forall a##xo b##xo c##xo d##xo .\n(Main.Measured<[]> a##xo b##xo, Main.Measured<[]> c##xo d##xo) =>\n(a##xo\n -> b##xo\n    -> a##xo\n       -> d##xo)\n-> a##xo\n   -> (Main.FingerTree a##xo b##xo)\n      -> a##xo\n         -> (Main.FingerTree c##xo d##xo)"
308:22-308:31::_ :: "(a##xo\n -> b##xo\n    -> a##xo\n       -> c##xo)\n-> a##xo\n   -> (Main.Node a##xo b##xo)\n      -> a##xo\n         -> (Main.Node d##xo c##xo)"
309:11-309:21::_ :: "(a##xo\n -> b##xo\n    -> a##xo\n       -> c##xo)\n-> a##xo\n   -> (Main.Digit b##xo)\n      -> a##xo\n         -> (Main.Digit c##xo)"
311:5-311:8::vlp :: "a##xo"
311:16-311:39::_ :: "a##xo"
311:19-311:28::_ :: "a##xo\n-> a##xo\n   -> a##xo"
311:29-311:36::_ :: "(Main.Digit a##xo)\n-> b##xo"
312:5-312:9::vlpm :: "a##xo"
312:16-312:32::_ :: "a##xo"
312:20-312:29::_ :: "a##xo\n-> a##xo\n   -> a##xo"
313:5-313:9::vmsr :: "a##xo"
313:16-313:32::_ :: "a##xo"
313:19-313:28::_ :: "a##xo\n-> a##xo\n   -> a##xo"
314:5-314:8::vsr :: "a##xo"
314:16-314:23::_ :: "(Main.Digit a##xo)\n-> b##xo"
314:27-314:36::_ :: "a##xo\n-> a##xo\n   -> a##xo"
315:5-315:7::vm :: "a##xo"
315:16-315:23::_ :: "(Main.FingerTree a##xo (Main.Node a##xo b##xo))\n-> a##xo"
319:1-319:10::Main.mapWCNode :: "forall a##xo b##xo c##xo d##xo .\n(Main.Measured<[]> a##xo b##xo, Main.Measured<[]> c##xo d##xo) =>\n(a##xo\n -> b##xo\n    -> a##xo\n       -> d##xo)\n-> a##xo\n   -> (Main.Node a##xo b##xo)\n      -> a##xo\n         -> (Main.Node c##xo d##xo)"
319:11-319:12::f :: "a##xo\n-> b##xo\n   -> a##xo\n      -> c##xo"
319:13-319:15::vl :: "a##xo"
319:30-319:32::vr :: "a##xo"
319:35-319:40::_ :: "a##xo\n-> a##xo\n   -> (Main.Node b##xo a##xo)"
319:42-319:43::_ :: "{v : a##xo\n     -> b##xo\n        -> a##xo\n           -> c##xo | v == f}"
319:54-319:55::_ :: "{v : a##xo\n     -> b##xo\n        -> a##xo\n           -> c##xo | v == f}"
321:5-321:7::va :: "a##xo"
321:15-321:37::_ :: "a##xo"
321:18-321:27::_ :: "a##xo\n-> a##xo\n   -> a##xo"
321:28-321:35::_ :: "a##xo\n-> b##xo"
322:5-322:7::vb :: "a##xo"
322:15-322:22::_ :: "a##xo\n-> b##xo"
322:25-322:34::_ :: "a##xo\n-> a##xo\n   -> a##xo"
323:37-323:42::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
323:44-323:45::_ :: "{v : a##xo\n     -> b##xo\n        -> a##xo\n           -> c##xo | v == f}"
323:57-323:58::_ :: "{v : a##xo\n     -> b##xo\n        -> a##xo\n           -> c##xo | v == f}"
323:69-323:70::_ :: "{v : a##xo\n     -> b##xo\n        -> a##xo\n           -> c##xo | v == f}"
325:5-325:7::va :: "a##xo"
325:15-325:37::_ :: "a##xo"
325:18-325:27::_ :: "a##xo\n-> a##xo\n   -> a##xo"
325:28-325:35::_ :: "a##xo\n-> b##xo"
326:5-326:8::vab :: "a##xo"
326:15-326:37::_ :: "a##xo"
326:18-326:27::_ :: "a##xo\n-> a##xo\n   -> a##xo"
326:28-326:35::_ :: "a##xo\n-> b##xo"
327:5-327:8::vbc :: "a##xo"
327:15-327:22::_ :: "a##xo\n-> b##xo"
327:25-327:34::_ :: "a##xo\n-> a##xo\n   -> a##xo"
328:5-328:7::vc :: "a##xo"
328:15-328:22::_ :: "a##xo\n-> b##xo"
328:25-328:34::_ :: "a##xo\n-> a##xo\n   -> a##xo"
332:1-332:11::Main.mapWCDigit :: "forall a##xo b##xo c##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(a##xo\n -> b##xo\n    -> a##xo\n       -> c##xo)\n-> a##xo\n   -> (Main.Digit b##xo)\n      -> a##xo\n         -> (Main.Digit c##xo)"
332:12-332:13::f :: "a##xo\n-> b##xo\n   -> a##xo\n      -> c##xo"
332:14-332:16::vl :: "a##xo"
332:25-332:27::vr :: "a##xo"
332:35-332:36::_ :: "{v : a##xo\n     -> b##xo\n        -> a##xo\n           -> c##xo | v == f}"
333:32-333:47::_ :: "a##xo\n-> (Main.Digit a##xo)"
333:37-333:38::_ :: "{v : a##xo\n     -> b##xo\n        -> a##xo\n           -> c##xo | v == f}"
333:49-333:50::_ :: "{v : a##xo\n     -> b##xo\n        -> a##xo\n           -> c##xo | v == f}"
335:5-335:7::va :: "a##xo"
335:15-335:37::_ :: "a##xo"
335:18-335:27::_ :: "a##xo\n-> a##xo\n   -> a##xo"
335:28-335:35::_ :: "a##xo\n-> b##xo"
336:5-336:7::vb :: "a##xo"
336:15-336:22::_ :: "a##xo\n-> b##xo"
336:25-336:34::_ :: "a##xo\n-> a##xo\n   -> a##xo"
337:36-337:54::_ :: "a##xo\n-> a##xo\n   -> (Main.Digit a##xo)"
337:43-337:44::_ :: "{v : a##xo\n     -> b##xo\n        -> a##xo\n           -> c##xo | v == f}"
337:56-337:57::_ :: "{v : a##xo\n     -> b##xo\n        -> a##xo\n           -> c##xo | v == f}"
337:68-337:69::_ :: "{v : a##xo\n     -> b##xo\n        -> a##xo\n           -> c##xo | v == f}"
339:5-339:7::va :: "a##xo"
339:15-339:37::_ :: "a##xo"
339:18-339:27::_ :: "a##xo\n-> a##xo\n   -> a##xo"
339:28-339:35::_ :: "a##xo\n-> b##xo"
340:5-340:8::vab :: "a##xo"
340:15-340:37::_ :: "a##xo"
340:18-340:27::_ :: "a##xo\n-> a##xo\n   -> a##xo"
340:28-340:35::_ :: "a##xo\n-> b##xo"
341:5-341:8::vbc :: "a##xo"
341:15-341:22::_ :: "a##xo\n-> b##xo"
341:25-341:34::_ :: "a##xo\n-> a##xo\n   -> a##xo"
342:5-342:7::vc :: "a##xo"
342:15-342:22::_ :: "a##xo\n-> b##xo"
342:25-342:34::_ :: "a##xo\n-> a##xo\n   -> a##xo"
344:5-344:23::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Digit a##xo)"
344:11-344:12::_ :: "{v : a##xo\n     -> b##xo\n        -> a##xo\n           -> c##xo | v == f}"
344:25-344:26::_ :: "{v : a##xo\n     -> b##xo\n        -> a##xo\n           -> c##xo | v == f}"
344:38-344:39::_ :: "{v : a##xo\n     -> b##xo\n        -> a##xo\n           -> c##xo | v == f}"
344:51-344:52::_ :: "{v : a##xo\n     -> b##xo\n        -> a##xo\n           -> c##xo | v == f}"
346:5-346:7::va :: "a##xo"
346:15-346:37::_ :: "a##xo"
346:18-346:27::_ :: "a##xo\n-> a##xo\n   -> a##xo"
346:28-346:35::_ :: "a##xo\n-> b##xo"
347:5-347:8::vab :: "a##xo"
347:15-347:37::_ :: "a##xo"
347:18-347:27::_ :: "a##xo\n-> a##xo\n   -> a##xo"
347:28-347:35::_ :: "a##xo\n-> b##xo"
348:5-348:9::vabc :: "a##xo"
348:15-348:38::_ :: "a##xo"
348:19-348:28::_ :: "a##xo\n-> a##xo\n   -> a##xo"
348:29-348:36::_ :: "a##xo\n-> b##xo"
349:5-349:9::vbcd :: "a##xo"
349:15-349:22::_ :: "a##xo\n-> b##xo"
349:25-349:34::_ :: "a##xo\n-> a##xo\n   -> a##xo"
350:5-350:8::vcd :: "a##xo"
350:15-350:22::_ :: "a##xo\n-> b##xo"
350:25-350:34::_ :: "a##xo\n-> a##xo\n   -> a##xo"
351:5-351:7::vd :: "a##xo"
351:15-351:22::_ :: "a##xo\n-> b##xo"
351:25-351:34::_ :: "a##xo\n-> a##xo\n   -> a##xo"
355:1-355:11::Main.unsafeFmap :: "forall a##xo b##xo c##xo .\n(a##xo\n -> b##xo)\n-> (Main.FingerTree c##xo a##xo)\n   -> (Main.FingerTree c##xo b##xo)"
356:35-356:36::_ :: "a##xo\n-> b##xo"
358:5-358:11::_ :: "(Main.Digit a##xo)\n-> (Main.FingerTree b##xo (Main.Node b##xo a##xo))\n   -> (Main.Digit a##xo)\n      -> (Main.FingerTree b##xo a##xo)"
358:13-358:23::_ :: "(Main.Digit a##xo)\n-> (Main.Digit b##xo)"
358:29-358:58::Main.unsafeFmap :: "forall a##xo b##xo c##xo .\n(a##xo\n -> b##xo)\n-> (Main.FingerTree c##xo a##xo)\n   -> (Main.FingerTree c##xo b##xo)"
358:41-358:57::lq_anf$##7205759403792837129 :: "(Main.Node a##xo b##xo)\n-> (Main.Node a##xo c##xo)"
358:63-358:73::_ :: "(Main.Digit a##xo)\n-> (Main.Digit b##xo)"
361:1-361:15::Main.unsafeFmapNode :: "forall a##xo b##xo c##xo .\n(a##xo\n -> b##xo)\n-> (Main.Node c##xo a##xo)\n   -> (Main.Node c##xo b##xo)"
361:16-361:17::f :: "a##xo\n-> b##xo"
361:34-361:41::_ :: "a##xo\n-> a##xo\n   -> (Main.Node b##xo a##xo)"
361:43-361:44::_ :: "{v : a##xo\n     -> b##xo | v == f}"
361:49-361:50::_ :: "{v : a##xo\n     -> b##xo | v == f}"
362:36-362:43::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
362:45-362:46::_ :: "{v : a##xo\n     -> b##xo | v == f}"
362:51-362:52::_ :: "{v : a##xo\n     -> b##xo | v == f}"
362:57-362:58::_ :: "{v : a##xo\n     -> b##xo | v == f}"
367:1-367:10::Main.traverse' :: "forall a##xo b##xo c##xo d##xo e##xo .\n(Main.Measured<[]> a##xo b##xo, Main.Measured<[]> c##xo d##xo, GHC.Base.Applicative<[]> e##xo) =>\n(b##xo\n -> e##xo d##xo)\n-> (Main.FingerTree a##xo b##xo)\n   -> e##xo (Main.FingerTree c##xo d##xo)"
367:13-367:25::$dApplicative_a84X :: "{v : (GHC.Base.Applicative a##xo) | v == $dApplicative_a84X}"
371:1-371:13::Main.traverseTree :: "forall a##xo b##xo c##xo d##xo e##xo .\n(Main.Measured<[]> a##xo b##xo, GHC.Base.Applicative<[]> c##xo) =>\n(d##xo\n -> c##xo b##xo)\n-> (Main.FingerTree e##xo d##xo)\n   -> c##xo (Main.FingerTree a##xo b##xo)"
371:24-371:28::_ :: "(Main.FingerTree a##xo b##xo)\n-> c##xo (Main.FingerTree a##xo b##xo)"
372:29-372:43::lq_anf$##7205759403792837155 :: "a##xo\n-> (Main.FingerTree b##xo a##xo)"
372:36-372:39::_ :: "(a##xo\n -> (Main.FingerTree b##xo a##xo))\n-> c##xo a##xo\n   -> c##xo (Main.FingerTree b##xo a##xo)"
372:40-372:41::_ :: "a##xo\n-> b##xo c##xo"
374:5-374:32::lq_anf$##7205759403792837159 :: "a##xo (Main.FingerTree b##xo (Main.Node b##xo c##xo))\n      -> (Main.Digit c##xo)\n         -> (Main.FingerTree b##xo c##xo)"
374:10-374:13::_ :: "((Main.Digit a##xo)\n -> (Main.FingerTree b##xo (Main.Node b##xo a##xo))\n    -> (Main.Digit a##xo)\n       -> (Main.FingerTree b##xo a##xo))\n-> c##xo (Main.Digit a##xo)\n   -> c##xo (Main.FingerTree b##xo (Main.Node b##xo a##xo))\n            -> (Main.Digit a##xo)\n               -> (Main.FingerTree b##xo a##xo)"
374:14-374:27::_ :: "(a##xo\n -> b##xo c##xo)\n-> (Main.Digit a##xo)\n   -> b##xo (Main.Digit c##xo)"
374:33-374:36::_ :: "a##xo ((Main.FingerTree b##xo (Main.Node b##xo c##xo))\n       -> (Main.Digit c##xo)\n          -> (Main.FingerTree b##xo c##xo))\n-> a##xo (Main.FingerTree b##xo (Main.Node b##xo c##xo))\n   -> a##xo (Main.Digit c##xo)\n            -> (Main.FingerTree b##xo c##xo)"
374:37-374:49::Main.traverseTree :: "forall a##xo b##xo c##xo d##xo e##xo .\n(Main.Measured<[]> a##xo b##xo, GHC.Base.Applicative<[]> c##xo) =>\n(d##xo\n -> c##xo b##xo)\n-> (Main.FingerTree e##xo d##xo)\n   -> c##xo (Main.FingerTree a##xo b##xo)"
374:51-374:63::_ :: "(a##xo\n -> b##xo c##xo)\n-> (Main.Node d##xo a##xo)\n   -> b##xo (Main.Node e##xo c##xo)"
374:69-374:72::_ :: "a##xo ((Main.Digit b##xo)\n       -> (Main.FingerTree c##xo b##xo))\n-> a##xo (Main.Digit b##xo)\n   -> a##xo (Main.FingerTree c##xo b##xo)"
374:73-374:86::_ :: "(a##xo\n -> b##xo c##xo)\n-> (Main.Digit a##xo)\n   -> b##xo (Main.Digit c##xo)"
378:1-378:13::Main.traverseNode :: "forall a##xo b##xo c##xo d##xo e##xo .\n(Main.Measured<[]> a##xo b##xo, GHC.Base.Applicative<[]> c##xo) =>\n(d##xo\n -> c##xo b##xo)\n-> (Main.Node e##xo d##xo)\n   -> c##xo (Main.Node a##xo b##xo)"
378:14-378:15::f :: "a##xo\n-> b##xo c##xo"
378:32-378:45::lq_anf$##7205759403792836983 :: "a##xo b##xo\n      -> (Main.Node c##xo b##xo)"
378:38-378:41::_ :: "(a##xo\n -> a##xo\n    -> (Main.Node b##xo a##xo))\n-> c##xo a##xo\n   -> c##xo a##xo\n            -> (Main.Node b##xo a##xo)"
378:42-378:43::_ :: "{v : a##xo\n     -> b##xo c##xo | v == f}"
378:46-378:49::_ :: "a##xo (b##xo\n       -> (Main.Node c##xo b##xo))\n-> a##xo b##xo\n   -> a##xo (Main.Node c##xo b##xo)"
378:50-378:51::_ :: "{v : a##xo\n     -> b##xo c##xo | v == f}"
379:34-379:47::lq_anf$##7205759403792836987 :: "a##xo b##xo\n      -> b##xo\n         -> (Main.Node c##xo b##xo)"
379:40-379:43::_ :: "(a##xo\n -> a##xo\n    -> a##xo\n       -> (Main.Node b##xo a##xo))\n-> c##xo a##xo\n   -> c##xo a##xo\n            -> a##xo\n               -> (Main.Node b##xo a##xo)"
379:44-379:45::_ :: "{v : a##xo\n     -> b##xo c##xo | v == f}"
379:48-379:51::_ :: "a##xo (b##xo\n       -> b##xo\n          -> (Main.Node c##xo b##xo))\n-> a##xo b##xo\n   -> a##xo b##xo\n            -> (Main.Node c##xo b##xo)"
379:52-379:53::_ :: "{v : a##xo\n     -> b##xo c##xo | v == f}"
379:56-379:59::_ :: "a##xo (b##xo\n       -> (Main.Node c##xo b##xo))\n-> a##xo b##xo\n   -> a##xo (Main.Node c##xo b##xo)"
379:60-379:61::_ :: "{v : a##xo\n     -> b##xo c##xo | v == f}"
382:1-382:14::Main.traverseDigit :: "forall a##xo b##xo c##xo .\n(GHC.Base.Applicative<[]> a##xo) =>\n(b##xo\n -> a##xo c##xo)\n-> (Main.Digit b##xo)\n   -> a##xo (Main.Digit c##xo)"
382:15-382:16::f :: "a##xo\n-> b##xo c##xo"
382:27-382:38::lq_anf$##7205759403792837133 :: "a##xo\n-> (Main.Digit a##xo)"
382:31-382:34::_ :: "(a##xo\n -> (Main.Digit a##xo))\n-> b##xo a##xo\n   -> b##xo (Main.Digit a##xo)"
382:35-382:36::_ :: "{v : a##xo\n     -> b##xo c##xo | v == f}"
383:29-383:40::lq_anf$##7205759403792837137 :: "a##xo b##xo\n      -> (Main.Digit b##xo)"
383:33-383:36::_ :: "(a##xo\n -> a##xo\n    -> (Main.Digit a##xo))\n-> b##xo a##xo\n   -> b##xo a##xo\n            -> (Main.Digit a##xo)"
383:37-383:38::_ :: "{v : a##xo\n     -> b##xo c##xo | v == f}"
383:41-383:44::_ :: "a##xo (b##xo\n       -> (Main.Digit b##xo))\n-> a##xo b##xo\n   -> a##xo (Main.Digit b##xo)"
383:45-383:46::_ :: "{v : a##xo\n     -> b##xo c##xo | v == f}"
384:33-384:46::lq_anf$##7205759403792837141 :: "a##xo b##xo\n      -> b##xo\n         -> (Main.Digit b##xo)"
384:39-384:42::_ :: "(a##xo\n -> a##xo\n    -> a##xo\n       -> (Main.Digit a##xo))\n-> b##xo a##xo\n   -> b##xo a##xo\n            -> a##xo\n               -> (Main.Digit a##xo)"
384:43-384:44::_ :: "{v : a##xo\n     -> b##xo c##xo | v == f}"
384:47-384:50::_ :: "a##xo (b##xo\n       -> b##xo\n          -> (Main.Digit b##xo))\n-> a##xo b##xo\n   -> a##xo b##xo\n            -> (Main.Digit b##xo)"
384:51-384:52::_ :: "{v : a##xo\n     -> b##xo c##xo | v == f}"
384:55-384:58::_ :: "a##xo (b##xo\n       -> (Main.Digit b##xo))\n-> a##xo b##xo\n   -> a##xo (Main.Digit b##xo)"
384:59-384:60::_ :: "{v : a##xo\n     -> b##xo c##xo | v == f}"
385:34-385:46::lq_anf$##7205759403792837147 :: "a##xo b##xo\n      -> b##xo\n         -> b##xo\n            -> (Main.Digit b##xo)"
385:39-385:42::_ :: "(a##xo\n -> a##xo\n    -> a##xo\n       -> a##xo\n          -> (Main.Digit a##xo))\n-> b##xo a##xo\n   -> b##xo a##xo\n            -> a##xo\n               -> a##xo\n                  -> (Main.Digit a##xo)"
385:43-385:44::_ :: "{v : a##xo\n     -> b##xo c##xo | v == f}"
385:47-385:50::_ :: "a##xo (b##xo\n       -> b##xo\n          -> b##xo\n             -> (Main.Digit b##xo))\n-> a##xo b##xo\n   -> a##xo b##xo\n            -> b##xo\n               -> (Main.Digit b##xo)"
385:51-385:52::_ :: "{v : a##xo\n     -> b##xo c##xo | v == f}"
385:55-385:58::_ :: "a##xo (b##xo\n       -> b##xo\n          -> (Main.Digit b##xo))\n-> a##xo b##xo\n   -> a##xo b##xo\n            -> (Main.Digit b##xo)"
385:59-385:60::_ :: "{v : a##xo\n     -> b##xo c##xo | v == f}"
385:63-385:66::_ :: "a##xo (b##xo\n       -> (Main.Digit b##xo))\n-> a##xo b##xo\n   -> a##xo (Main.Digit b##xo)"
385:67-385:68::_ :: "{v : a##xo\n     -> b##xo c##xo | v == f}"
391:1-391:16::Main.traverseWithPos :: "forall a##xo b##xo c##xo d##xo e##xo .\n(Main.Measured<[]> a##xo b##xo, Main.Measured<[]> c##xo d##xo, GHC.Base.Applicative<[]> e##xo) =>\n(a##xo\n -> b##xo\n    -> e##xo d##xo)\n-> (Main.FingerTree a##xo b##xo)\n   -> e##xo (Main.FingerTree c##xo d##xo)"
391:17-391:18::f :: "a##xo\n-> b##xo\n   -> c##xo d##xo"
391:21-391:35::_ :: "(a##xo\n -> b##xo\n    -> c##xo d##xo)\n-> a##xo\n   -> (Main.FingerTree a##xo b##xo)\n      -> c##xo (Main.FingerTree e##xo d##xo)"
395:1-395:15::Main.traverseWPTree :: "forall a##xo b##xo c##xo d##xo e##xo .\n(Main.Measured<[]> a##xo b##xo, Main.Measured<[]> c##xo d##xo, GHC.Base.Applicative<[]> e##xo) =>\n(a##xo\n -> b##xo\n    -> e##xo d##xo)\n-> a##xo\n   -> (Main.FingerTree a##xo b##xo)\n      -> e##xo (Main.FingerTree c##xo d##xo)"
395:28-395:32::_ :: "(Main.FingerTree a##xo b##xo)\n-> c##xo (Main.FingerTree a##xo b##xo)"
396:33-396:49::lq_anf$##7205759403792837193 :: "a##xo\n-> (Main.FingerTree b##xo a##xo)"
396:40-396:43::_ :: "(a##xo\n -> (Main.FingerTree b##xo a##xo))\n-> c##xo a##xo\n   -> c##xo (Main.FingerTree b##xo a##xo)"
396:44-396:45::_ :: "a##xo\n-> b##xo\n   -> c##xo d##xo"
398:5-398:36::lq_anf$##7205759403792837199 :: "a##xo (Main.FingerTree b##xo (Main.Node b##xo c##xo))\n      -> (Main.Digit c##xo)\n         -> (Main.FingerTree b##xo c##xo)"
398:10-398:13::_ :: "((Main.Digit a##xo)\n -> (Main.FingerTree b##xo (Main.Node b##xo a##xo))\n    -> (Main.Digit a##xo)\n       -> (Main.FingerTree b##xo a##xo))\n-> c##xo (Main.Digit a##xo)\n   -> c##xo (Main.FingerTree b##xo (Main.Node b##xo a##xo))\n            -> (Main.Digit a##xo)\n               -> (Main.FingerTree b##xo a##xo)"
398:14-398:29::_ :: "(a##xo\n -> b##xo\n    -> c##xo d##xo)\n-> a##xo\n   -> (Main.Digit b##xo)\n      -> c##xo (Main.Digit d##xo)"
398:37-398:40::_ :: "a##xo ((Main.FingerTree b##xo (Main.Node b##xo c##xo))\n       -> (Main.Digit c##xo)\n          -> (Main.FingerTree b##xo c##xo))\n-> a##xo (Main.FingerTree b##xo (Main.Node b##xo c##xo))\n   -> a##xo (Main.Digit c##xo)\n            -> (Main.FingerTree b##xo c##xo)"
398:41-398:55::Main.traverseWPTree :: "forall a##xo b##xo c##xo d##xo e##xo .\n(Main.Measured<[]> a##xo b##xo, Main.Measured<[]> c##xo d##xo, GHC.Base.Applicative<[]> e##xo) =>\n(a##xo\n -> b##xo\n    -> e##xo d##xo)\n-> a##xo\n   -> (Main.FingerTree a##xo b##xo)\n      -> e##xo (Main.FingerTree c##xo d##xo)"
398:57-398:71::_ :: "(a##xo\n -> b##xo\n    -> c##xo d##xo)\n-> a##xo\n   -> (Main.Node a##xo b##xo)\n      -> c##xo (Main.Node e##xo d##xo)"
398:81-398:84::_ :: "a##xo ((Main.Digit b##xo)\n       -> (Main.FingerTree c##xo b##xo))\n-> a##xo (Main.Digit b##xo)\n   -> a##xo (Main.FingerTree c##xo b##xo)"
398:85-398:100::_ :: "(a##xo\n -> b##xo\n    -> c##xo d##xo)\n-> a##xo\n   -> (Main.Digit b##xo)\n      -> c##xo (Main.Digit d##xo)"
400:5-400:8::vpr :: "a##xo"
400:16-400:42::_ :: "a##xo"
400:21-400:30::_ :: "a##xo\n-> a##xo\n   -> a##xo"
400:32-400:39::_ :: "(Main.Digit a##xo)\n-> b##xo"
401:5-401:7::vm :: "a##xo"
401:16-401:41::_ :: "a##xo"
401:21-401:30::_ :: "a##xo\n-> a##xo\n   -> a##xo"
401:32-401:39::_ :: "(Main.FingerTree a##xo (Main.Node a##xo b##xo))\n-> a##xo"
405:1-405:15::Main.traverseWPNode :: "forall a##xo b##xo c##xo d##xo e##xo .\n(Main.Measured<[]> a##xo b##xo, Main.Measured<[]> c##xo d##xo, GHC.Base.Applicative<[]> e##xo) =>\n(a##xo\n -> b##xo\n    -> e##xo d##xo)\n-> a##xo\n   -> (Main.Node a##xo b##xo)\n      -> e##xo (Main.Node c##xo d##xo)"
405:16-405:17::f :: "a##xo\n-> b##xo\n   -> c##xo d##xo"
405:18-405:19::v :: "a##xo"
405:36-405:51::lq_anf$##7205759403792836995 :: "a##xo b##xo\n      -> (Main.Node c##xo b##xo)"
405:42-405:45::_ :: "(a##xo\n -> a##xo\n    -> (Main.Node b##xo a##xo))\n-> c##xo a##xo\n   -> c##xo a##xo\n            -> (Main.Node b##xo a##xo)"
405:46-405:47::_ :: "{v : a##xo\n     -> b##xo\n        -> c##xo d##xo | v == f}"
405:52-405:55::_ :: "a##xo (b##xo\n       -> (Main.Node c##xo b##xo))\n-> a##xo b##xo\n   -> a##xo (Main.Node c##xo b##xo)"
405:56-405:57::_ :: "{v : a##xo\n     -> b##xo\n        -> c##xo d##xo | v == f}"
407:5-407:7::va :: "a##xo"
407:15-407:36::_ :: "a##xo"
407:17-407:26::_ :: "a##xo\n-> a##xo\n   -> a##xo"
407:27-407:34::_ :: "a##xo\n-> b##xo"
408:38-408:53::lq_anf$##7205759403792837001 :: "a##xo b##xo\n      -> b##xo\n         -> (Main.Node c##xo b##xo)"
408:44-408:47::_ :: "(a##xo\n -> a##xo\n    -> a##xo\n       -> (Main.Node b##xo a##xo))\n-> c##xo a##xo\n   -> c##xo a##xo\n            -> a##xo\n               -> (Main.Node b##xo a##xo)"
408:48-408:49::_ :: "{v : a##xo\n     -> b##xo\n        -> c##xo d##xo | v == f}"
408:54-408:57::_ :: "a##xo (b##xo\n       -> b##xo\n          -> (Main.Node c##xo b##xo))\n-> a##xo b##xo\n   -> a##xo b##xo\n            -> (Main.Node c##xo b##xo)"
408:58-408:59::_ :: "{v : a##xo\n     -> b##xo\n        -> c##xo d##xo | v == f}"
408:65-408:68::_ :: "a##xo (b##xo\n       -> (Main.Node c##xo b##xo))\n-> a##xo b##xo\n   -> a##xo (Main.Node c##xo b##xo)"
408:69-408:70::_ :: "{v : a##xo\n     -> b##xo\n        -> c##xo d##xo | v == f}"
410:5-410:7::va :: "a##xo"
410:15-410:36::_ :: "a##xo"
410:17-410:26::_ :: "a##xo\n-> a##xo\n   -> a##xo"
410:27-410:34::_ :: "a##xo\n-> b##xo"
411:5-411:8::vab :: "a##xo"
411:15-411:37::_ :: "a##xo"
411:18-411:27::_ :: "a##xo\n-> a##xo\n   -> a##xo"
411:28-411:35::_ :: "a##xo\n-> b##xo"
415:1-415:16::Main.traverseWPDigit :: "forall a##xo b##xo c##xo d##xo .\n(Main.Measured<[]> a##xo b##xo, GHC.Base.Applicative<[]> c##xo) =>\n(a##xo\n -> b##xo\n    -> c##xo d##xo)\n-> a##xo\n   -> (Main.Digit b##xo)\n      -> c##xo (Main.Digit d##xo)"
415:17-415:18::f :: "a##xo\n-> b##xo\n   -> c##xo d##xo"
415:19-415:20::v :: "a##xo"
415:31-415:44::lq_anf$##7205759403792837165 :: "a##xo\n-> (Main.Digit a##xo)"
415:35-415:38::_ :: "(a##xo\n -> (Main.Digit a##xo))\n-> b##xo a##xo\n   -> b##xo (Main.Digit a##xo)"
415:39-415:40::_ :: "{v : a##xo\n     -> b##xo\n        -> c##xo d##xo | v == f}"
416:33-416:46::lq_anf$##7205759403792837170 :: "a##xo b##xo\n      -> (Main.Digit b##xo)"
416:37-416:40::_ :: "(a##xo\n -> a##xo\n    -> (Main.Digit a##xo))\n-> b##xo a##xo\n   -> b##xo a##xo\n            -> (Main.Digit a##xo)"
416:41-416:42::_ :: "{v : a##xo\n     -> b##xo\n        -> c##xo d##xo | v == f}"
416:47-416:50::_ :: "a##xo (b##xo\n       -> (Main.Digit b##xo))\n-> a##xo b##xo\n   -> a##xo (Main.Digit b##xo)"
416:51-416:52::_ :: "{v : a##xo\n     -> b##xo\n        -> c##xo d##xo | v == f}"
418:5-418:7::va :: "a##xo"
418:15-418:36::_ :: "a##xo"
418:17-418:26::_ :: "a##xo\n-> a##xo\n   -> a##xo"
418:27-418:34::_ :: "a##xo\n-> b##xo"
419:37-419:52::lq_anf$##7205759403792837176 :: "a##xo b##xo\n      -> b##xo\n         -> (Main.Digit b##xo)"
419:43-419:46::_ :: "(a##xo\n -> a##xo\n    -> a##xo\n       -> (Main.Digit a##xo))\n-> b##xo a##xo\n   -> b##xo a##xo\n            -> a##xo\n               -> (Main.Digit a##xo)"
419:47-419:48::_ :: "{v : a##xo\n     -> b##xo\n        -> c##xo d##xo | v == f}"
419:53-419:56::_ :: "a##xo (b##xo\n       -> b##xo\n          -> (Main.Digit b##xo))\n-> a##xo b##xo\n   -> a##xo b##xo\n            -> (Main.Digit b##xo)"
419:57-419:58::_ :: "{v : a##xo\n     -> b##xo\n        -> c##xo d##xo | v == f}"
419:64-419:67::_ :: "a##xo (b##xo\n       -> (Main.Digit b##xo))\n-> a##xo b##xo\n   -> a##xo (Main.Digit b##xo)"
419:68-419:69::_ :: "{v : a##xo\n     -> b##xo\n        -> c##xo d##xo | v == f}"
421:5-421:7::va :: "a##xo"
421:15-421:36::_ :: "a##xo"
421:17-421:26::_ :: "a##xo\n-> a##xo\n   -> a##xo"
421:27-421:34::_ :: "a##xo\n-> b##xo"
422:5-422:8::vab :: "a##xo"
422:15-422:37::_ :: "a##xo"
422:18-422:27::_ :: "a##xo\n-> a##xo\n   -> a##xo"
422:28-422:35::_ :: "a##xo\n-> b##xo"
423:38-423:52::lq_anf$##7205759403792837185 :: "a##xo b##xo\n      -> b##xo\n         -> b##xo\n            -> (Main.Digit b##xo)"
423:43-423:46::_ :: "(a##xo\n -> a##xo\n    -> a##xo\n       -> a##xo\n          -> (Main.Digit a##xo))\n-> b##xo a##xo\n   -> b##xo a##xo\n            -> a##xo\n               -> a##xo\n                  -> (Main.Digit a##xo)"
423:47-423:48::_ :: "{v : a##xo\n     -> b##xo\n        -> c##xo d##xo | v == f}"
423:53-423:56::_ :: "a##xo (b##xo\n       -> b##xo\n          -> b##xo\n             -> (Main.Digit b##xo))\n-> a##xo b##xo\n   -> a##xo b##xo\n            -> b##xo\n               -> (Main.Digit b##xo)"
423:57-423:58::_ :: "{v : a##xo\n     -> b##xo\n        -> c##xo d##xo | v == f}"
423:64-423:67::_ :: "a##xo (b##xo\n       -> b##xo\n          -> (Main.Digit b##xo))\n-> a##xo b##xo\n   -> a##xo b##xo\n            -> (Main.Digit b##xo)"
423:68-423:69::_ :: "{v : a##xo\n     -> b##xo\n        -> c##xo d##xo | v == f}"
423:76-423:79::_ :: "a##xo (b##xo\n       -> (Main.Digit b##xo))\n-> a##xo b##xo\n   -> a##xo (Main.Digit b##xo)"
423:80-423:81::_ :: "{v : a##xo\n     -> b##xo\n        -> c##xo d##xo | v == f}"
425:5-425:7::va :: "a##xo"
425:15-425:36::_ :: "a##xo"
425:17-425:26::_ :: "a##xo\n-> a##xo\n   -> a##xo"
425:27-425:34::_ :: "a##xo\n-> b##xo"
426:5-426:8::vab :: "a##xo"
426:15-426:37::_ :: "a##xo"
426:18-426:27::_ :: "a##xo\n-> a##xo\n   -> a##xo"
426:28-426:35::_ :: "a##xo\n-> b##xo"
427:5-427:9::vabc :: "a##xo"
427:15-427:38::_ :: "a##xo"
427:19-427:28::_ :: "a##xo\n-> a##xo\n   -> a##xo"
427:29-427:36::_ :: "a##xo\n-> b##xo"
436:1-436:20::Main.traverseWithContext :: "forall a##xo b##xo c##xo d##xo e##xo .\n(Main.Measured<[]> a##xo b##xo, Main.Measured<[]> c##xo d##xo, GHC.Base.Applicative<[]> e##xo) =>\n(a##xo\n -> b##xo\n    -> a##xo\n       -> e##xo d##xo)\n-> (Main.FingerTree a##xo b##xo)\n   -> e##xo (Main.FingerTree c##xo d##xo)"
436:21-436:22::f :: "a##xo\n-> b##xo\n   -> a##xo\n      -> c##xo d##xo"
436:23-436:24::t :: "(Main.FingerTree a##xo b##xo)"
436:27-436:41::_ :: "(a##xo\n -> b##xo\n    -> a##xo\n       -> c##xo d##xo)\n-> a##xo\n   -> (Main.FingerTree a##xo b##xo)\n      -> a##xo\n         -> c##xo (Main.FingerTree e##xo d##xo)"
440:1-440:15::Main.traverseWCTree :: "forall a##xo b##xo c##xo d##xo e##xo .\n(Main.Measured<[]> a##xo b##xo, Main.Measured<[]> c##xo d##xo, GHC.Base.Applicative<[]> e##xo) =>\n(a##xo\n -> b##xo\n    -> a##xo\n       -> e##xo d##xo)\n-> a##xo\n   -> (Main.FingerTree a##xo b##xo)\n      -> a##xo\n         -> e##xo (Main.FingerTree c##xo d##xo)"
440:30-440:34::_ :: "(Main.FingerTree a##xo b##xo)\n-> c##xo (Main.FingerTree a##xo b##xo)"
441:37-441:57::lq_anf$##7205759403792837240 :: "a##xo\n-> (Main.FingerTree b##xo a##xo)"
441:44-441:47::_ :: "(a##xo\n -> (Main.FingerTree b##xo a##xo))\n-> c##xo a##xo\n   -> c##xo (Main.FingerTree b##xo a##xo)"
441:48-441:49::_ :: "a##xo\n-> b##xo\n   -> a##xo\n      -> c##xo d##xo"
443:5-443:42::lq_anf$##7205759403792837246 :: "a##xo (Main.FingerTree b##xo (Main.Node b##xo c##xo))\n      -> (Main.Digit c##xo)\n         -> (Main.FingerTree b##xo c##xo)"
443:10-443:13::_ :: "((Main.Digit a##xo)\n -> (Main.FingerTree b##xo (Main.Node b##xo a##xo))\n    -> (Main.Digit a##xo)\n       -> (Main.FingerTree b##xo a##xo))\n-> c##xo (Main.Digit a##xo)\n   -> c##xo (Main.FingerTree b##xo (Main.Node b##xo a##xo))\n            -> (Main.Digit a##xo)\n               -> (Main.FingerTree b##xo a##xo)"
443:14-443:29::_ :: "(a##xo\n -> b##xo\n    -> a##xo\n       -> c##xo d##xo)\n-> a##xo\n   -> (Main.Digit b##xo)\n      -> a##xo\n         -> c##xo (Main.Digit d##xo)"
443:43-443:46::_ :: "a##xo ((Main.FingerTree b##xo (Main.Node b##xo c##xo))\n       -> (Main.Digit c##xo)\n          -> (Main.FingerTree b##xo c##xo))\n-> a##xo (Main.FingerTree b##xo (Main.Node b##xo c##xo))\n   -> a##xo (Main.Digit c##xo)\n            -> (Main.FingerTree b##xo c##xo)"
443:47-443:61::Main.traverseWCTree :: "forall a##xo b##xo c##xo d##xo e##xo .\n(Main.Measured<[]> a##xo b##xo, Main.Measured<[]> c##xo d##xo, GHC.Base.Applicative<[]> e##xo) =>\n(a##xo\n -> b##xo\n    -> a##xo\n       -> e##xo d##xo)\n-> a##xo\n   -> (Main.FingerTree a##xo b##xo)\n      -> a##xo\n         -> e##xo (Main.FingerTree c##xo d##xo)"
443:63-443:77::_ :: "(a##xo\n -> b##xo\n    -> a##xo\n       -> c##xo d##xo)\n-> a##xo\n   -> (Main.Node a##xo b##xo)\n      -> a##xo\n         -> c##xo (Main.Node e##xo d##xo)"
443:91-443:94::_ :: "a##xo ((Main.Digit b##xo)\n       -> (Main.FingerTree c##xo b##xo))\n-> a##xo (Main.Digit b##xo)\n   -> a##xo (Main.FingerTree c##xo b##xo)"
443:95-443:110::_ :: "(a##xo\n -> b##xo\n    -> a##xo\n       -> c##xo d##xo)\n-> a##xo\n   -> (Main.Digit b##xo)\n      -> a##xo\n         -> c##xo (Main.Digit d##xo)"
445:5-445:8::vlp :: "a##xo"
445:16-445:39::_ :: "a##xo"
445:19-445:28::_ :: "a##xo\n-> a##xo\n   -> a##xo"
445:29-445:36::_ :: "(Main.Digit a##xo)\n-> b##xo"
446:5-446:9::vlpm :: "a##xo"
446:16-446:32::_ :: "a##xo"
446:20-446:29::_ :: "a##xo\n-> a##xo\n   -> a##xo"
447:5-447:9::vmsr :: "a##xo"
447:16-447:32::_ :: "a##xo"
447:19-447:28::_ :: "a##xo\n-> a##xo\n   -> a##xo"
448:5-448:8::vsr :: "a##xo"
448:16-448:23::_ :: "(Main.Digit a##xo)\n-> b##xo"
448:27-448:36::_ :: "a##xo\n-> a##xo\n   -> a##xo"
449:5-449:7::vm :: "a##xo"
449:16-449:23::_ :: "(Main.FingerTree a##xo (Main.Node a##xo b##xo))\n-> a##xo"
453:1-453:15::Main.traverseWCNode :: "forall a##xo b##xo c##xo d##xo e##xo .\n(Main.Measured<[]> a##xo b##xo, Main.Measured<[]> c##xo d##xo, GHC.Base.Applicative<[]> e##xo) =>\n(a##xo\n -> b##xo\n    -> a##xo\n       -> e##xo d##xo)\n-> a##xo\n   -> (Main.Node a##xo b##xo)\n      -> a##xo\n         -> e##xo (Main.Node c##xo d##xo)"
453:16-453:17::f :: "a##xo\n-> b##xo\n   -> a##xo\n      -> c##xo d##xo"
453:18-453:20::vl :: "a##xo"
453:35-453:37::vr :: "a##xo"
453:40-453:59::lq_anf$##7205759403792837010 :: "a##xo b##xo\n      -> (Main.Node c##xo b##xo)"
453:46-453:49::_ :: "(a##xo\n -> a##xo\n    -> (Main.Node b##xo a##xo))\n-> c##xo a##xo\n   -> c##xo a##xo\n            -> (Main.Node b##xo a##xo)"
453:50-453:51::_ :: "{v : a##xo\n     -> b##xo\n        -> a##xo\n           -> c##xo d##xo | v == f}"
453:60-453:63::_ :: "a##xo (b##xo\n       -> (Main.Node c##xo b##xo))\n-> a##xo b##xo\n   -> a##xo (Main.Node c##xo b##xo)"
453:64-453:65::_ :: "{v : a##xo\n     -> b##xo\n        -> a##xo\n           -> c##xo d##xo | v == f}"
455:5-455:7::va :: "a##xo"
455:15-455:37::_ :: "a##xo"
455:18-455:27::_ :: "a##xo\n-> a##xo\n   -> a##xo"
455:28-455:35::_ :: "a##xo\n-> b##xo"
456:5-456:7::vb :: "a##xo"
456:15-456:22::_ :: "a##xo\n-> b##xo"
456:25-456:34::_ :: "a##xo\n-> a##xo\n   -> a##xo"
458:5-458:25::lq_anf$##7205759403792837018 :: "a##xo b##xo\n      -> b##xo\n         -> (Main.Node c##xo b##xo)"
458:11-458:14::_ :: "(a##xo\n -> a##xo\n    -> a##xo\n       -> (Main.Node b##xo a##xo))\n-> c##xo a##xo\n   -> c##xo a##xo\n            -> a##xo\n               -> (Main.Node b##xo a##xo)"
458:15-458:16::_ :: "{v : a##xo\n     -> b##xo\n        -> a##xo\n           -> c##xo d##xo | v == f}"
458:26-458:29::_ :: "a##xo (b##xo\n       -> b##xo\n          -> (Main.Node c##xo b##xo))\n-> a##xo b##xo\n   -> a##xo b##xo\n            -> (Main.Node c##xo b##xo)"
458:30-458:31::_ :: "{v : a##xo\n     -> b##xo\n        -> a##xo\n           -> c##xo d##xo | v == f}"
458:40-458:43::_ :: "a##xo (b##xo\n       -> (Main.Node c##xo b##xo))\n-> a##xo b##xo\n   -> a##xo (Main.Node c##xo b##xo)"
458:44-458:45::_ :: "{v : a##xo\n     -> b##xo\n        -> a##xo\n           -> c##xo d##xo | v == f}"
460:5-460:7::va :: "a##xo"
460:15-460:37::_ :: "a##xo"
460:18-460:27::_ :: "a##xo\n-> a##xo\n   -> a##xo"
460:28-460:35::_ :: "a##xo\n-> b##xo"
461:5-461:8::vab :: "a##xo"
461:15-461:37::_ :: "a##xo"
461:18-461:27::_ :: "a##xo\n-> a##xo\n   -> a##xo"
461:28-461:35::_ :: "a##xo\n-> b##xo"
462:5-462:7::vc :: "a##xo"
462:15-462:22::_ :: "a##xo\n-> b##xo"
462:25-462:34::_ :: "a##xo\n-> a##xo\n   -> a##xo"
463:5-463:8::vbc :: "a##xo"
463:15-463:22::_ :: "a##xo\n-> b##xo"
463:25-463:34::_ :: "a##xo\n-> a##xo\n   -> a##xo"
467:1-467:16::Main.traverseWCDigit :: "forall a##xo b##xo c##xo d##xo .\n(Main.Measured<[]> a##xo b##xo, GHC.Base.Applicative<[]> c##xo) =>\n(a##xo\n -> b##xo\n    -> a##xo\n       -> c##xo d##xo)\n-> a##xo\n   -> (Main.Digit b##xo)\n      -> a##xo\n         -> c##xo (Main.Digit d##xo)"
467:17-467:18::f :: "a##xo\n-> b##xo\n   -> a##xo\n      -> c##xo d##xo"
467:19-467:21::vl :: "a##xo"
467:30-467:32::vr :: "a##xo"
467:35-467:52::lq_anf$##7205759403792837206 :: "a##xo\n-> (Main.Digit a##xo)"
467:39-467:42::_ :: "(a##xo\n -> (Main.Digit a##xo))\n-> b##xo a##xo\n   -> b##xo (Main.Digit a##xo)"
467:43-467:44::_ :: "{v : a##xo\n     -> b##xo\n        -> a##xo\n           -> c##xo d##xo | v == f}"
468:37-468:54::lq_anf$##7205759403792837212 :: "a##xo b##xo\n      -> (Main.Digit b##xo)"
468:41-468:44::_ :: "(a##xo\n -> a##xo\n    -> (Main.Digit a##xo))\n-> b##xo a##xo\n   -> b##xo a##xo\n            -> (Main.Digit a##xo)"
468:45-468:46::_ :: "{v : a##xo\n     -> b##xo\n        -> a##xo\n           -> c##xo d##xo | v == f}"
468:55-468:58::_ :: "a##xo (b##xo\n       -> (Main.Digit b##xo))\n-> a##xo b##xo\n   -> a##xo (Main.Digit b##xo)"
468:59-468:60::_ :: "{v : a##xo\n     -> b##xo\n        -> a##xo\n           -> c##xo d##xo | v == f}"
470:5-470:7::va :: "a##xo"
470:15-470:37::_ :: "a##xo"
470:18-470:27::_ :: "a##xo\n-> a##xo\n   -> a##xo"
470:28-470:35::_ :: "a##xo\n-> b##xo"
471:5-471:7::vb :: "a##xo"
471:15-471:22::_ :: "a##xo\n-> b##xo"
471:25-471:34::_ :: "a##xo\n-> a##xo\n   -> a##xo"
473:5-473:25::lq_anf$##7205759403792837220 :: "a##xo b##xo\n      -> b##xo\n         -> (Main.Digit b##xo)"
473:11-473:14::_ :: "(a##xo\n -> a##xo\n    -> a##xo\n       -> (Main.Digit a##xo))\n-> b##xo a##xo\n   -> b##xo a##xo\n            -> a##xo\n               -> (Main.Digit a##xo)"
473:15-473:16::_ :: "{v : a##xo\n     -> b##xo\n        -> a##xo\n           -> c##xo d##xo | v == f}"
473:26-473:29::_ :: "a##xo (b##xo\n       -> b##xo\n          -> (Main.Digit b##xo))\n-> a##xo b##xo\n   -> a##xo b##xo\n            -> (Main.Digit b##xo)"
473:30-473:31::_ :: "{v : a##xo\n     -> b##xo\n        -> a##xo\n           -> c##xo d##xo | v == f}"
473:40-473:43::_ :: "a##xo (b##xo\n       -> (Main.Digit b##xo))\n-> a##xo b##xo\n   -> a##xo (Main.Digit b##xo)"
473:44-473:45::_ :: "{v : a##xo\n     -> b##xo\n        -> a##xo\n           -> c##xo d##xo | v == f}"
475:5-475:7::va :: "a##xo"
475:15-475:37::_ :: "a##xo"
475:18-475:27::_ :: "a##xo\n-> a##xo\n   -> a##xo"
475:28-475:35::_ :: "a##xo\n-> b##xo"
476:5-476:8::vab :: "a##xo"
476:15-476:37::_ :: "a##xo"
476:18-476:27::_ :: "a##xo\n-> a##xo\n   -> a##xo"
476:28-476:35::_ :: "a##xo\n-> b##xo"
477:5-477:7::vc :: "a##xo"
477:15-477:22::_ :: "a##xo\n-> b##xo"
477:25-477:34::_ :: "a##xo\n-> a##xo\n   -> a##xo"
478:5-478:8::vbc :: "a##xo"
478:15-478:22::_ :: "a##xo\n-> b##xo"
478:25-478:34::_ :: "a##xo\n-> a##xo\n   -> a##xo"
480:5-480:25::lq_anf$##7205759403792837232 :: "a##xo b##xo\n      -> b##xo\n         -> b##xo\n            -> (Main.Digit b##xo)"
480:10-480:13::_ :: "(a##xo\n -> a##xo\n    -> a##xo\n       -> a##xo\n          -> (Main.Digit a##xo))\n-> b##xo a##xo\n   -> b##xo a##xo\n            -> a##xo\n               -> a##xo\n                  -> (Main.Digit a##xo)"
480:14-480:15::_ :: "{v : a##xo\n     -> b##xo\n        -> a##xo\n           -> c##xo d##xo | v == f}"
480:26-480:29::_ :: "a##xo (b##xo\n       -> b##xo\n          -> b##xo\n             -> (Main.Digit b##xo))\n-> a##xo b##xo\n   -> a##xo b##xo\n            -> b##xo\n               -> (Main.Digit b##xo)"
480:30-480:31::_ :: "{v : a##xo\n     -> b##xo\n        -> a##xo\n           -> c##xo d##xo | v == f}"
480:41-480:44::_ :: "a##xo (b##xo\n       -> b##xo\n          -> (Main.Digit b##xo))\n-> a##xo b##xo\n   -> a##xo b##xo\n            -> (Main.Digit b##xo)"
480:45-480:46::_ :: "{v : a##xo\n     -> b##xo\n        -> a##xo\n           -> c##xo d##xo | v == f}"
480:56-480:59::_ :: "a##xo (b##xo\n       -> (Main.Digit b##xo))\n-> a##xo b##xo\n   -> a##xo (Main.Digit b##xo)"
480:60-480:61::_ :: "{v : a##xo\n     -> b##xo\n        -> a##xo\n           -> c##xo d##xo | v == f}"
482:5-482:7::va :: "a##xo"
482:15-482:37::_ :: "a##xo"
482:18-482:27::_ :: "a##xo\n-> a##xo\n   -> a##xo"
482:28-482:35::_ :: "a##xo\n-> b##xo"
483:5-483:8::vab :: "a##xo"
483:15-483:37::_ :: "a##xo"
483:18-483:27::_ :: "a##xo\n-> a##xo\n   -> a##xo"
483:28-483:35::_ :: "a##xo\n-> b##xo"
484:5-484:9::vabc :: "a##xo"
484:15-484:38::_ :: "a##xo"
484:19-484:28::_ :: "a##xo\n-> a##xo\n   -> a##xo"
484:29-484:36::_ :: "a##xo\n-> b##xo"
485:5-485:7::vd :: "a##xo"
485:15-485:22::_ :: "a##xo\n-> b##xo"
485:25-485:34::_ :: "a##xo\n-> a##xo\n   -> a##xo"
486:5-486:8::vcd :: "a##xo"
486:15-486:22::_ :: "a##xo\n-> b##xo"
486:25-486:34::_ :: "a##xo\n-> a##xo\n   -> a##xo"
487:5-487:9::vbcd :: "a##xo"
487:15-487:22::_ :: "a##xo\n-> b##xo"
487:25-487:34::_ :: "a##xo\n-> a##xo\n   -> a##xo"
492:1-492:15::Main.unsafeTraverse :: "forall a##xo b##xo c##xo d##xo .\n(GHC.Base.Applicative<[]> a##xo) =>\n(b##xo\n -> a##xo c##xo)\n-> (Main.FingerTree d##xo b##xo)\n   -> a##xo (Main.FingerTree d##xo c##xo)"
492:26-492:30::_ :: "(Main.FingerTree a##xo b##xo)\n-> c##xo (Main.FingerTree a##xo b##xo)"
493:31-493:45::lq_anf$##7205759403792837266 :: "a##xo\n-> (Main.FingerTree b##xo a##xo)"
493:38-493:41::_ :: "(a##xo\n -> (Main.FingerTree b##xo a##xo))\n-> c##xo a##xo\n   -> c##xo (Main.FingerTree b##xo a##xo)"
493:42-493:43::_ :: "a##xo\n-> b##xo c##xo"
495:5-495:11::lq_anf$##7205759403792837268 :: "(Main.Digit a##xo)\n-> (Main.FingerTree b##xo (Main.Node b##xo a##xo))\n   -> (Main.Digit a##xo)\n      -> (Main.FingerTree b##xo a##xo)"
495:12-495:15::_ :: "((Main.Digit a##xo)\n -> (Main.FingerTree b##xo (Main.Node b##xo a##xo))\n    -> (Main.Digit a##xo)\n       -> (Main.FingerTree b##xo a##xo))\n-> c##xo (Main.Digit a##xo)\n   -> c##xo (Main.FingerTree b##xo (Main.Node b##xo a##xo))\n            -> (Main.Digit a##xo)\n               -> (Main.FingerTree b##xo a##xo)"
495:16-495:29::_ :: "(a##xo\n -> b##xo c##xo)\n-> (Main.Digit a##xo)\n   -> b##xo (Main.Digit c##xo)"
495:35-495:38::_ :: "a##xo ((Main.FingerTree b##xo (Main.Node b##xo c##xo))\n       -> (Main.Digit c##xo)\n          -> (Main.FingerTree b##xo c##xo))\n-> a##xo (Main.FingerTree b##xo (Main.Node b##xo c##xo))\n   -> a##xo (Main.Digit c##xo)\n            -> (Main.FingerTree b##xo c##xo)"
495:39-495:53::Main.unsafeTraverse :: "forall a##xo b##xo c##xo d##xo .\n(GHC.Base.Applicative<[]> a##xo) =>\n(b##xo\n -> a##xo c##xo)\n-> (Main.FingerTree d##xo b##xo)\n   -> a##xo (Main.FingerTree d##xo c##xo)"
495:55-495:73::_ :: "(a##xo\n -> b##xo c##xo)\n-> (Main.Node d##xo a##xo)\n   -> b##xo (Main.Node d##xo c##xo)"
495:79-495:82::_ :: "a##xo ((Main.Digit b##xo)\n       -> (Main.FingerTree c##xo b##xo))\n-> a##xo (Main.Digit b##xo)\n   -> a##xo (Main.FingerTree c##xo b##xo)"
495:83-495:96::_ :: "(a##xo\n -> b##xo c##xo)\n-> (Main.Digit a##xo)\n   -> b##xo (Main.Digit c##xo)"
499:1-499:19::Main.unsafeTraverseNode :: "forall a##xo b##xo c##xo d##xo .\n(GHC.Base.Applicative<[]> a##xo) =>\n(b##xo\n -> a##xo c##xo)\n-> (Main.Node d##xo b##xo)\n   -> a##xo (Main.Node d##xo c##xo)"
499:20-499:21::f :: "a##xo\n-> b##xo c##xo"
499:38-499:45::lq_anf$##7205759403792837254 :: "a##xo\n-> a##xo\n   -> (Main.Node b##xo a##xo)"
499:46-499:49::_ :: "(a##xo\n -> a##xo\n    -> (Main.Node b##xo a##xo))\n-> c##xo a##xo\n   -> c##xo a##xo\n            -> (Main.Node b##xo a##xo)"
499:50-499:51::_ :: "{v : a##xo\n     -> b##xo c##xo | v == f}"
499:54-499:57::_ :: "a##xo (b##xo\n       -> (Main.Node c##xo b##xo))\n-> a##xo b##xo\n   -> a##xo (Main.Node c##xo b##xo)"
499:58-499:59::_ :: "{v : a##xo\n     -> b##xo c##xo | v == f}"
500:40-500:47::lq_anf$##7205759403792837258 :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
500:48-500:51::_ :: "(a##xo\n -> a##xo\n    -> a##xo\n       -> (Main.Node b##xo a##xo))\n-> c##xo a##xo\n   -> c##xo a##xo\n            -> a##xo\n               -> (Main.Node b##xo a##xo)"
500:52-500:53::_ :: "{v : a##xo\n     -> b##xo c##xo | v == f}"
500:56-500:59::_ :: "a##xo (b##xo\n       -> b##xo\n          -> (Main.Node c##xo b##xo))\n-> a##xo b##xo\n   -> a##xo b##xo\n            -> (Main.Node c##xo b##xo)"
500:60-500:61::_ :: "{v : a##xo\n     -> b##xo c##xo | v == f}"
500:64-500:67::_ :: "a##xo (b##xo\n       -> (Main.Node c##xo b##xo))\n-> a##xo b##xo\n   -> a##xo (Main.Node c##xo b##xo)"
500:68-500:69::_ :: "{v : a##xo\n     -> b##xo c##xo | v == f}"
508:1-508:6::Main.empty :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(Main.FingerTree a##xo b##xo)"
512:1-512:10::Main.singleton :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\nb##xo\n-> (Main.FingerTree a##xo b##xo)"
517:1-517:9::Main.fromList :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n[b##xo]\n-> (Main.FingerTree a##xo b##xo)"
517:12-517:17::_ :: "(a##xo\n -> (Main.FingerTree b##xo a##xo)\n    -> (Main.FingerTree b##xo a##xo))\n-> (Main.FingerTree b##xo a##xo)\n   -> [a##xo]\n      -> (Main.FingerTree b##xo a##xo)"
522:1-522:2::a :: "a##xo"
522:3-522:5::Main.<| :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\nb##xo\n-> (Main.FingerTree a##xo b##xo)\n   -> (Main.FingerTree a##xo b##xo)"
523:28-523:32::_ :: "(Main.Digit a##xo)\n-> (Main.FingerTree b##xo (Main.Node b##xo a##xo))\n   -> (Main.Digit a##xo)\n      -> (Main.FingerTree b##xo a##xo)"
525:5-525:33::_ :: "(Main.Digit a##xo)\n-> (Main.FingerTree b##xo (Main.Node b##xo a##xo))\n   -> (Main.Digit a##xo)\n      -> (Main.FingerTree b##xo a##xo)"
525:11-525:18::_ :: "a##xo\n-> b##xo"
525:21-525:30::_ :: "a##xo\n-> a##xo\n   -> a##xo"
525:35-525:40::_ :: "a##xo\n-> (Main.Digit a##xo)"
525:45-525:50::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
525:57-525:59::Main.<| :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\nb##xo\n-> (Main.FingerTree a##xo b##xo)\n   -> (Main.FingerTree a##xo b##xo)"
527:5-527:33::_ :: "(Main.Digit a##xo)\n-> (Main.FingerTree b##xo (Main.Node b##xo a##xo))\n   -> (Main.Digit a##xo)\n      -> (Main.FingerTree b##xo a##xo)"
527:11-527:18::_ :: "a##xo\n-> b##xo"
527:21-527:30::_ :: "a##xo\n-> a##xo\n   -> a##xo"
527:35-527:46::_ :: "(Main.Digit a##xo)\n-> (Main.Digit a##xo)"
530:1-530:10::Main.consDigit :: "forall a##xo .\na##xo\n-> (Main.Digit a##xo)\n   -> (Main.Digit a##xo)"
530:11-530:12::a :: "a##xo"
530:23-530:28::_ :: "a##xo\n-> (Main.Digit a##xo)"
531:25-531:32::_ :: "a##xo\n-> a##xo\n   -> (Main.Digit a##xo)"
532:29-532:35::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Digit a##xo)"
533:30-533:58::lq_anf$##7205759403792837568 :: "[GHC.Types.Char]"
538:7-538:9::Main.|> :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(Main.FingerTree a##xo b##xo)\n-> b##xo\n   -> (Main.FingerTree a##xo b##xo)"
538:10-538:11::a :: "a##xo"
539:28-539:32::_ :: "(Main.Digit a##xo)\n-> (Main.FingerTree b##xo (Main.Node b##xo a##xo))\n   -> (Main.Digit a##xo)\n      -> (Main.FingerTree b##xo a##xo)"
541:5-541:33::_ :: "(Main.Digit a##xo)\n-> (Main.FingerTree b##xo (Main.Node b##xo a##xo))\n   -> (Main.Digit a##xo)\n      -> (Main.FingerTree b##xo a##xo)"
541:11-541:32::lq_anf$##7205759403792837555 :: "a##xo"
541:13-541:22::_ :: "a##xo\n-> a##xo\n   -> a##xo"
541:23-541:30::_ :: "a##xo\n-> b##xo"
541:38-541:54::lq_anf$##7205759403792837557 :: "(Main.FingerTree a##xo (Main.Node a##xo b##xo))"
541:40-541:42::Main.|> :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(Main.FingerTree a##xo b##xo)\n-> b##xo\n   -> (Main.FingerTree a##xo b##xo)"
541:43-541:48::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
541:57-541:62::_ :: "a##xo\n-> (Main.Digit a##xo)"
543:5-543:33::_ :: "(Main.Digit a##xo)\n-> (Main.FingerTree b##xo (Main.Node b##xo a##xo))\n   -> (Main.Digit a##xo)\n      -> (Main.FingerTree b##xo a##xo)"
543:11-543:32::lq_anf$##7205759403792837552 :: "a##xo"
543:13-543:22::_ :: "a##xo\n-> a##xo\n   -> a##xo"
543:23-543:30::_ :: "a##xo\n-> b##xo"
543:40-543:52::_ :: "a##xo\n-> (Main.Digit a##xo)"
546:1-546:10::Main.snocDigit :: "forall a##xo .\n(Main.Digit a##xo)\n-> a##xo\n   -> (Main.Digit a##xo)"
546:19-546:20::b :: "a##xo"
546:23-546:28::_ :: "a##xo\n-> (Main.Digit a##xo)"
547:25-547:32::_ :: "a##xo\n-> a##xo\n   -> (Main.Digit a##xo)"
548:29-548:35::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Digit a##xo)"
549:30-549:58::lq_anf$##7205759403792837545 :: "[GHC.Types.Char]"
553:1-553:5::Main.null :: "forall a##xo b##xo .\n(Main.FingerTree a##xo b##xo)\n-> GHC.Types.Bool"
558:1-558:6::Main.viewl :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(Main.FingerTree a##xo b##xo)\n-> (Main.ViewL (Main.FingerTree a##xo) b##xo)"
560:41-560:45::Main.rotL :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(Main.FingerTree a##xo (Main.Node a##xo b##xo))\n-> (Main.Digit b##xo)\n   -> (Main.FingerTree a##xo b##xo)"
561:36-561:49::lq_anf$##7205759403792837529 :: "a##xo"
561:53-561:57::_ :: "(Main.Digit a##xo)\n-> (Main.FingerTree b##xo (Main.Node b##xo a##xo))\n   -> (Main.Digit a##xo)\n      -> (Main.FingerTree b##xo a##xo)"
561:59-561:72::lq_anf$##7205759403792837530 :: "(Main.Digit a##xo)"
564:1-564:5::Main.rotL :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(Main.FingerTree a##xo (Main.Node a##xo b##xo))\n-> (Main.Digit b##xo)\n   -> (Main.FingerTree a##xo b##xo)"
564:6-564:7::m :: "(Main.FingerTree a##xo (Main.Node a##xo b##xo))"
564:8-564:10::sf :: "(Main.Digit a##xo)"
564:25-564:30::Main.viewl :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(Main.FingerTree a##xo b##xo)\n-> (Main.ViewL (Main.FingerTree a##xo) b##xo)"
565:17-565:28::_ :: "(Main.Digit a##xo)\n-> (Main.FingerTree b##xo a##xo)"
566:17-566:54::_ :: "(Main.Digit a##xo)\n-> (Main.FingerTree b##xo (Main.Node b##xo a##xo))\n   -> (Main.Digit a##xo)\n      -> (Main.FingerTree b##xo a##xo)"
566:23-566:30::_ :: "(Main.FingerTree a##xo (Main.Node a##xo b##xo))\n-> a##xo"
566:33-566:42::_ :: "a##xo\n-> a##xo\n   -> a##xo"
566:43-566:50::_ :: "(Main.Digit a##xo)\n-> b##xo"
566:56-566:69::lq_anf$##7205759403792837525 :: "(Main.Digit a##xo)"
569:1-569:11::Main.lheadDigit :: "forall a##xo .\n(Main.Digit a##xo)\n-> a##xo"
575:1-575:11::Main.ltailDigit :: "forall a##xo .\n(Main.Digit a##xo)\n-> (Main.Digit a##xo)"
575:22-575:51::lq_anf$##7205759403792837519 :: "[GHC.Types.Char]"
577:28-577:33::_ :: "a##xo\n-> (Main.Digit a##xo)"
578:29-578:36::_ :: "a##xo\n-> a##xo\n   -> (Main.Digit a##xo)"
582:1-582:6::Main.viewr :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(Main.FingerTree a##xo b##xo)\n-> (Main.ViewR (Main.FingerTree a##xo) b##xo)"
584:36-584:40::Main.rotR :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(Main.Digit b##xo)\n-> (Main.FingerTree a##xo (Main.Node a##xo b##xo))\n   -> (Main.FingerTree a##xo b##xo)"
585:36-585:40::_ :: "(Main.Digit a##xo)\n-> (Main.FingerTree b##xo (Main.Node b##xo a##xo))\n   -> (Main.Digit a##xo)\n      -> (Main.FingerTree b##xo a##xo)"
585:47-585:60::lq_anf$##7205759403792837503 :: "(Main.Digit a##xo)"
585:65-585:78::lq_anf$##7205759403792837505 :: "a##xo"
588:1-588:5::Main.rotR :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(Main.Digit b##xo)\n-> (Main.FingerTree a##xo (Main.Node a##xo b##xo))\n   -> (Main.FingerTree a##xo b##xo)"
588:6-588:8::pr :: "(Main.Digit a##xo)"
588:9-588:10::m :: "(Main.FingerTree a##xo (Main.Node a##xo b##xo))"
588:18-588:23::Main.viewr :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(Main.FingerTree a##xo b##xo)\n-> (Main.ViewR (Main.FingerTree a##xo) b##xo)"
589:17-589:28::_ :: "(Main.Digit a##xo)\n-> (Main.FingerTree b##xo a##xo)"
590:17-590:54::_ :: "(Main.Digit a##xo)\n-> (Main.FingerTree b##xo (Main.Node b##xo a##xo))\n   -> (Main.Digit a##xo)\n      -> (Main.FingerTree b##xo a##xo)"
590:23-590:30::_ :: "(Main.Digit a##xo)\n-> b##xo"
590:34-590:43::_ :: "a##xo\n-> a##xo\n   -> a##xo"
590:44-590:51::_ :: "(Main.FingerTree a##xo (Main.Node a##xo b##xo))\n-> a##xo"
590:62-590:75::lq_anf$##7205759403792837499 :: "(Main.Digit a##xo)"
593:1-593:11::Main.rheadDigit :: "forall a##xo .\n(Main.Digit a##xo)\n-> a##xo"
599:1-599:11::Main.rtailDigit :: "forall a##xo .\n(Main.Digit a##xo)\n-> (Main.Digit a##xo)"
599:22-599:51::lq_anf$##7205759403792837493 :: "[GHC.Types.Char]"
601:28-601:33::_ :: "a##xo\n-> (Main.Digit a##xo)"
602:29-602:36::_ :: "a##xo\n-> a##xo\n   -> (Main.Digit a##xo)"
605:1-605:12::Main.digitToTree :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(Main.Digit b##xo)\n-> (Main.FingerTree a##xo b##xo)"
606:25-606:29::_ :: "(Main.Digit a##xo)\n-> (Main.FingerTree b##xo (Main.Node b##xo a##xo))\n   -> (Main.Digit a##xo)\n      -> (Main.FingerTree b##xo a##xo)"
607:29-607:33::_ :: "(Main.Digit a##xo)\n-> (Main.FingerTree b##xo (Main.Node b##xo a##xo))\n   -> (Main.Digit a##xo)\n      -> (Main.FingerTree b##xo a##xo)"
607:35-607:40::_ :: "a##xo\n-> (Main.Digit a##xo)"
608:30-608:34::_ :: "(Main.Digit a##xo)\n-> (Main.FingerTree b##xo (Main.Node b##xo a##xo))\n   -> (Main.Digit a##xo)\n      -> (Main.FingerTree b##xo a##xo)"
608:36-608:41::_ :: "a##xo\n-> (Main.Digit a##xo)"
608:52-608:57::_ :: "a##xo\n-> (Main.Digit a##xo)"
616:1-616:5::Main.>< :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(Main.FingerTree a##xo b##xo)\n-> (Main.FingerTree a##xo b##xo)\n   -> (Main.FingerTree a##xo b##xo)"
616:9-616:20::$dMeasured_a8ug :: "{v : (Main.Measured a##xo b##xo) | v == $dMeasured_a8ug}"
619:1-619:12::Main.appendTree0 :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(Main.FingerTree a##xo b##xo)\n-> (Main.FingerTree a##xo b##xo)\n   -> (Main.FingerTree a##xo b##xo)"
619:19-619:21::xs :: "(Main.FingerTree a##xo b##xo)"
624:5-624:12::xs :: "{v : (Main.FingerTree a##xo b##xo) | v == xs}"
624:7-624:9::_ :: "a##xo\n-> (Main.FingerTree b##xo a##xo)\n   -> (Main.FingerTree b##xo a##xo)"
626:5-626:12::x :: "{VV : a##xo | VV == x}"
626:8-626:10::_ :: "(Main.FingerTree a##xo b##xo)\n-> b##xo\n   -> (Main.FingerTree a##xo b##xo)"
628:5-628:9::_ :: "(Main.Digit a##xo)\n-> (Main.FingerTree b##xo (Main.Node b##xo a##xo))\n   -> (Main.Digit a##xo)\n      -> (Main.FingerTree b##xo a##xo)"
628:15-628:25::_ :: "(Main.FingerTree a##xo (Main.Node a##xo b##xo))\n-> (Main.Digit b##xo)\n   -> (Main.Digit b##xo)\n      -> (Main.FingerTree a##xo (Main.Node a##xo b##xo))\n         -> (Main.FingerTree a##xo (Main.Node a##xo b##xo))"
631:1-631:11::Main.addDigits0 :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(Main.FingerTree a##xo (Main.Node a##xo b##xo))\n-> (Main.Digit b##xo)\n   -> (Main.Digit b##xo)\n      -> (Main.FingerTree a##xo (Main.Node a##xo b##xo))\n         -> (Main.FingerTree a##xo (Main.Node a##xo b##xo))"
631:12-631:14::m1 :: "(Main.FingerTree a##xo (Main.Node a##xo b##xo))"
631:31-631:33::m2 :: "(Main.FingerTree a##xo (Main.Node a##xo b##xo))"
632:5-632:16::_ :: "(Main.FingerTree a##xo (Main.Node a##xo b##xo))\n-> (Main.Node a##xo b##xo)\n   -> (Main.FingerTree a##xo (Main.Node a##xo b##xo))\n      -> (Main.FingerTree a##xo (Main.Node a##xo b##xo))"
632:21-632:26::_ :: "a##xo\n-> a##xo\n   -> (Main.Node b##xo a##xo)"
634:5-634:16::_ :: "(Main.FingerTree a##xo (Main.Node a##xo b##xo))\n-> (Main.Node a##xo b##xo)\n   -> (Main.FingerTree a##xo (Main.Node a##xo b##xo))\n      -> (Main.FingerTree a##xo (Main.Node a##xo b##xo))"
634:21-634:26::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
636:5-636:16::_ :: "(Main.FingerTree a##xo (Main.Node a##xo b##xo))\n-> (Main.Node a##xo b##xo)\n   -> (Main.Node a##xo b##xo)\n      -> (Main.FingerTree a##xo (Main.Node a##xo b##xo))\n         -> (Main.FingerTree a##xo (Main.Node a##xo b##xo))"
636:21-636:26::_ :: "a##xo\n-> a##xo\n   -> (Main.Node b##xo a##xo)"
636:33-636:38::_ :: "a##xo\n-> a##xo\n   -> (Main.Node b##xo a##xo)"
638:5-638:16::_ :: "(Main.FingerTree a##xo (Main.Node a##xo b##xo))\n-> (Main.Node a##xo b##xo)\n   -> (Main.Node a##xo b##xo)\n      -> (Main.FingerTree a##xo (Main.Node a##xo b##xo))\n         -> (Main.FingerTree a##xo (Main.Node a##xo b##xo))"
638:21-638:26::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
638:35-638:40::_ :: "a##xo\n-> a##xo\n   -> (Main.Node b##xo a##xo)"
640:5-640:16::_ :: "(Main.FingerTree a##xo (Main.Node a##xo b##xo))\n-> (Main.Node a##xo b##xo)\n   -> (Main.FingerTree a##xo (Main.Node a##xo b##xo))\n      -> (Main.FingerTree a##xo (Main.Node a##xo b##xo))"
640:21-640:26::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
642:5-642:16::_ :: "(Main.FingerTree a##xo (Main.Node a##xo b##xo))\n-> (Main.Node a##xo b##xo)\n   -> (Main.Node a##xo b##xo)\n      -> (Main.FingerTree a##xo (Main.Node a##xo b##xo))\n         -> (Main.FingerTree a##xo (Main.Node a##xo b##xo))"
642:21-642:26::_ :: "a##xo\n-> a##xo\n   -> (Main.Node b##xo a##xo)"
642:33-642:38::_ :: "a##xo\n-> a##xo\n   -> (Main.Node b##xo a##xo)"
644:5-644:16::_ :: "(Main.FingerTree a##xo (Main.Node a##xo b##xo))\n-> (Main.Node a##xo b##xo)\n   -> (Main.Node a##xo b##xo)\n      -> (Main.FingerTree a##xo (Main.Node a##xo b##xo))\n         -> (Main.FingerTree a##xo (Main.Node a##xo b##xo))"
644:21-644:26::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
644:35-644:40::_ :: "a##xo\n-> a##xo\n   -> (Main.Node b##xo a##xo)"
646:5-646:16::_ :: "(Main.FingerTree a##xo (Main.Node a##xo b##xo))\n-> (Main.Node a##xo b##xo)\n   -> (Main.Node a##xo b##xo)\n      -> (Main.FingerTree a##xo (Main.Node a##xo b##xo))\n         -> (Main.FingerTree a##xo (Main.Node a##xo b##xo))"
646:21-646:26::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
646:35-646:40::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
648:5-648:16::_ :: "(Main.FingerTree a##xo (Main.Node a##xo b##xo))\n-> (Main.Node a##xo b##xo)\n   -> (Main.Node a##xo b##xo)\n      -> (Main.FingerTree a##xo (Main.Node a##xo b##xo))\n         -> (Main.FingerTree a##xo (Main.Node a##xo b##xo))"
648:21-648:26::_ :: "a##xo\n-> a##xo\n   -> (Main.Node b##xo a##xo)"
648:33-648:38::_ :: "a##xo\n-> a##xo\n   -> (Main.Node b##xo a##xo)"
650:5-650:16::_ :: "(Main.FingerTree a##xo (Main.Node a##xo b##xo))\n-> (Main.Node a##xo b##xo)\n   -> (Main.Node a##xo b##xo)\n      -> (Main.FingerTree a##xo (Main.Node a##xo b##xo))\n         -> (Main.FingerTree a##xo (Main.Node a##xo b##xo))"
650:21-650:26::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
650:35-650:40::_ :: "a##xo\n-> a##xo\n   -> (Main.Node b##xo a##xo)"
652:5-652:16::_ :: "(Main.FingerTree a##xo (Main.Node a##xo b##xo))\n-> (Main.Node a##xo b##xo)\n   -> (Main.Node a##xo b##xo)\n      -> (Main.FingerTree a##xo (Main.Node a##xo b##xo))\n         -> (Main.FingerTree a##xo (Main.Node a##xo b##xo))"
652:21-652:26::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
652:35-652:40::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
654:5-654:16::_ :: "(Main.FingerTree a##xo (Main.Node a##xo b##xo))\n-> (Main.Node a##xo b##xo)\n   -> (Main.Node a##xo b##xo)\n      -> (Main.Node a##xo b##xo)\n         -> (Main.FingerTree a##xo (Main.Node a##xo b##xo))\n            -> (Main.FingerTree a##xo (Main.Node a##xo b##xo))"
654:21-654:26::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
654:35-654:40::_ :: "a##xo\n-> a##xo\n   -> (Main.Node b##xo a##xo)"
654:47-654:52::_ :: "a##xo\n-> a##xo\n   -> (Main.Node b##xo a##xo)"
656:5-656:16::_ :: "(Main.FingerTree a##xo (Main.Node a##xo b##xo))\n-> (Main.Node a##xo b##xo)\n   -> (Main.Node a##xo b##xo)\n      -> (Main.FingerTree a##xo (Main.Node a##xo b##xo))\n         -> (Main.FingerTree a##xo (Main.Node a##xo b##xo))"
656:21-656:26::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
656:35-656:40::_ :: "a##xo\n-> a##xo\n   -> (Main.Node b##xo a##xo)"
658:5-658:16::_ :: "(Main.FingerTree a##xo (Main.Node a##xo b##xo))\n-> (Main.Node a##xo b##xo)\n   -> (Main.Node a##xo b##xo)\n      -> (Main.FingerTree a##xo (Main.Node a##xo b##xo))\n         -> (Main.FingerTree a##xo (Main.Node a##xo b##xo))"
658:21-658:26::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
658:35-658:40::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
660:5-660:16::_ :: "(Main.FingerTree a##xo (Main.Node a##xo b##xo))\n-> (Main.Node a##xo b##xo)\n   -> (Main.Node a##xo b##xo)\n      -> (Main.Node a##xo b##xo)\n         -> (Main.FingerTree a##xo (Main.Node a##xo b##xo))\n            -> (Main.FingerTree a##xo (Main.Node a##xo b##xo))"
660:21-660:26::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
660:35-660:40::_ :: "a##xo\n-> a##xo\n   -> (Main.Node b##xo a##xo)"
660:47-660:52::_ :: "a##xo\n-> a##xo\n   -> (Main.Node b##xo a##xo)"
662:5-662:16::_ :: "(Main.FingerTree a##xo (Main.Node a##xo b##xo))\n-> (Main.Node a##xo b##xo)\n   -> (Main.Node a##xo b##xo)\n      -> (Main.Node a##xo b##xo)\n         -> (Main.FingerTree a##xo (Main.Node a##xo b##xo))\n            -> (Main.FingerTree a##xo (Main.Node a##xo b##xo))"
662:21-662:26::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
662:35-662:40::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
662:49-662:54::_ :: "a##xo\n-> a##xo\n   -> (Main.Node b##xo a##xo)"
665:1-665:12::Main.appendTree1 :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(Main.FingerTree a##xo b##xo)\n-> b##xo\n   -> (Main.FingerTree a##xo b##xo)\n      -> (Main.FingerTree a##xo b##xo)"
665:19-665:20::a :: "a##xo"
665:21-665:23::xs :: "(Main.FingerTree a##xo b##xo)"
666:5-666:12::xs :: "{v : (Main.FingerTree a##xo b##xo) | v == xs}"
666:7-666:9::_ :: "a##xo\n-> (Main.FingerTree b##xo a##xo)\n   -> (Main.FingerTree b##xo a##xo)"
668:5-668:12::a :: "{VV : a##xo | VV == a}"
668:8-668:10::_ :: "(Main.FingerTree a##xo b##xo)\n-> b##xo\n   -> (Main.FingerTree a##xo b##xo)"
670:5-670:17::x :: "{VV : a##xo | VV == x}"
670:7-670:9::_ :: "a##xo\n-> (Main.FingerTree b##xo a##xo)\n   -> (Main.FingerTree b##xo a##xo)"
670:10-670:17::lq_anf$##7205759403792837889 :: "(Main.FingerTree a##xo b##xo)"
670:12-670:14::_ :: "a##xo\n-> (Main.FingerTree b##xo a##xo)\n   -> (Main.FingerTree b##xo a##xo)"
672:5-672:12::lq_anf$##7205759403792837888 :: "(Main.FingerTree a##xo b##xo)"
672:8-672:10::_ :: "(Main.FingerTree a##xo b##xo)\n-> b##xo\n   -> (Main.FingerTree a##xo b##xo)"
672:13-672:15::_ :: "(Main.FingerTree a##xo b##xo)\n-> b##xo\n   -> (Main.FingerTree a##xo b##xo)"
674:5-674:9::_ :: "(Main.Digit a##xo)\n-> (Main.FingerTree b##xo (Main.Node b##xo a##xo))\n   -> (Main.Digit a##xo)\n      -> (Main.FingerTree b##xo a##xo)"
674:15-674:25::Main.addDigits1 :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(Main.FingerTree a##xo (Main.Node a##xo b##xo))\n-> (Main.Digit b##xo)\n   -> b##xo\n      -> (Main.Digit b##xo)\n         -> (Main.FingerTree a##xo (Main.Node a##xo b##xo))\n            -> (Main.FingerTree a##xo (Main.Node a##xo b##xo))"
677:1-677:11::Main.addDigits1 :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(Main.FingerTree a##xo (Main.Node a##xo b##xo))\n-> (Main.Digit b##xo)\n   -> b##xo\n      -> (Main.Digit b##xo)\n         -> (Main.FingerTree a##xo (Main.Node a##xo b##xo))\n            -> (Main.FingerTree a##xo (Main.Node a##xo b##xo))"
677:12-677:14::m1 :: "(Main.FingerTree a##xo (Main.Node a##xo b##xo))"
677:23-677:24::b :: "a##xo"
677:33-677:35::m2 :: "(Main.FingerTree a##xo (Main.Node a##xo b##xo))"
678:5-678:16::Main.appendTree1 :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(Main.FingerTree a##xo b##xo)\n-> b##xo\n   -> (Main.FingerTree a##xo b##xo)\n      -> (Main.FingerTree a##xo b##xo)"
678:21-678:26::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
680:5-680:16::_ :: "(Main.FingerTree a##xo (Main.Node a##xo b##xo))\n-> (Main.Node a##xo b##xo)\n   -> (Main.Node a##xo b##xo)\n      -> (Main.FingerTree a##xo (Main.Node a##xo b##xo))\n         -> (Main.FingerTree a##xo (Main.Node a##xo b##xo))"
680:21-680:26::_ :: "a##xo\n-> a##xo\n   -> (Main.Node b##xo a##xo)"
680:33-680:38::_ :: "a##xo\n-> a##xo\n   -> (Main.Node b##xo a##xo)"
682:5-682:16::_ :: "(Main.FingerTree a##xo (Main.Node a##xo b##xo))\n-> (Main.Node a##xo b##xo)\n   -> (Main.Node a##xo b##xo)\n      -> (Main.FingerTree a##xo (Main.Node a##xo b##xo))\n         -> (Main.FingerTree a##xo (Main.Node a##xo b##xo))"
682:21-682:26::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
682:35-682:40::_ :: "a##xo\n-> a##xo\n   -> (Main.Node b##xo a##xo)"
684:5-684:16::_ :: "(Main.FingerTree a##xo (Main.Node a##xo b##xo))\n-> (Main.Node a##xo b##xo)\n   -> (Main.Node a##xo b##xo)\n      -> (Main.FingerTree a##xo (Main.Node a##xo b##xo))\n         -> (Main.FingerTree a##xo (Main.Node a##xo b##xo))"
684:21-684:26::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
684:35-684:40::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
686:5-686:16::_ :: "(Main.FingerTree a##xo (Main.Node a##xo b##xo))\n-> (Main.Node a##xo b##xo)\n   -> (Main.Node a##xo b##xo)\n      -> (Main.FingerTree a##xo (Main.Node a##xo b##xo))\n         -> (Main.FingerTree a##xo (Main.Node a##xo b##xo))"
686:21-686:26::_ :: "a##xo\n-> a##xo\n   -> (Main.Node b##xo a##xo)"
686:33-686:38::_ :: "a##xo\n-> a##xo\n   -> (Main.Node b##xo a##xo)"
688:5-688:16::_ :: "(Main.FingerTree a##xo (Main.Node a##xo b##xo))\n-> (Main.Node a##xo b##xo)\n   -> (Main.Node a##xo b##xo)\n      -> (Main.FingerTree a##xo (Main.Node a##xo b##xo))\n         -> (Main.FingerTree a##xo (Main.Node a##xo b##xo))"
688:21-688:26::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
688:35-688:40::_ :: "a##xo\n-> a##xo\n   -> (Main.Node b##xo a##xo)"
690:5-690:16::_ :: "(Main.FingerTree a##xo (Main.Node a##xo b##xo))\n-> (Main.Node a##xo b##xo)\n   -> (Main.Node a##xo b##xo)\n      -> (Main.FingerTree a##xo (Main.Node a##xo b##xo))\n         -> (Main.FingerTree a##xo (Main.Node a##xo b##xo))"
690:21-690:26::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
690:35-690:40::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
692:5-692:16::_ :: "(Main.FingerTree a##xo (Main.Node a##xo b##xo))\n-> (Main.Node a##xo b##xo)\n   -> (Main.Node a##xo b##xo)\n      -> (Main.Node a##xo b##xo)\n         -> (Main.FingerTree a##xo (Main.Node a##xo b##xo))\n            -> (Main.FingerTree a##xo (Main.Node a##xo b##xo))"
692:21-692:26::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
692:35-692:40::_ :: "a##xo\n-> a##xo\n   -> (Main.Node b##xo a##xo)"
692:47-692:52::_ :: "a##xo\n-> a##xo\n   -> (Main.Node b##xo a##xo)"
694:5-694:16::_ :: "(Main.FingerTree a##xo (Main.Node a##xo b##xo))\n-> (Main.Node a##xo b##xo)\n   -> (Main.Node a##xo b##xo)\n      -> (Main.FingerTree a##xo (Main.Node a##xo b##xo))\n         -> (Main.FingerTree a##xo (Main.Node a##xo b##xo))"
694:21-694:26::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
694:35-694:40::_ :: "a##xo\n-> a##xo\n   -> (Main.Node b##xo a##xo)"
696:5-696:16::_ :: "(Main.FingerTree a##xo (Main.Node a##xo b##xo))\n-> (Main.Node a##xo b##xo)\n   -> (Main.Node a##xo b##xo)\n      -> (Main.FingerTree a##xo (Main.Node a##xo b##xo))\n         -> (Main.FingerTree a##xo (Main.Node a##xo b##xo))"
696:21-696:26::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
696:35-696:40::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
698:5-698:16::_ :: "(Main.FingerTree a##xo (Main.Node a##xo b##xo))\n-> (Main.Node a##xo b##xo)\n   -> (Main.Node a##xo b##xo)\n      -> (Main.Node a##xo b##xo)\n         -> (Main.FingerTree a##xo (Main.Node a##xo b##xo))\n            -> (Main.FingerTree a##xo (Main.Node a##xo b##xo))"
698:21-698:26::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
698:35-698:40::_ :: "a##xo\n-> a##xo\n   -> (Main.Node b##xo a##xo)"
698:47-698:52::_ :: "a##xo\n-> a##xo\n   -> (Main.Node b##xo a##xo)"
700:5-700:16::_ :: "(Main.FingerTree a##xo (Main.Node a##xo b##xo))\n-> (Main.Node a##xo b##xo)\n   -> (Main.Node a##xo b##xo)\n      -> (Main.Node a##xo b##xo)\n         -> (Main.FingerTree a##xo (Main.Node a##xo b##xo))\n            -> (Main.FingerTree a##xo (Main.Node a##xo b##xo))"
700:21-700:26::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
700:35-700:40::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
700:49-700:54::_ :: "a##xo\n-> a##xo\n   -> (Main.Node b##xo a##xo)"
702:5-702:16::_ :: "(Main.FingerTree a##xo (Main.Node a##xo b##xo))\n-> (Main.Node a##xo b##xo)\n   -> (Main.Node a##xo b##xo)\n      -> (Main.FingerTree a##xo (Main.Node a##xo b##xo))\n         -> (Main.FingerTree a##xo (Main.Node a##xo b##xo))"
702:21-702:26::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
702:35-702:40::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
704:5-704:16::_ :: "(Main.FingerTree a##xo (Main.Node a##xo b##xo))\n-> (Main.Node a##xo b##xo)\n   -> (Main.Node a##xo b##xo)\n      -> (Main.Node a##xo b##xo)\n         -> (Main.FingerTree a##xo (Main.Node a##xo b##xo))\n            -> (Main.FingerTree a##xo (Main.Node a##xo b##xo))"
704:21-704:26::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
704:35-704:40::_ :: "a##xo\n-> a##xo\n   -> (Main.Node b##xo a##xo)"
704:47-704:52::_ :: "a##xo\n-> a##xo\n   -> (Main.Node b##xo a##xo)"
706:5-706:16::_ :: "(Main.FingerTree a##xo (Main.Node a##xo b##xo))\n-> (Main.Node a##xo b##xo)\n   -> (Main.Node a##xo b##xo)\n      -> (Main.Node a##xo b##xo)\n         -> (Main.FingerTree a##xo (Main.Node a##xo b##xo))\n            -> (Main.FingerTree a##xo (Main.Node a##xo b##xo))"
706:21-706:26::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
706:35-706:40::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
706:49-706:54::_ :: "a##xo\n-> a##xo\n   -> (Main.Node b##xo a##xo)"
708:5-708:16::_ :: "(Main.FingerTree a##xo (Main.Node a##xo b##xo))\n-> (Main.Node a##xo b##xo)\n   -> (Main.Node a##xo b##xo)\n      -> (Main.Node a##xo b##xo)\n         -> (Main.FingerTree a##xo (Main.Node a##xo b##xo))\n            -> (Main.FingerTree a##xo (Main.Node a##xo b##xo))"
708:21-708:26::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
708:35-708:40::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
708:49-708:54::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
711:1-711:12::Main.appendTree2 :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(Main.FingerTree a##xo b##xo)\n-> b##xo\n   -> b##xo\n      -> (Main.FingerTree a##xo b##xo)\n         -> (Main.FingerTree a##xo b##xo)"
711:19-711:20::a :: "a##xo"
711:21-711:22::b :: "a##xo"
711:23-711:25::xs :: "(Main.FingerTree a##xo b##xo)"
712:5-712:17::a :: "{VV : a##xo | VV == a}"
712:7-712:9::_ :: "a##xo\n-> (Main.FingerTree b##xo a##xo)\n   -> (Main.FingerTree b##xo a##xo)"
712:10-712:17::lq_anf$##7205759403792837831 :: "(Main.FingerTree a##xo b##xo)"
712:12-712:14::_ :: "a##xo\n-> (Main.FingerTree b##xo a##xo)\n   -> (Main.FingerTree b##xo a##xo)"
714:5-714:12::lq_anf$##7205759403792837825 :: "(Main.FingerTree a##xo b##xo)"
714:8-714:10::_ :: "(Main.FingerTree a##xo b##xo)\n-> b##xo\n   -> (Main.FingerTree a##xo b##xo)"
714:13-714:15::_ :: "(Main.FingerTree a##xo b##xo)\n-> b##xo\n   -> (Main.FingerTree a##xo b##xo)"
716:5-716:22::x :: "{VV : a##xo | VV == x}"
716:7-716:9::_ :: "a##xo\n-> (Main.FingerTree b##xo a##xo)\n   -> (Main.FingerTree b##xo a##xo)"
716:10-716:22::lq_anf$##7205759403792837824 :: "(Main.FingerTree a##xo b##xo)"
716:12-716:14::_ :: "a##xo\n-> (Main.FingerTree b##xo a##xo)\n   -> (Main.FingerTree b##xo a##xo)"
716:15-716:22::lq_anf$##7205759403792837823 :: "(Main.FingerTree a##xo b##xo)"
716:17-716:19::_ :: "a##xo\n-> (Main.FingerTree b##xo a##xo)\n   -> (Main.FingerTree b##xo a##xo)"
718:5-718:12::lq_anf$##7205759403792837821 :: "(Main.FingerTree a##xo b##xo)"
718:8-718:10::_ :: "(Main.FingerTree a##xo b##xo)\n-> b##xo\n   -> (Main.FingerTree a##xo b##xo)"
718:13-718:15::_ :: "(Main.FingerTree a##xo b##xo)\n-> b##xo\n   -> (Main.FingerTree a##xo b##xo)"
718:18-718:20::_ :: "(Main.FingerTree a##xo b##xo)\n-> b##xo\n   -> (Main.FingerTree a##xo b##xo)"
720:5-720:9::_ :: "(Main.Digit a##xo)\n-> (Main.FingerTree b##xo (Main.Node b##xo a##xo))\n   -> (Main.Digit a##xo)\n      -> (Main.FingerTree b##xo a##xo)"
720:15-720:25::Main.addDigits2 :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(Main.FingerTree a##xo (Main.Node a##xo b##xo))\n-> (Main.Digit b##xo)\n   -> b##xo\n      -> b##xo\n         -> (Main.Digit b##xo)\n            -> (Main.FingerTree a##xo (Main.Node a##xo b##xo))\n               -> (Main.FingerTree a##xo (Main.Node a##xo b##xo))"
723:1-723:11::Main.addDigits2 :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(Main.FingerTree a##xo (Main.Node a##xo b##xo))\n-> (Main.Digit b##xo)\n   -> b##xo\n      -> b##xo\n         -> (Main.Digit b##xo)\n            -> (Main.FingerTree a##xo (Main.Node a##xo b##xo))\n               -> (Main.FingerTree a##xo (Main.Node a##xo b##xo))"
723:12-723:14::m1 :: "(Main.FingerTree a##xo (Main.Node a##xo b##xo))"
723:23-723:24::b :: "a##xo"
723:25-723:26::c :: "a##xo"
723:35-723:37::m2 :: "(Main.FingerTree a##xo (Main.Node a##xo b##xo))"
724:5-724:16::Main.appendTree2 :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(Main.FingerTree a##xo b##xo)\n-> b##xo\n   -> b##xo\n      -> (Main.FingerTree a##xo b##xo)\n         -> (Main.FingerTree a##xo b##xo)"
724:21-724:26::_ :: "a##xo\n-> a##xo\n   -> (Main.Node b##xo a##xo)"
724:33-724:38::_ :: "a##xo\n-> a##xo\n   -> (Main.Node b##xo a##xo)"
726:5-726:16::Main.appendTree2 :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(Main.FingerTree a##xo b##xo)\n-> b##xo\n   -> b##xo\n      -> (Main.FingerTree a##xo b##xo)\n         -> (Main.FingerTree a##xo b##xo)"
726:21-726:26::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
726:35-726:40::_ :: "a##xo\n-> a##xo\n   -> (Main.Node b##xo a##xo)"
728:5-728:16::Main.appendTree2 :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(Main.FingerTree a##xo b##xo)\n-> b##xo\n   -> b##xo\n      -> (Main.FingerTree a##xo b##xo)\n         -> (Main.FingerTree a##xo b##xo)"
728:21-728:26::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
728:35-728:40::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
730:5-730:16::Main.appendTree3 :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(Main.FingerTree a##xo b##xo)\n-> b##xo\n   -> b##xo\n      -> b##xo\n         -> (Main.FingerTree a##xo b##xo)\n            -> (Main.FingerTree a##xo b##xo)"
730:21-730:26::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
730:35-730:40::_ :: "a##xo\n-> a##xo\n   -> (Main.Node b##xo a##xo)"
730:47-730:52::_ :: "a##xo\n-> a##xo\n   -> (Main.Node b##xo a##xo)"
732:5-732:16::Main.appendTree2 :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(Main.FingerTree a##xo b##xo)\n-> b##xo\n   -> b##xo\n      -> (Main.FingerTree a##xo b##xo)\n         -> (Main.FingerTree a##xo b##xo)"
732:21-732:26::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
732:35-732:40::_ :: "a##xo\n-> a##xo\n   -> (Main.Node b##xo a##xo)"
734:5-734:16::Main.appendTree2 :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(Main.FingerTree a##xo b##xo)\n-> b##xo\n   -> b##xo\n      -> (Main.FingerTree a##xo b##xo)\n         -> (Main.FingerTree a##xo b##xo)"
734:21-734:26::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
734:35-734:40::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
736:5-736:16::Main.appendTree3 :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(Main.FingerTree a##xo b##xo)\n-> b##xo\n   -> b##xo\n      -> b##xo\n         -> (Main.FingerTree a##xo b##xo)\n            -> (Main.FingerTree a##xo b##xo)"
736:21-736:26::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
736:35-736:40::_ :: "a##xo\n-> a##xo\n   -> (Main.Node b##xo a##xo)"
736:47-736:52::_ :: "a##xo\n-> a##xo\n   -> (Main.Node b##xo a##xo)"
738:5-738:16::Main.appendTree3 :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(Main.FingerTree a##xo b##xo)\n-> b##xo\n   -> b##xo\n      -> b##xo\n         -> (Main.FingerTree a##xo b##xo)\n            -> (Main.FingerTree a##xo b##xo)"
738:21-738:26::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
738:35-738:40::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
738:49-738:54::_ :: "a##xo\n-> a##xo\n   -> (Main.Node b##xo a##xo)"
740:5-740:16::Main.appendTree2 :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(Main.FingerTree a##xo b##xo)\n-> b##xo\n   -> b##xo\n      -> (Main.FingerTree a##xo b##xo)\n         -> (Main.FingerTree a##xo b##xo)"
740:21-740:26::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
740:35-740:40::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
742:5-742:16::Main.appendTree3 :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(Main.FingerTree a##xo b##xo)\n-> b##xo\n   -> b##xo\n      -> b##xo\n         -> (Main.FingerTree a##xo b##xo)\n            -> (Main.FingerTree a##xo b##xo)"
742:21-742:26::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
742:35-742:40::_ :: "a##xo\n-> a##xo\n   -> (Main.Node b##xo a##xo)"
742:47-742:52::_ :: "a##xo\n-> a##xo\n   -> (Main.Node b##xo a##xo)"
744:5-744:16::Main.appendTree3 :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(Main.FingerTree a##xo b##xo)\n-> b##xo\n   -> b##xo\n      -> b##xo\n         -> (Main.FingerTree a##xo b##xo)\n            -> (Main.FingerTree a##xo b##xo)"
744:21-744:26::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
744:35-744:40::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
744:49-744:54::_ :: "a##xo\n-> a##xo\n   -> (Main.Node b##xo a##xo)"
746:5-746:16::Main.appendTree3 :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(Main.FingerTree a##xo b##xo)\n-> b##xo\n   -> b##xo\n      -> b##xo\n         -> (Main.FingerTree a##xo b##xo)\n            -> (Main.FingerTree a##xo b##xo)"
746:21-746:26::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
746:35-746:40::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
746:49-746:54::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
748:5-748:16::Main.appendTree3 :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(Main.FingerTree a##xo b##xo)\n-> b##xo\n   -> b##xo\n      -> b##xo\n         -> (Main.FingerTree a##xo b##xo)\n            -> (Main.FingerTree a##xo b##xo)"
748:21-748:26::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
748:35-748:40::_ :: "a##xo\n-> a##xo\n   -> (Main.Node b##xo a##xo)"
748:47-748:52::_ :: "a##xo\n-> a##xo\n   -> (Main.Node b##xo a##xo)"
750:5-750:16::Main.appendTree3 :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(Main.FingerTree a##xo b##xo)\n-> b##xo\n   -> b##xo\n      -> b##xo\n         -> (Main.FingerTree a##xo b##xo)\n            -> (Main.FingerTree a##xo b##xo)"
750:21-750:26::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
750:35-750:40::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
750:49-750:54::_ :: "a##xo\n-> a##xo\n   -> (Main.Node b##xo a##xo)"
752:5-752:16::Main.appendTree3 :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(Main.FingerTree a##xo b##xo)\n-> b##xo\n   -> b##xo\n      -> b##xo\n         -> (Main.FingerTree a##xo b##xo)\n            -> (Main.FingerTree a##xo b##xo)"
752:21-752:26::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
752:35-752:40::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
752:49-752:54::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
754:5-754:16::Main.appendTree4 :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(Main.FingerTree a##xo b##xo)\n-> b##xo\n   -> b##xo\n      -> b##xo\n         -> b##xo\n            -> (Main.FingerTree a##xo b##xo)\n               -> (Main.FingerTree a##xo b##xo)"
754:21-754:26::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
754:35-754:40::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
754:49-754:54::_ :: "a##xo\n-> a##xo\n   -> (Main.Node b##xo a##xo)"
754:61-754:66::_ :: "a##xo\n-> a##xo\n   -> (Main.Node b##xo a##xo)"
757:1-757:12::Main.appendTree3 :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(Main.FingerTree a##xo b##xo)\n-> b##xo\n   -> b##xo\n      -> b##xo\n         -> (Main.FingerTree a##xo b##xo)\n            -> (Main.FingerTree a##xo b##xo)"
757:19-757:20::a :: "a##xo"
757:21-757:22::b :: "a##xo"
757:23-757:24::c :: "a##xo"
757:25-757:27::xs :: "(Main.FingerTree a##xo b##xo)"
758:5-758:22::a :: "{VV : a##xo | VV == a}"
758:7-758:9::_ :: "a##xo\n-> (Main.FingerTree b##xo a##xo)\n   -> (Main.FingerTree b##xo a##xo)"
758:10-758:22::lq_anf$##7205759403792837614 :: "(Main.FingerTree a##xo b##xo)"
758:12-758:14::_ :: "a##xo\n-> (Main.FingerTree b##xo a##xo)\n   -> (Main.FingerTree b##xo a##xo)"
758:15-758:22::lq_anf$##7205759403792837613 :: "(Main.FingerTree a##xo b##xo)"
758:17-758:19::_ :: "a##xo\n-> (Main.FingerTree b##xo a##xo)\n   -> (Main.FingerTree b##xo a##xo)"
760:5-760:12::lq_anf$##7205759403792837606 :: "(Main.FingerTree a##xo b##xo)"
760:8-760:10::_ :: "(Main.FingerTree a##xo b##xo)\n-> b##xo\n   -> (Main.FingerTree a##xo b##xo)"
760:13-760:15::_ :: "(Main.FingerTree a##xo b##xo)\n-> b##xo\n   -> (Main.FingerTree a##xo b##xo)"
760:18-760:20::_ :: "(Main.FingerTree a##xo b##xo)\n-> b##xo\n   -> (Main.FingerTree a##xo b##xo)"
762:5-762:27::x :: "{VV : a##xo | VV == x}"
762:7-762:9::_ :: "a##xo\n-> (Main.FingerTree b##xo a##xo)\n   -> (Main.FingerTree b##xo a##xo)"
762:10-762:27::lq_anf$##7205759403792837605 :: "(Main.FingerTree a##xo b##xo)"
762:12-762:14::_ :: "a##xo\n-> (Main.FingerTree b##xo a##xo)\n   -> (Main.FingerTree b##xo a##xo)"
762:15-762:27::lq_anf$##7205759403792837604 :: "(Main.FingerTree a##xo b##xo)"
762:17-762:19::_ :: "a##xo\n-> (Main.FingerTree b##xo a##xo)\n   -> (Main.FingerTree b##xo a##xo)"
762:20-762:27::lq_anf$##7205759403792837603 :: "(Main.FingerTree a##xo b##xo)"
762:22-762:24::_ :: "a##xo\n-> (Main.FingerTree b##xo a##xo)\n   -> (Main.FingerTree b##xo a##xo)"
764:5-764:12::lq_anf$##7205759403792837600 :: "(Main.FingerTree a##xo b##xo)"
764:8-764:10::_ :: "(Main.FingerTree a##xo b##xo)\n-> b##xo\n   -> (Main.FingerTree a##xo b##xo)"
764:13-764:15::_ :: "(Main.FingerTree a##xo b##xo)\n-> b##xo\n   -> (Main.FingerTree a##xo b##xo)"
764:18-764:20::_ :: "(Main.FingerTree a##xo b##xo)\n-> b##xo\n   -> (Main.FingerTree a##xo b##xo)"
764:23-764:25::_ :: "(Main.FingerTree a##xo b##xo)\n-> b##xo\n   -> (Main.FingerTree a##xo b##xo)"
766:5-766:9::_ :: "(Main.Digit a##xo)\n-> (Main.FingerTree b##xo (Main.Node b##xo a##xo))\n   -> (Main.Digit a##xo)\n      -> (Main.FingerTree b##xo a##xo)"
766:15-766:25::Main.addDigits3 :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(Main.FingerTree a##xo (Main.Node a##xo b##xo))\n-> (Main.Digit b##xo)\n   -> b##xo\n      -> b##xo\n         -> b##xo\n            -> (Main.Digit b##xo)\n               -> (Main.FingerTree a##xo (Main.Node a##xo b##xo))\n                  -> (Main.FingerTree a##xo (Main.Node a##xo b##xo))"
769:1-769:11::Main.addDigits3 :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(Main.FingerTree a##xo (Main.Node a##xo b##xo))\n-> (Main.Digit b##xo)\n   -> b##xo\n      -> b##xo\n         -> b##xo\n            -> (Main.Digit b##xo)\n               -> (Main.FingerTree a##xo (Main.Node a##xo b##xo))\n                  -> (Main.FingerTree a##xo (Main.Node a##xo b##xo))"
769:12-769:14::m1 :: "(Main.FingerTree a##xo (Main.Node a##xo b##xo))"
769:23-769:24::b :: "a##xo"
769:25-769:26::c :: "a##xo"
769:27-769:28::d :: "a##xo"
769:37-769:39::m2 :: "(Main.FingerTree a##xo (Main.Node a##xo b##xo))"
770:5-770:16::Main.appendTree2 :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(Main.FingerTree a##xo b##xo)\n-> b##xo\n   -> b##xo\n      -> (Main.FingerTree a##xo b##xo)\n         -> (Main.FingerTree a##xo b##xo)"
770:21-770:26::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
770:35-770:40::_ :: "a##xo\n-> a##xo\n   -> (Main.Node b##xo a##xo)"
772:5-772:16::Main.appendTree2 :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(Main.FingerTree a##xo b##xo)\n-> b##xo\n   -> b##xo\n      -> (Main.FingerTree a##xo b##xo)\n         -> (Main.FingerTree a##xo b##xo)"
772:21-772:26::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
772:35-772:40::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
774:5-774:16::Main.appendTree3 :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(Main.FingerTree a##xo b##xo)\n-> b##xo\n   -> b##xo\n      -> b##xo\n         -> (Main.FingerTree a##xo b##xo)\n            -> (Main.FingerTree a##xo b##xo)"
774:21-774:26::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
774:35-774:40::_ :: "a##xo\n-> a##xo\n   -> (Main.Node b##xo a##xo)"
774:47-774:52::_ :: "a##xo\n-> a##xo\n   -> (Main.Node b##xo a##xo)"
776:5-776:16::Main.appendTree3 :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(Main.FingerTree a##xo b##xo)\n-> b##xo\n   -> b##xo\n      -> b##xo\n         -> (Main.FingerTree a##xo b##xo)\n            -> (Main.FingerTree a##xo b##xo)"
776:21-776:26::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
776:35-776:40::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
776:49-776:54::_ :: "a##xo\n-> a##xo\n   -> (Main.Node b##xo a##xo)"
778:5-778:16::Main.appendTree2 :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(Main.FingerTree a##xo b##xo)\n-> b##xo\n   -> b##xo\n      -> (Main.FingerTree a##xo b##xo)\n         -> (Main.FingerTree a##xo b##xo)"
778:21-778:26::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
778:35-778:40::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
780:5-780:16::Main.appendTree3 :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(Main.FingerTree a##xo b##xo)\n-> b##xo\n   -> b##xo\n      -> b##xo\n         -> (Main.FingerTree a##xo b##xo)\n            -> (Main.FingerTree a##xo b##xo)"
780:21-780:26::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
780:35-780:40::_ :: "a##xo\n-> a##xo\n   -> (Main.Node b##xo a##xo)"
780:47-780:52::_ :: "a##xo\n-> a##xo\n   -> (Main.Node b##xo a##xo)"
782:5-782:16::Main.appendTree3 :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(Main.FingerTree a##xo b##xo)\n-> b##xo\n   -> b##xo\n      -> b##xo\n         -> (Main.FingerTree a##xo b##xo)\n            -> (Main.FingerTree a##xo b##xo)"
782:21-782:26::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
782:35-782:40::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
782:49-782:54::_ :: "a##xo\n-> a##xo\n   -> (Main.Node b##xo a##xo)"
784:5-784:16::Main.appendTree3 :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(Main.FingerTree a##xo b##xo)\n-> b##xo\n   -> b##xo\n      -> b##xo\n         -> (Main.FingerTree a##xo b##xo)\n            -> (Main.FingerTree a##xo b##xo)"
784:21-784:26::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
784:35-784:40::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
784:49-784:54::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
786:5-786:16::Main.appendTree3 :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(Main.FingerTree a##xo b##xo)\n-> b##xo\n   -> b##xo\n      -> b##xo\n         -> (Main.FingerTree a##xo b##xo)\n            -> (Main.FingerTree a##xo b##xo)"
786:21-786:26::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
786:35-786:40::_ :: "a##xo\n-> a##xo\n   -> (Main.Node b##xo a##xo)"
786:47-786:52::_ :: "a##xo\n-> a##xo\n   -> (Main.Node b##xo a##xo)"
788:5-788:16::Main.appendTree3 :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(Main.FingerTree a##xo b##xo)\n-> b##xo\n   -> b##xo\n      -> b##xo\n         -> (Main.FingerTree a##xo b##xo)\n            -> (Main.FingerTree a##xo b##xo)"
788:21-788:26::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
788:35-788:40::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
788:49-788:54::_ :: "a##xo\n-> a##xo\n   -> (Main.Node b##xo a##xo)"
790:5-790:16::Main.appendTree3 :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(Main.FingerTree a##xo b##xo)\n-> b##xo\n   -> b##xo\n      -> b##xo\n         -> (Main.FingerTree a##xo b##xo)\n            -> (Main.FingerTree a##xo b##xo)"
790:21-790:26::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
790:35-790:40::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
790:49-790:54::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
792:5-792:16::Main.appendTree4 :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(Main.FingerTree a##xo b##xo)\n-> b##xo\n   -> b##xo\n      -> b##xo\n         -> b##xo\n            -> (Main.FingerTree a##xo b##xo)\n               -> (Main.FingerTree a##xo b##xo)"
792:21-792:26::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
792:35-792:40::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
792:49-792:54::_ :: "a##xo\n-> a##xo\n   -> (Main.Node b##xo a##xo)"
792:61-792:66::_ :: "a##xo\n-> a##xo\n   -> (Main.Node b##xo a##xo)"
794:5-794:16::Main.appendTree3 :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(Main.FingerTree a##xo b##xo)\n-> b##xo\n   -> b##xo\n      -> b##xo\n         -> (Main.FingerTree a##xo b##xo)\n            -> (Main.FingerTree a##xo b##xo)"
794:21-794:26::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
794:35-794:40::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
794:49-794:54::_ :: "a##xo\n-> a##xo\n   -> (Main.Node b##xo a##xo)"
796:5-796:16::Main.appendTree3 :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(Main.FingerTree a##xo b##xo)\n-> b##xo\n   -> b##xo\n      -> b##xo\n         -> (Main.FingerTree a##xo b##xo)\n            -> (Main.FingerTree a##xo b##xo)"
796:21-796:26::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
796:35-796:40::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
796:49-796:54::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
798:5-798:16::Main.appendTree4 :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(Main.FingerTree a##xo b##xo)\n-> b##xo\n   -> b##xo\n      -> b##xo\n         -> b##xo\n            -> (Main.FingerTree a##xo b##xo)\n               -> (Main.FingerTree a##xo b##xo)"
798:21-798:26::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
798:35-798:40::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
798:49-798:54::_ :: "a##xo\n-> a##xo\n   -> (Main.Node b##xo a##xo)"
798:61-798:66::_ :: "a##xo\n-> a##xo\n   -> (Main.Node b##xo a##xo)"
800:5-800:16::Main.appendTree4 :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(Main.FingerTree a##xo b##xo)\n-> b##xo\n   -> b##xo\n      -> b##xo\n         -> b##xo\n            -> (Main.FingerTree a##xo b##xo)\n               -> (Main.FingerTree a##xo b##xo)"
800:21-800:26::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
800:35-800:40::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
800:49-800:54::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
800:63-800:68::_ :: "a##xo\n-> a##xo\n   -> (Main.Node b##xo a##xo)"
803:1-803:12::Main.appendTree4 :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(Main.FingerTree a##xo b##xo)\n-> b##xo\n   -> b##xo\n      -> b##xo\n         -> b##xo\n            -> (Main.FingerTree a##xo b##xo)\n               -> (Main.FingerTree a##xo b##xo)"
803:19-803:20::a :: "a##xo"
803:21-803:22::b :: "a##xo"
803:23-803:24::c :: "a##xo"
803:25-803:26::d :: "a##xo"
803:27-803:29::xs :: "(Main.FingerTree a##xo b##xo)"
804:5-804:27::a :: "{VV : a##xo | VV == a}"
804:7-804:9::_ :: "a##xo\n-> (Main.FingerTree b##xo a##xo)\n   -> (Main.FingerTree b##xo a##xo)"
804:10-804:27::lq_anf$##7205759403792837647 :: "(Main.FingerTree a##xo b##xo)"
804:12-804:14::_ :: "a##xo\n-> (Main.FingerTree b##xo a##xo)\n   -> (Main.FingerTree b##xo a##xo)"
804:15-804:27::lq_anf$##7205759403792837646 :: "(Main.FingerTree a##xo b##xo)"
804:17-804:19::_ :: "a##xo\n-> (Main.FingerTree b##xo a##xo)\n   -> (Main.FingerTree b##xo a##xo)"
804:20-804:27::lq_anf$##7205759403792837645 :: "(Main.FingerTree a##xo b##xo)"
804:22-804:24::_ :: "a##xo\n-> (Main.FingerTree b##xo a##xo)\n   -> (Main.FingerTree b##xo a##xo)"
806:5-806:12::lq_anf$##7205759403792837637 :: "(Main.FingerTree a##xo b##xo)"
806:8-806:10::_ :: "(Main.FingerTree a##xo b##xo)\n-> b##xo\n   -> (Main.FingerTree a##xo b##xo)"
806:13-806:15::_ :: "(Main.FingerTree a##xo b##xo)\n-> b##xo\n   -> (Main.FingerTree a##xo b##xo)"
806:18-806:20::_ :: "(Main.FingerTree a##xo b##xo)\n-> b##xo\n   -> (Main.FingerTree a##xo b##xo)"
806:23-806:25::_ :: "(Main.FingerTree a##xo b##xo)\n-> b##xo\n   -> (Main.FingerTree a##xo b##xo)"
808:5-808:32::x :: "{VV : a##xo | VV == x}"
808:7-808:9::_ :: "a##xo\n-> (Main.FingerTree b##xo a##xo)\n   -> (Main.FingerTree b##xo a##xo)"
808:10-808:32::lq_anf$##7205759403792837636 :: "(Main.FingerTree a##xo b##xo)"
808:12-808:14::_ :: "a##xo\n-> (Main.FingerTree b##xo a##xo)\n   -> (Main.FingerTree b##xo a##xo)"
808:15-808:32::lq_anf$##7205759403792837635 :: "(Main.FingerTree a##xo b##xo)"
808:17-808:19::_ :: "a##xo\n-> (Main.FingerTree b##xo a##xo)\n   -> (Main.FingerTree b##xo a##xo)"
808:20-808:32::lq_anf$##7205759403792837634 :: "(Main.FingerTree a##xo b##xo)"
808:22-808:24::_ :: "a##xo\n-> (Main.FingerTree b##xo a##xo)\n   -> (Main.FingerTree b##xo a##xo)"
808:25-808:32::lq_anf$##7205759403792837633 :: "(Main.FingerTree a##xo b##xo)"
808:27-808:29::_ :: "a##xo\n-> (Main.FingerTree b##xo a##xo)\n   -> (Main.FingerTree b##xo a##xo)"
810:5-810:12::lq_anf$##7205759403792837629 :: "(Main.FingerTree a##xo b##xo)"
810:8-810:10::_ :: "(Main.FingerTree a##xo b##xo)\n-> b##xo\n   -> (Main.FingerTree a##xo b##xo)"
810:13-810:15::_ :: "(Main.FingerTree a##xo b##xo)\n-> b##xo\n   -> (Main.FingerTree a##xo b##xo)"
810:18-810:20::_ :: "(Main.FingerTree a##xo b##xo)\n-> b##xo\n   -> (Main.FingerTree a##xo b##xo)"
810:23-810:25::_ :: "(Main.FingerTree a##xo b##xo)\n-> b##xo\n   -> (Main.FingerTree a##xo b##xo)"
810:28-810:30::_ :: "(Main.FingerTree a##xo b##xo)\n-> b##xo\n   -> (Main.FingerTree a##xo b##xo)"
812:5-812:9::_ :: "(Main.Digit a##xo)\n-> (Main.FingerTree b##xo (Main.Node b##xo a##xo))\n   -> (Main.Digit a##xo)\n      -> (Main.FingerTree b##xo a##xo)"
812:15-812:25::Main.addDigits4 :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(Main.FingerTree a##xo (Main.Node a##xo b##xo))\n-> (Main.Digit b##xo)\n   -> b##xo\n      -> b##xo\n         -> b##xo\n            -> b##xo\n               -> (Main.Digit b##xo)\n                  -> (Main.FingerTree a##xo (Main.Node a##xo b##xo))\n                     -> (Main.FingerTree a##xo (Main.Node a##xo b##xo))"
815:1-815:11::Main.addDigits4 :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(Main.FingerTree a##xo (Main.Node a##xo b##xo))\n-> (Main.Digit b##xo)\n   -> b##xo\n      -> b##xo\n         -> b##xo\n            -> b##xo\n               -> (Main.Digit b##xo)\n                  -> (Main.FingerTree a##xo (Main.Node a##xo b##xo))\n                     -> (Main.FingerTree a##xo (Main.Node a##xo b##xo))"
815:12-815:14::m1 :: "(Main.FingerTree a##xo (Main.Node a##xo b##xo))"
815:23-815:24::b :: "a##xo"
815:25-815:26::c :: "a##xo"
815:27-815:28::d :: "a##xo"
815:29-815:30::e :: "a##xo"
815:39-815:41::m2 :: "(Main.FingerTree a##xo (Main.Node a##xo b##xo))"
816:5-816:16::Main.appendTree2 :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(Main.FingerTree a##xo b##xo)\n-> b##xo\n   -> b##xo\n      -> (Main.FingerTree a##xo b##xo)\n         -> (Main.FingerTree a##xo b##xo)"
816:21-816:26::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
816:35-816:40::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
818:5-818:16::Main.appendTree3 :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(Main.FingerTree a##xo b##xo)\n-> b##xo\n   -> b##xo\n      -> b##xo\n         -> (Main.FingerTree a##xo b##xo)\n            -> (Main.FingerTree a##xo b##xo)"
818:21-818:26::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
818:35-818:40::_ :: "a##xo\n-> a##xo\n   -> (Main.Node b##xo a##xo)"
818:47-818:52::_ :: "a##xo\n-> a##xo\n   -> (Main.Node b##xo a##xo)"
820:5-820:16::Main.appendTree3 :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(Main.FingerTree a##xo b##xo)\n-> b##xo\n   -> b##xo\n      -> b##xo\n         -> (Main.FingerTree a##xo b##xo)\n            -> (Main.FingerTree a##xo b##xo)"
820:21-820:26::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
820:35-820:40::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
820:49-820:54::_ :: "a##xo\n-> a##xo\n   -> (Main.Node b##xo a##xo)"
822:5-822:16::Main.appendTree3 :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(Main.FingerTree a##xo b##xo)\n-> b##xo\n   -> b##xo\n      -> b##xo\n         -> (Main.FingerTree a##xo b##xo)\n            -> (Main.FingerTree a##xo b##xo)"
822:21-822:26::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
822:35-822:40::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
822:49-822:54::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
824:5-824:16::Main.appendTree3 :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(Main.FingerTree a##xo b##xo)\n-> b##xo\n   -> b##xo\n      -> b##xo\n         -> (Main.FingerTree a##xo b##xo)\n            -> (Main.FingerTree a##xo b##xo)"
824:21-824:26::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
824:35-824:40::_ :: "a##xo\n-> a##xo\n   -> (Main.Node b##xo a##xo)"
824:47-824:52::_ :: "a##xo\n-> a##xo\n   -> (Main.Node b##xo a##xo)"
826:5-826:16::Main.appendTree3 :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(Main.FingerTree a##xo b##xo)\n-> b##xo\n   -> b##xo\n      -> b##xo\n         -> (Main.FingerTree a##xo b##xo)\n            -> (Main.FingerTree a##xo b##xo)"
826:21-826:26::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
826:35-826:40::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
826:49-826:54::_ :: "a##xo\n-> a##xo\n   -> (Main.Node b##xo a##xo)"
828:5-828:16::Main.appendTree3 :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(Main.FingerTree a##xo b##xo)\n-> b##xo\n   -> b##xo\n      -> b##xo\n         -> (Main.FingerTree a##xo b##xo)\n            -> (Main.FingerTree a##xo b##xo)"
828:21-828:26::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
828:35-828:40::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
828:49-828:54::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
830:5-830:16::Main.appendTree4 :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(Main.FingerTree a##xo b##xo)\n-> b##xo\n   -> b##xo\n      -> b##xo\n         -> b##xo\n            -> (Main.FingerTree a##xo b##xo)\n               -> (Main.FingerTree a##xo b##xo)"
830:21-830:26::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
830:35-830:40::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
830:49-830:54::_ :: "a##xo\n-> a##xo\n   -> (Main.Node b##xo a##xo)"
830:61-830:66::_ :: "a##xo\n-> a##xo\n   -> (Main.Node b##xo a##xo)"
832:5-832:16::Main.appendTree3 :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(Main.FingerTree a##xo b##xo)\n-> b##xo\n   -> b##xo\n      -> b##xo\n         -> (Main.FingerTree a##xo b##xo)\n            -> (Main.FingerTree a##xo b##xo)"
832:21-832:26::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
832:35-832:40::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
832:49-832:54::_ :: "a##xo\n-> a##xo\n   -> (Main.Node b##xo a##xo)"
834:5-834:16::Main.appendTree3 :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(Main.FingerTree a##xo b##xo)\n-> b##xo\n   -> b##xo\n      -> b##xo\n         -> (Main.FingerTree a##xo b##xo)\n            -> (Main.FingerTree a##xo b##xo)"
834:21-834:26::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
834:35-834:40::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
834:49-834:54::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
836:5-836:16::Main.appendTree4 :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(Main.FingerTree a##xo b##xo)\n-> b##xo\n   -> b##xo\n      -> b##xo\n         -> b##xo\n            -> (Main.FingerTree a##xo b##xo)\n               -> (Main.FingerTree a##xo b##xo)"
836:21-836:26::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
836:35-836:40::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
836:49-836:54::_ :: "a##xo\n-> a##xo\n   -> (Main.Node b##xo a##xo)"
836:61-836:66::_ :: "a##xo\n-> a##xo\n   -> (Main.Node b##xo a##xo)"
838:5-838:16::Main.appendTree4 :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(Main.FingerTree a##xo b##xo)\n-> b##xo\n   -> b##xo\n      -> b##xo\n         -> b##xo\n            -> (Main.FingerTree a##xo b##xo)\n               -> (Main.FingerTree a##xo b##xo)"
838:21-838:26::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
838:35-838:40::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
838:49-838:54::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
838:63-838:68::_ :: "a##xo\n-> a##xo\n   -> (Main.Node b##xo a##xo)"
840:5-840:16::Main.appendTree3 :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(Main.FingerTree a##xo b##xo)\n-> b##xo\n   -> b##xo\n      -> b##xo\n         -> (Main.FingerTree a##xo b##xo)\n            -> (Main.FingerTree a##xo b##xo)"
840:21-840:26::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
840:35-840:40::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
840:49-840:54::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
842:5-842:16::Main.appendTree4 :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(Main.FingerTree a##xo b##xo)\n-> b##xo\n   -> b##xo\n      -> b##xo\n         -> b##xo\n            -> (Main.FingerTree a##xo b##xo)\n               -> (Main.FingerTree a##xo b##xo)"
842:21-842:26::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
842:35-842:40::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
842:49-842:54::_ :: "a##xo\n-> a##xo\n   -> (Main.Node b##xo a##xo)"
842:61-842:66::_ :: "a##xo\n-> a##xo\n   -> (Main.Node b##xo a##xo)"
844:5-844:16::Main.appendTree4 :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(Main.FingerTree a##xo b##xo)\n-> b##xo\n   -> b##xo\n      -> b##xo\n         -> b##xo\n            -> (Main.FingerTree a##xo b##xo)\n               -> (Main.FingerTree a##xo b##xo)"
844:21-844:26::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
844:35-844:40::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
844:49-844:54::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
844:63-844:68::_ :: "a##xo\n-> a##xo\n   -> (Main.Node b##xo a##xo)"
846:5-846:16::Main.appendTree4 :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(Main.FingerTree a##xo b##xo)\n-> b##xo\n   -> b##xo\n      -> b##xo\n         -> b##xo\n            -> (Main.FingerTree a##xo b##xo)\n               -> (Main.FingerTree a##xo b##xo)"
846:21-846:26::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
846:35-846:40::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
846:49-846:54::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
846:63-846:68::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
856:1-856:1::$cfrom :: "forall a##xo b##xo c##xo .\n(Main.SearchResult a##xo b##xo)\n-> (GHC.Generics.Rep (Main.SearchResult a##xo b##xo) c##xo)"
872:11-872:18::Main.$fGenericSearchResult :: "forall a##xo b##xo .\n(GHC.Generics.Generic (Main.SearchResult a##xo b##xo))"
908:1-908:7::Main.search :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(a##xo\n -> a##xo\n    -> GHC.Types.Bool)\n-> (Main.FingerTree a##xo b##xo)\n   -> (Main.SearchResult a##xo b##xo)"
908:8-908:9::p :: "a##xo\n-> a##xo\n   -> GHC.Types.Bool"
908:10-908:11::t :: "(Main.FingerTree a##xo b##xo)"
909:5-909:22::lq_anf$##7205759403792837990 :: "{v : GHC.Types.Bool | v <=> p_left\n                            && p_right}"
909:12-909:14::_ :: "{v : x1:GHC.Types.Bool\n     -> x2:GHC.Types.Bool\n        -> {v : GHC.Types.Bool | v <=> x1\n                                       && x2} | v == &&}"
910:5-910:8::_ :: "{v : x1:GHC.Types.Bool\n     -> {v : GHC.Types.Bool | v <=> not x1} | v == not}"
910:16-910:18::_ :: "{v : x1:GHC.Types.Bool\n     -> x2:GHC.Types.Bool\n        -> {v : GHC.Types.Bool | v <=> x1\n                                       && x2} | v == &&}"
910:34-910:44::_ :: "(a##xo\n -> a##xo\n    -> GHC.Types.Bool)\n-> a##xo\n   -> (Main.FingerTree a##xo b##xo)\n      -> a##xo\n         -> (Main.Split (Main.FingerTree a##xo b##xo) b##xo)"
911:24-911:34::_ :: "a##xo\n-> (Main.FingerTree b##xo a##xo)\n   -> (Main.SearchResult b##xo a##xo)"
912:5-912:8::_ :: "{v : x1:GHC.Types.Bool\n     -> {v : GHC.Types.Bool | v <=> not x1} | v == not}"
912:16-912:18::_ :: "{v : x1:GHC.Types.Bool\n     -> x2:GHC.Types.Bool\n        -> {v : GHC.Types.Bool | v <=> x1\n                                       && x2} | v == &&}"
912:19-912:22::_ :: "{v : x1:GHC.Types.Bool\n     -> {v : GHC.Types.Bool | v <=> not x1} | v == not}"
915:5-915:11::p_left :: "GHC.Types.Bool"
915:14-915:15::_ :: "{v : a##xo\n     -> a##xo\n        -> GHC.Types.Bool | v == p}"
916:5-916:12::p_right :: "GHC.Types.Bool"
916:15-916:16::_ :: "{v : a##xo\n     -> a##xo\n        -> GHC.Types.Bool | v == p}"
917:5-917:7::vt :: "a##xo"
917:10-917:17::_ :: "(Main.FingerTree a##xo b##xo)\n-> a##xo"
930:1-930:11::Main.searchTree :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(a##xo\n -> a##xo\n    -> GHC.Types.Bool)\n-> a##xo\n   -> (Main.FingerTree a##xo b##xo)\n      -> a##xo\n         -> (Main.Split (Main.FingerTree a##xo b##xo) b##xo)"
930:26-930:55::lq_anf$##7205759403792837965 :: "[GHC.Types.Char]"
931:31-931:42::lq_anf$##7205759403792837966 :: "(Main.FingerTree a##xo b##xo)"
933:5-933:6::_ :: "a##xo\n-> a##xo\n   -> GHC.Types.Bool"
933:31-933:32::l :: "(GHC.Base.Maybe (Main.Digit a##xo))"
933:33-933:34::x :: "a##xo"
933:35-933:36::r :: "(GHC.Base.Maybe (Main.Digit a##xo))"
933:44-933:55::_ :: "(a##xo\n -> a##xo\n    -> GHC.Types.Bool)\n-> a##xo\n   -> (Main.Digit b##xo)\n      -> a##xo\n         -> (Main.Split (GHC.Base.Maybe (Main.Digit b##xo)) b##xo)"
934:25-934:58::_ :: "a##xo\n-> (Main.FingerTree b##xo a##xo)\n   -> (Main.Split (Main.FingerTree b##xo a##xo) a##xo)"
934:32-934:43::lq_anf$##7205759403792837984 :: "(Main.FingerTree a##xo b##xo)"
934:62-934:67::_ :: "(GHC.Base.Maybe (Main.Digit a##xo))\n-> (Main.FingerTree b##xo (Main.Node b##xo a##xo))\n   -> (Main.Digit a##xo)\n      -> (Main.FingerTree b##xo a##xo)"
935:5-935:6::_ :: "a##xo\n-> a##xo\n   -> GHC.Types.Bool"
935:31-935:33::ml :: "(Main.FingerTree a##xo (Main.Node a##xo b##xo))"
935:34-935:36::xs :: "(Main.Node a##xo b##xo)"
935:37-935:39::mr :: "(Main.FingerTree a##xo (Main.Node a##xo b##xo))"
935:44-935:54::Main.searchTree :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(a##xo\n -> a##xo\n    -> GHC.Types.Bool)\n-> a##xo\n   -> (Main.FingerTree a##xo b##xo)\n      -> a##xo\n         -> (Main.Split (Main.FingerTree a##xo b##xo) b##xo)"
936:31-936:32::l :: "(GHC.Base.Maybe (Main.Digit a##xo))"
936:33-936:34::x :: "a##xo"
936:35-936:36::r :: "(GHC.Base.Maybe (Main.Digit a##xo))"
936:44-936:54::_ :: "(a##xo\n -> a##xo\n    -> GHC.Types.Bool)\n-> a##xo\n   -> (Main.Node a##xo b##xo)\n      -> a##xo\n         -> (Main.Split (GHC.Base.Maybe (Main.Digit b##xo)) b##xo)"
936:58-936:82::lq_anf$##7205759403792837979 :: "a##xo"
936:62-936:71::_ :: "a##xo\n-> a##xo\n   -> a##xo"
936:72-936:79::_ :: "(Main.FingerTree a##xo (Main.Node a##xo b##xo))\n-> a##xo"
936:88-936:95::_ :: "(Main.FingerTree a##xo (Main.Node a##xo b##xo))\n-> a##xo"
936:99-936:108::_ :: "a##xo\n-> a##xo\n   -> a##xo"
937:25-937:47::_ :: "a##xo\n-> (Main.FingerTree b##xo a##xo)\n   -> (Main.Split (Main.FingerTree b##xo a##xo) a##xo)"
937:32-937:37::_ :: "(Main.Digit a##xo)\n-> (Main.FingerTree b##xo (Main.Node b##xo a##xo))\n   -> (GHC.Base.Maybe (Main.Digit a##xo))\n      -> (Main.FingerTree b##xo a##xo)"
937:51-937:56::_ :: "(GHC.Base.Maybe (Main.Digit a##xo))\n-> (Main.FingerTree b##xo (Main.Node b##xo a##xo))\n   -> (Main.Digit a##xo)\n      -> (Main.FingerTree b##xo a##xo)"
938:31-938:32::l :: "(GHC.Base.Maybe (Main.Digit a##xo))"
938:33-938:34::x :: "a##xo"
938:35-938:36::r :: "(GHC.Base.Maybe (Main.Digit a##xo))"
938:44-938:55::_ :: "(a##xo\n -> a##xo\n    -> GHC.Types.Bool)\n-> a##xo\n   -> (Main.Digit b##xo)\n      -> a##xo\n         -> (Main.Split (GHC.Base.Maybe (Main.Digit b##xo)) b##xo)"
939:25-939:47::_ :: "a##xo\n-> (Main.FingerTree b##xo a##xo)\n   -> (Main.Split (Main.FingerTree b##xo a##xo) a##xo)"
939:32-939:37::_ :: "(Main.Digit a##xo)\n-> (Main.FingerTree b##xo (Main.Node b##xo a##xo))\n   -> (GHC.Base.Maybe (Main.Digit a##xo))\n      -> (Main.FingerTree b##xo a##xo)"
939:51-939:62::lq_anf$##7205759403792837975 :: "(Main.FingerTree a##xo b##xo)"
941:5-941:8::vlp :: "a##xo"
941:16-941:39::_ :: "a##xo"
941:19-941:28::_ :: "a##xo\n-> a##xo\n   -> a##xo"
941:29-941:36::_ :: "(Main.Digit a##xo)\n-> b##xo"
942:5-942:9::vlpm :: "a##xo"
942:16-942:32::_ :: "a##xo"
942:20-942:29::_ :: "a##xo\n-> a##xo\n   -> a##xo"
943:5-943:9::vmsr :: "a##xo"
943:16-943:32::_ :: "a##xo"
943:19-943:28::_ :: "a##xo\n-> a##xo\n   -> a##xo"
944:5-944:8::vsr :: "a##xo"
944:16-944:23::_ :: "(Main.Digit a##xo)\n-> b##xo"
944:27-944:36::_ :: "a##xo\n-> a##xo\n   -> a##xo"
945:5-945:7::vm :: "a##xo"
945:16-945:23::_ :: "(Main.FingerTree a##xo (Main.Node a##xo b##xo))\n-> a##xo"
949:1-949:11::Main.searchNode :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(a##xo\n -> a##xo\n    -> GHC.Types.Bool)\n-> a##xo\n   -> (Main.Node a##xo b##xo)\n      -> a##xo\n         -> (Main.Split (GHC.Base.Maybe (Main.Digit b##xo)) b##xo)"
949:12-949:13::p :: "a##xo\n-> a##xo\n   -> GHC.Types.Bool"
949:14-949:16::vl :: "a##xo"
949:31-949:33::vr :: "a##xo"
950:5-950:6::_ :: "{v : a##xo\n     -> a##xo\n        -> GHC.Types.Bool | v == p}"
950:19-950:32::lq_anf$##7205759403792837291 :: "{v : (GHC.Base.Maybe (Main.Digit a##xo)) | isJust v <=> false}"
951:19-951:39::lq_anf$##7205759403792837289 :: "{v : (GHC.Base.Maybe (Main.Digit a##xo)) | isJust v <=> true}"
953:5-953:7::va :: "a##xo"
953:15-953:37::_ :: "a##xo"
953:18-953:27::_ :: "a##xo\n-> a##xo\n   -> a##xo"
953:28-953:35::_ :: "a##xo\n-> b##xo"
954:5-954:7::vb :: "a##xo"
954:15-954:22::_ :: "a##xo\n-> b##xo"
954:25-954:34::_ :: "a##xo\n-> a##xo\n   -> a##xo"
956:5-956:6::_ :: "{v : a##xo\n     -> a##xo\n        -> GHC.Types.Bool | v == p}"
956:19-956:32::lq_anf$##7205759403792837309 :: "{v : (GHC.Base.Maybe (Main.Digit a##xo)) | isJust v <=> false}"
956:42-956:47::_ :: "a##xo\n-> (Main.Digit a##xo)"
957:5-957:6::_ :: "{v : a##xo\n     -> a##xo\n        -> GHC.Types.Bool | v == p}"
957:19-957:39::lq_anf$##7205759403792837306 :: "{v : (GHC.Base.Maybe (Main.Digit a##xo)) | isJust v <=> true}"
958:19-958:41::lq_anf$##7205759403792837303 :: "{v : (GHC.Base.Maybe (Main.Digit a##xo)) | isJust v <=> true}"
958:32-958:37::_ :: "a##xo\n-> (Main.Digit a##xo)"
960:5-960:7::va :: "a##xo"
960:15-960:37::_ :: "a##xo"
960:18-960:27::_ :: "a##xo\n-> a##xo\n   -> a##xo"
960:28-960:35::_ :: "a##xo\n-> b##xo"
961:5-961:8::vab :: "a##xo"
961:15-961:37::_ :: "a##xo"
961:18-961:27::_ :: "a##xo\n-> a##xo\n   -> a##xo"
961:28-961:35::_ :: "a##xo\n-> b##xo"
962:5-962:7::vc :: "a##xo"
962:15-962:22::_ :: "a##xo\n-> b##xo"
962:25-962:34::_ :: "a##xo\n-> a##xo\n   -> a##xo"
963:5-963:8::vbc :: "a##xo"
963:15-963:22::_ :: "a##xo\n-> b##xo"
963:25-963:34::_ :: "a##xo\n-> a##xo\n   -> a##xo"
967:1-967:12::Main.searchDigit :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(a##xo\n -> a##xo\n    -> GHC.Types.Bool)\n-> a##xo\n   -> (Main.Digit b##xo)\n      -> a##xo\n         -> (Main.Split (GHC.Base.Maybe (Main.Digit b##xo)) b##xo)"
967:15-967:17::vl :: "a##xo"
967:26-967:28::vr :: "a##xo"
967:31-967:72::vl :: "{VV : a##xo | VV == vl}"
967:40-967:72::lq_anf$##7205759403792837316 :: "(Main.Split (GHC.Base.Maybe (Main.Digit a##xo)) a##xo)"
967:49-967:62::lq_anf$##7205759403792837313 :: "{v : (GHC.Base.Maybe (Main.Digit a##xo)) | isJust v <=> false}"
969:5-969:6::_ :: "a##xo\n-> a##xo\n   -> GHC.Types.Bool"
969:19-969:32::lq_anf$##7205759403792837324 :: "{v : (GHC.Base.Maybe (Main.Digit a##xo)) | isJust v <=> false}"
970:19-970:39::lq_anf$##7205759403792837322 :: "{v : (GHC.Base.Maybe (Main.Digit a##xo)) | isJust v <=> true}"
972:5-972:7::va :: "a##xo"
972:15-972:37::_ :: "a##xo"
972:18-972:27::_ :: "a##xo\n-> a##xo\n   -> a##xo"
972:28-972:35::_ :: "a##xo\n-> b##xo"
973:5-973:7::vb :: "a##xo"
973:15-973:22::_ :: "a##xo\n-> b##xo"
973:25-973:34::_ :: "a##xo\n-> a##xo\n   -> a##xo"
975:5-975:6::_ :: "a##xo\n-> a##xo\n   -> GHC.Types.Bool"
975:19-975:32::lq_anf$##7205759403792837342 :: "{v : (GHC.Base.Maybe (Main.Digit a##xo)) | isJust v <=> false}"
975:42-975:47::_ :: "a##xo\n-> (Main.Digit a##xo)"
976:5-976:6::_ :: "a##xo\n-> a##xo\n   -> GHC.Types.Bool"
976:19-976:39::lq_anf$##7205759403792837339 :: "{v : (GHC.Base.Maybe (Main.Digit a##xo)) | isJust v <=> true}"
977:19-977:41::lq_anf$##7205759403792837336 :: "{v : (GHC.Base.Maybe (Main.Digit a##xo)) | isJust v <=> true}"
977:32-977:37::_ :: "a##xo\n-> (Main.Digit a##xo)"
979:5-979:7::va :: "a##xo"
979:15-979:37::_ :: "a##xo"
979:18-979:27::_ :: "a##xo\n-> a##xo\n   -> a##xo"
979:28-979:35::_ :: "a##xo\n-> b##xo"
980:5-980:8::vab :: "a##xo"
980:15-980:37::_ :: "a##xo"
980:18-980:27::_ :: "a##xo\n-> a##xo\n   -> a##xo"
980:28-980:35::_ :: "a##xo\n-> b##xo"
981:5-981:8::vbc :: "a##xo"
981:15-981:22::_ :: "a##xo\n-> b##xo"
981:25-981:34::_ :: "a##xo\n-> a##xo\n   -> a##xo"
982:5-982:7::vc :: "a##xo"
982:15-982:22::_ :: "a##xo\n-> b##xo"
982:25-982:34::_ :: "a##xo\n-> a##xo\n   -> a##xo"
984:5-984:6::_ :: "a##xo\n-> a##xo\n   -> GHC.Types.Bool"
984:19-984:32::lq_anf$##7205759403792837368 :: "{v : (GHC.Base.Maybe (Main.Digit a##xo)) | isJust v <=> false}"
984:42-984:49::_ :: "a##xo\n-> a##xo\n   -> (Main.Digit a##xo)"
985:5-985:6::_ :: "a##xo\n-> a##xo\n   -> GHC.Types.Bool"
985:19-985:39::lq_anf$##7205759403792837365 :: "{v : (GHC.Base.Maybe (Main.Digit a##xo)) | isJust v <=> true}"
985:49-985:54::_ :: "a##xo\n-> (Main.Digit a##xo)"
986:5-986:6::_ :: "a##xo\n-> a##xo\n   -> GHC.Types.Bool"
986:19-986:41::lq_anf$##7205759403792837361 :: "{v : (GHC.Base.Maybe (Main.Digit a##xo)) | isJust v <=> true}"
986:32-986:37::_ :: "a##xo\n-> (Main.Digit a##xo)"
987:19-987:45::lq_anf$##7205759403792837358 :: "{v : (GHC.Base.Maybe (Main.Digit a##xo)) | isJust v <=> true}"
987:32-987:39::_ :: "a##xo\n-> a##xo\n   -> (Main.Digit a##xo)"
989:5-989:7::va :: "a##xo"
989:15-989:37::_ :: "a##xo"
989:18-989:27::_ :: "a##xo\n-> a##xo\n   -> a##xo"
989:28-989:35::_ :: "a##xo\n-> b##xo"
990:5-990:8::vab :: "a##xo"
990:15-990:37::_ :: "a##xo"
990:18-990:27::_ :: "a##xo\n-> a##xo\n   -> a##xo"
990:28-990:35::_ :: "a##xo\n-> b##xo"
991:5-991:9::vabc :: "a##xo"
991:15-991:38::_ :: "a##xo"
991:19-991:28::_ :: "a##xo\n-> a##xo\n   -> a##xo"
991:29-991:36::_ :: "a##xo\n-> b##xo"
992:5-992:9::vbcd :: "a##xo"
992:15-992:22::_ :: "a##xo\n-> b##xo"
992:25-992:34::_ :: "a##xo\n-> a##xo\n   -> a##xo"
993:5-993:8::vcd :: "a##xo"
993:15-993:22::_ :: "a##xo\n-> b##xo"
993:25-993:34::_ :: "a##xo\n-> a##xo\n   -> a##xo"
994:5-994:7::vd :: "a##xo"
994:15-994:22::_ :: "a##xo\n-> b##xo"
994:25-994:34::_ :: "a##xo\n-> a##xo\n   -> a##xo"
1003:1-1003:6::Main.split :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(a##xo\n -> GHC.Types.Bool)\n-> (Main.FingerTree a##xo b##xo)\n   -> ((Main.FingerTree a##xo b##xo), (Main.FingerTree a##xo b##xo))"
1005:5-1005:6::_ :: "a##xo\n-> GHC.Types.Bool"
1005:8-1005:15::_ :: "(Main.FingerTree a##xo b##xo)\n-> a##xo"
1005:27-1005:33::lq_anf$##7205759403792838032 :: "(Main.FingerTree a##xo b##xo)"
1005:29-1005:31::_ :: "a##xo\n-> (Main.FingerTree b##xo a##xo)\n   -> (Main.FingerTree b##xo a##xo)"
1008:11-1008:12::l :: "(Main.FingerTree a##xo b##xo)"
1008:13-1008:14::x :: "a##xo"
1008:15-1008:16::r :: "(Main.FingerTree a##xo b##xo)"
1008:19-1008:28::_ :: "(a##xo\n -> GHC.Types.Bool)\n-> a##xo\n   -> (Main.FingerTree a##xo b##xo)\n      -> (Main.Split (Main.FingerTree a##xo b##xo) b##xo)"
1016:1-1016:10::Main.takeUntil :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(a##xo\n -> GHC.Types.Bool)\n-> (Main.FingerTree a##xo b##xo)\n   -> (Main.FingerTree a##xo b##xo)"
1016:11-1016:12::p :: "a##xo\n-> GHC.Types.Bool"
1016:17-1016:30::lq_anf$##7205759403792838040 :: "x1:((Main.FingerTree a##xo b##xo), (Main.FingerTree a##xo b##xo))\n-> {v : (Main.FingerTree a##xo b##xo) | v == fst x1}"
1016:23-1016:28::_ :: "(a##xo\n -> GHC.Types.Bool)\n-> (Main.FingerTree a##xo b##xo)\n   -> ((Main.FingerTree a##xo b##xo), (Main.FingerTree a##xo b##xo))"
1024:1-1024:10::Main.dropUntil :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(a##xo\n -> GHC.Types.Bool)\n-> (Main.FingerTree a##xo b##xo)\n   -> (Main.FingerTree a##xo b##xo)"
1024:11-1024:12::p :: "a##xo\n-> GHC.Types.Bool"
1024:17-1024:30::lq_anf$##7205759403792838042 :: "x1:((Main.FingerTree a##xo b##xo), (Main.FingerTree a##xo b##xo))\n-> {v : (Main.FingerTree a##xo b##xo) | v == snd x1}"
1024:23-1024:28::_ :: "(a##xo\n -> GHC.Types.Bool)\n-> (Main.FingerTree a##xo b##xo)\n   -> ((Main.FingerTree a##xo b##xo), (Main.FingerTree a##xo b##xo))"
1030:1-1030:10::Main.splitTree :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(a##xo\n -> GHC.Types.Bool)\n-> a##xo\n   -> (Main.FingerTree a##xo b##xo)\n      -> (Main.Split (Main.FingerTree a##xo b##xo) b##xo)"
1030:23-1030:51::lq_anf$##7205759403792838005 :: "[GHC.Types.Char]"
1031:28-1031:39::lq_anf$##7205759403792838006 :: "(Main.FingerTree a##xo b##xo)"
1033:5-1033:6::_ :: "a##xo\n-> GHC.Types.Bool"
1033:31-1033:32::l :: "(GHC.Base.Maybe (Main.Digit a##xo))"
1033:33-1033:34::x :: "a##xo"
1033:35-1033:36::r :: "(GHC.Base.Maybe (Main.Digit a##xo))"
1033:44-1033:54::_ :: "(a##xo\n -> GHC.Types.Bool)\n-> a##xo\n   -> (Main.Digit b##xo)\n      -> (Main.Split (GHC.Base.Maybe (Main.Digit b##xo)) b##xo)"
1034:25-1034:58::_ :: "a##xo\n-> (Main.FingerTree b##xo a##xo)\n   -> (Main.Split (Main.FingerTree b##xo a##xo) a##xo)"
1034:32-1034:43::lq_anf$##7205759403792838022 :: "(Main.FingerTree a##xo b##xo)"
1034:62-1034:67::_ :: "(GHC.Base.Maybe (Main.Digit a##xo))\n-> (Main.FingerTree b##xo (Main.Node b##xo a##xo))\n   -> (Main.Digit a##xo)\n      -> (Main.FingerTree b##xo a##xo)"
1035:5-1035:6::_ :: "a##xo\n-> GHC.Types.Bool"
1035:31-1035:33::ml :: "(Main.FingerTree a##xo (Main.Node a##xo b##xo))"
1035:34-1035:36::xs :: "(Main.Node a##xo b##xo)"
1035:37-1035:39::mr :: "(Main.FingerTree a##xo (Main.Node a##xo b##xo))"
1035:44-1035:53::Main.splitTree :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(a##xo\n -> GHC.Types.Bool)\n-> a##xo\n   -> (Main.FingerTree a##xo b##xo)\n      -> (Main.Split (Main.FingerTree a##xo b##xo) b##xo)"
1036:31-1036:32::l :: "(GHC.Base.Maybe (Main.Digit a##xo))"
1036:33-1036:34::x :: "a##xo"
1036:35-1036:36::r :: "(GHC.Base.Maybe (Main.Digit a##xo))"
1036:44-1036:53::_ :: "(a##xo\n -> GHC.Types.Bool)\n-> a##xo\n   -> (Main.Node a##xo b##xo)\n      -> (Main.Split (GHC.Base.Maybe (Main.Digit b##xo)) b##xo)"
1036:57-1036:81::lq_anf$##7205759403792838019 :: "a##xo"
1036:61-1036:70::_ :: "a##xo\n-> a##xo\n   -> a##xo"
1036:71-1036:78::_ :: "(Main.FingerTree a##xo (Main.Node a##xo b##xo))\n-> a##xo"
1037:25-1037:47::_ :: "a##xo\n-> (Main.FingerTree b##xo a##xo)\n   -> (Main.Split (Main.FingerTree b##xo a##xo) a##xo)"
1037:32-1037:37::_ :: "(Main.Digit a##xo)\n-> (Main.FingerTree b##xo (Main.Node b##xo a##xo))\n   -> (GHC.Base.Maybe (Main.Digit a##xo))\n      -> (Main.FingerTree b##xo a##xo)"
1037:51-1037:56::_ :: "(GHC.Base.Maybe (Main.Digit a##xo))\n-> (Main.FingerTree b##xo (Main.Node b##xo a##xo))\n   -> (Main.Digit a##xo)\n      -> (Main.FingerTree b##xo a##xo)"
1038:31-1038:32::l :: "(GHC.Base.Maybe (Main.Digit a##xo))"
1038:33-1038:34::x :: "a##xo"
1038:35-1038:36::r :: "(GHC.Base.Maybe (Main.Digit a##xo))"
1038:44-1038:54::_ :: "(a##xo\n -> GHC.Types.Bool)\n-> a##xo\n   -> (Main.Digit b##xo)\n      -> (Main.Split (GHC.Base.Maybe (Main.Digit b##xo)) b##xo)"
1039:25-1039:47::_ :: "a##xo\n-> (Main.FingerTree b##xo a##xo)\n   -> (Main.Split (Main.FingerTree b##xo a##xo) a##xo)"
1039:32-1039:37::_ :: "(Main.Digit a##xo)\n-> (Main.FingerTree b##xo (Main.Node b##xo a##xo))\n   -> (GHC.Base.Maybe (Main.Digit a##xo))\n      -> (Main.FingerTree b##xo a##xo)"
1039:51-1039:62::lq_anf$##7205759403792838015 :: "(Main.FingerTree a##xo b##xo)"
1041:5-1041:8::vpr :: "a##xo"
1041:16-1041:42::_ :: "a##xo"
1041:21-1041:30::_ :: "a##xo\n-> a##xo\n   -> a##xo"
1041:32-1041:39::_ :: "(Main.Digit a##xo)\n-> b##xo"
1042:5-1042:7::vm :: "a##xo"
1042:16-1042:41::_ :: "a##xo"
1042:21-1042:30::_ :: "a##xo\n-> a##xo\n   -> a##xo"
1042:32-1042:39::_ :: "(Main.FingerTree a##xo (Main.Node a##xo b##xo))\n-> a##xo"
1046:1-1046:6::Main.deepL :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(GHC.Base.Maybe (Main.Digit b##xo))\n-> (Main.FingerTree a##xo (Main.Node a##xo b##xo))\n   -> (Main.Digit b##xo)\n      -> (Main.FingerTree a##xo b##xo)"
1046:15-1046:16::m :: "(Main.FingerTree a##xo (Main.Node a##xo b##xo))"
1046:17-1046:19::sf :: "(Main.Digit a##xo)"
1046:29-1046:33::_ :: "(Main.FingerTree a##xo (Main.Node a##xo b##xo))\n-> (Main.Digit b##xo)\n   -> (Main.FingerTree a##xo b##xo)"
1047:29-1047:33::_ :: "(Main.Digit a##xo)\n-> (Main.FingerTree b##xo (Main.Node b##xo a##xo))\n   -> (Main.Digit a##xo)\n      -> (Main.FingerTree b##xo a##xo)"
1051:1-1051:6::Main.deepR :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(Main.Digit b##xo)\n-> (Main.FingerTree a##xo (Main.Node a##xo b##xo))\n   -> (GHC.Base.Maybe (Main.Digit b##xo))\n      -> (Main.FingerTree a##xo b##xo)"
1051:7-1051:9::pr :: "(Main.Digit a##xo)"
1051:10-1051:11::m :: "(Main.FingerTree a##xo (Main.Node a##xo b##xo))"
1051:29-1051:33::_ :: "(Main.Digit a##xo)\n-> (Main.FingerTree b##xo (Main.Node b##xo a##xo))\n   -> (Main.FingerTree b##xo a##xo)"
1052:29-1052:33::_ :: "(Main.Digit a##xo)\n-> (Main.FingerTree b##xo (Main.Node b##xo a##xo))\n   -> (Main.Digit a##xo)\n      -> (Main.FingerTree b##xo a##xo)"
1056:1-1056:10::Main.splitNode :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(a##xo\n -> GHC.Types.Bool)\n-> a##xo\n   -> (Main.Node a##xo b##xo)\n      -> (Main.Split (GHC.Base.Maybe (Main.Digit b##xo)) b##xo)"
1056:11-1056:12::p :: "a##xo\n-> GHC.Types.Bool"
1056:13-1056:14::i :: "a##xo"
1057:5-1057:6::_ :: "{v : a##xo\n     -> GHC.Types.Bool | v == p}"
1057:19-1057:32::lq_anf$##7205759403792837378 :: "{v : (GHC.Base.Maybe (Main.Digit a##xo)) | isJust v <=> false}"
1058:19-1058:39::lq_anf$##7205759403792837376 :: "{v : (GHC.Base.Maybe (Main.Digit a##xo)) | isJust v <=> true}"
1060:5-1060:7::va :: "a##xo"
1060:15-1060:36::_ :: "a##xo"
1060:17-1060:26::_ :: "a##xo\n-> a##xo\n   -> a##xo"
1060:27-1060:34::_ :: "a##xo\n-> b##xo"
1062:5-1062:6::_ :: "{v : a##xo\n     -> GHC.Types.Bool | v == p}"
1062:19-1062:32::lq_anf$##7205759403792837394 :: "{v : (GHC.Base.Maybe (Main.Digit a##xo)) | isJust v <=> false}"
1062:42-1062:47::_ :: "a##xo\n-> (Main.Digit a##xo)"
1063:5-1063:6::_ :: "{v : a##xo\n     -> GHC.Types.Bool | v == p}"
1063:19-1063:39::lq_anf$##7205759403792837391 :: "{v : (GHC.Base.Maybe (Main.Digit a##xo)) | isJust v <=> true}"
1064:19-1064:41::lq_anf$##7205759403792837388 :: "{v : (GHC.Base.Maybe (Main.Digit a##xo)) | isJust v <=> true}"
1064:32-1064:37::_ :: "a##xo\n-> (Main.Digit a##xo)"
1066:5-1066:7::va :: "a##xo"
1066:15-1066:36::_ :: "a##xo"
1066:17-1066:26::_ :: "a##xo\n-> a##xo\n   -> a##xo"
1066:27-1066:34::_ :: "a##xo\n-> b##xo"
1067:5-1067:8::vab :: "a##xo"
1067:15-1067:37::_ :: "a##xo"
1067:18-1067:27::_ :: "a##xo\n-> a##xo\n   -> a##xo"
1067:28-1067:35::_ :: "a##xo\n-> b##xo"
1071:1-1071:11::Main.splitDigit :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(a##xo\n -> GHC.Types.Bool)\n-> a##xo\n   -> (Main.Digit b##xo)\n      -> (Main.Split (GHC.Base.Maybe (Main.Digit b##xo)) b##xo)"
1071:14-1071:15::i :: "a##xo"
1071:26-1071:57::i :: "{VV : a##xo | VV == i}"
1071:34-1071:47::lq_anf$##7205759403792837398 :: "{v : (GHC.Base.Maybe (Main.Digit a##xo)) | isJust v <=> false}"
1073:5-1073:6::_ :: "a##xo\n-> GHC.Types.Bool"
1073:19-1073:32::lq_anf$##7205759403792837407 :: "{v : (GHC.Base.Maybe (Main.Digit a##xo)) | isJust v <=> false}"
1074:19-1074:39::lq_anf$##7205759403792837405 :: "{v : (GHC.Base.Maybe (Main.Digit a##xo)) | isJust v <=> true}"
1076:5-1076:7::va :: "a##xo"
1076:15-1076:36::_ :: "a##xo"
1076:17-1076:26::_ :: "a##xo\n-> a##xo\n   -> a##xo"
1076:27-1076:34::_ :: "a##xo\n-> b##xo"
1078:5-1078:6::_ :: "a##xo\n-> GHC.Types.Bool"
1078:19-1078:32::lq_anf$##7205759403792837423 :: "{v : (GHC.Base.Maybe (Main.Digit a##xo)) | isJust v <=> false}"
1078:42-1078:47::_ :: "a##xo\n-> (Main.Digit a##xo)"
1079:5-1079:6::_ :: "a##xo\n-> GHC.Types.Bool"
1079:19-1079:39::lq_anf$##7205759403792837420 :: "{v : (GHC.Base.Maybe (Main.Digit a##xo)) | isJust v <=> true}"
1080:19-1080:41::lq_anf$##7205759403792837417 :: "{v : (GHC.Base.Maybe (Main.Digit a##xo)) | isJust v <=> true}"
1080:32-1080:37::_ :: "a##xo\n-> (Main.Digit a##xo)"
1082:5-1082:7::va :: "a##xo"
1082:15-1082:36::_ :: "a##xo"
1082:17-1082:26::_ :: "a##xo\n-> a##xo\n   -> a##xo"
1082:27-1082:34::_ :: "a##xo\n-> b##xo"
1083:5-1083:8::vab :: "a##xo"
1083:15-1083:37::_ :: "a##xo"
1083:18-1083:27::_ :: "a##xo\n-> a##xo\n   -> a##xo"
1083:28-1083:35::_ :: "a##xo\n-> b##xo"
1085:5-1085:6::_ :: "a##xo\n-> GHC.Types.Bool"
1085:19-1085:32::lq_anf$##7205759403792837446 :: "{v : (GHC.Base.Maybe (Main.Digit a##xo)) | isJust v <=> false}"
1085:42-1085:49::_ :: "a##xo\n-> a##xo\n   -> (Main.Digit a##xo)"
1086:5-1086:6::_ :: "a##xo\n-> GHC.Types.Bool"
1086:19-1086:39::lq_anf$##7205759403792837443 :: "{v : (GHC.Base.Maybe (Main.Digit a##xo)) | isJust v <=> true}"
1086:49-1086:54::_ :: "a##xo\n-> (Main.Digit a##xo)"
1087:5-1087:6::_ :: "a##xo\n-> GHC.Types.Bool"
1087:19-1087:41::lq_anf$##7205759403792837439 :: "{v : (GHC.Base.Maybe (Main.Digit a##xo)) | isJust v <=> true}"
1087:32-1087:37::_ :: "a##xo\n-> (Main.Digit a##xo)"
1088:19-1088:45::lq_anf$##7205759403792837436 :: "{v : (GHC.Base.Maybe (Main.Digit a##xo)) | isJust v <=> true}"
1088:32-1088:39::_ :: "a##xo\n-> a##xo\n   -> (Main.Digit a##xo)"
1090:5-1090:7::va :: "a##xo"
1090:15-1090:36::_ :: "a##xo"
1090:17-1090:26::_ :: "a##xo\n-> a##xo\n   -> a##xo"
1090:27-1090:34::_ :: "a##xo\n-> b##xo"
1091:5-1091:8::vab :: "a##xo"
1091:15-1091:37::_ :: "a##xo"
1091:18-1091:27::_ :: "a##xo\n-> a##xo\n   -> a##xo"
1091:28-1091:35::_ :: "a##xo\n-> b##xo"
1092:5-1092:9::vabc :: "a##xo"
1092:15-1092:38::_ :: "a##xo"
1092:19-1092:28::_ :: "a##xo\n-> a##xo\n   -> a##xo"
1092:29-1092:36::_ :: "a##xo\n-> b##xo"
1100:1-1100:8::Main.reverse :: "forall a##xo b##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(Main.FingerTree a##xo b##xo)\n-> (Main.FingerTree a##xo b##xo)"
1100:11-1100:22::_ :: "(a##xo\n -> a##xo)\n-> (Main.FingerTree b##xo a##xo)\n   -> (Main.FingerTree b##xo a##xo)"
1103:1-1103:12::Main.reverseTree :: "forall a##xo b##xo c##xo d##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(c##xo\n -> b##xo)\n-> (Main.FingerTree d##xo c##xo)\n   -> (Main.FingerTree a##xo b##xo)"
1104:36-1104:37::_ :: "a##xo\n-> b##xo"
1106:5-1106:9::_ :: "(Main.Digit a##xo)\n-> (Main.FingerTree b##xo (Main.Node b##xo a##xo))\n   -> (Main.Digit a##xo)\n      -> (Main.FingerTree b##xo a##xo)"
1106:11-1106:25::_ :: "(Main.Digit a##xo)\n-> (Main.Digit b##xo)"
1106:31-1106:42::Main.reverseTree :: "forall a##xo b##xo c##xo d##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(c##xo\n -> b##xo)\n-> (Main.FingerTree d##xo c##xo)\n   -> (Main.FingerTree a##xo b##xo)"
1106:44-1106:55::_ :: "(a##xo\n -> b##xo)\n-> (Main.Node c##xo a##xo)\n   -> (Main.Node d##xo b##xo)"
1106:63-1106:77::_ :: "(Main.Digit a##xo)\n-> (Main.Digit b##xo)"
1109:1-1109:12::Main.reverseNode :: "forall a##xo b##xo c##xo d##xo .\n(Main.Measured<[]> a##xo b##xo) =>\n(c##xo\n -> b##xo)\n-> (Main.Node d##xo c##xo)\n   -> (Main.Node a##xo b##xo)"
1109:13-1109:14::f :: "a##xo\n-> b##xo"
1109:31-1109:36::_ :: "a##xo\n-> a##xo\n   -> (Main.Node b##xo a##xo)"
1109:38-1109:39::_ :: "{v : a##xo\n     -> b##xo | v == f}"
1109:44-1109:45::_ :: "{v : a##xo\n     -> b##xo | v == f}"
1110:33-1110:38::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Node b##xo a##xo)"
1110:40-1110:41::_ :: "{v : a##xo\n     -> b##xo | v == f}"
1110:46-1110:47::_ :: "{v : a##xo\n     -> b##xo | v == f}"
1110:52-1110:53::_ :: "{v : a##xo\n     -> b##xo | v == f}"
1113:1-1113:13::Main.reverseDigit :: "forall a##xo b##xo .\n(a##xo\n -> b##xo)\n-> (Main.Digit a##xo)\n   -> (Main.Digit b##xo)"
1113:14-1113:15::f :: "a##xo\n-> b##xo"
1113:31-1113:32::_ :: "{v : a##xo\n     -> b##xo | v == f}"
1114:28-1114:37::_ :: "a##xo\n-> (Main.Digit a##xo)"
1114:33-1114:34::_ :: "{v : a##xo\n     -> b##xo | v == f}"
1114:39-1114:40::_ :: "{v : a##xo\n     -> b##xo | v == f}"
1115:32-1115:43::_ :: "a##xo\n-> a##xo\n   -> (Main.Digit a##xo)"
1115:39-1115:40::_ :: "{v : a##xo\n     -> b##xo | v == f}"
1115:45-1115:46::_ :: "{v : a##xo\n     -> b##xo | v == f}"
1115:51-1115:52::_ :: "{v : a##xo\n     -> b##xo | v == f}"
1116:33-1116:43::_ :: "a##xo\n-> a##xo\n   -> a##xo\n      -> (Main.Digit a##xo)"
1116:39-1116:40::_ :: "{v : a##xo\n     -> b##xo | v == f}"
1116:45-1116:46::_ :: "{v : a##xo\n     -> b##xo | v == f}"
1116:51-1116:52::_ :: "{v : a##xo\n     -> b##xo | v == f}"
1116:57-1116:58::_ :: "{v : a##xo\n     -> b##xo | v == f}"
1119:1-1119:17::Main.illegal_argument :: "forall a##xo .\n[GHC.Types.Char]\n-> a##xo"
1119:18-1119:22::name :: "[GHC.Types.Char]"
1120:5-1120:71::lq_anf$##7205759403792837484 :: "[GHC.Types.Char]\n-> a##xo"
1120:13-1120:71::lq_anf$##7205759403792837490 :: "[GHC.Types.Char]"
1120:32-1120:71::lq_anf$##7205759403792837489 :: "[GHC.Types.Char]"
1154:1-1154:5:::Main.main :: "(GHC.Types.IO ())"
1154:8-1154:13::_ :: "[GHC.Types.Char]\n-> (GHC.Types.IO ())"