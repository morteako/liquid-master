1:1-1:1::ProofComb.$trModule :: "GHC.Types.Module"
46:1-46:8::ProofComb.toProof :: "forall a##xo .\na##xo\n-> ()"
55:1-55:8::ProofComb.trivial :: "()"
59:1-59:12::ProofComb.unreachable :: "()"
71:3-71:6::ProofComb.*** :: "forall a##xo .\na##xo\n-> x2:ProofComb.QED\n   -> {VV : () | (isAdmit x2 => false)\n                 && (not (isAdmit x2) => true)}"
100:3-100:6::ProofComb.=== :: "forall a##xo .\nx1:a##xo\n-> x2:{VV : a##xo | VV == x1}\n   -> {VV : a##xo | VV == x1\n                    && VV == x2}"
100:7-100:8::y :: "a##xo"
105:3-105:6::ProofComb.=<= :: "forall a##xo .\nx1:a##xo\n-> x2:{VV : a##xo | x1 <= VV}\n   -> {VV : a##xo | VV == x2}"
105:7-105:8::y :: "a##xo"
110:3-110:6::ProofComb.=>= :: "forall a##xo .\nx1:a##xo\n-> x2:{VV : a##xo | x1 >= VV}\n   -> {VV : a##xo | VV == x2}"
110:7-110:8::y :: "a##xo"
121:1-121:2::x :: "{VV : a##xo | papp1 pa VV}"
121:3-121:4::ProofComb.? :: "forall a##xo b##xo <pa :: a##xo -> Bool, pb :: b##xo -> Bool> .\n{VV : a##xo<pa> | true}\n-> {VV : b##xo<pb> | true}\n   -> {VV : a##xo<pa> | true}"
133:1-133:6::ProofComb.==! :: "forall a##xo .\nx1:a##xo\n-> x2:a##xo\n   -> {VV : a##xo | VV == x1\n                    && VV == x2}"
133:9-133:10::y :: "a##xo"
157:3-157:6::ProofComb.==. :: "forall a##xo .\na##xo\n-> a##xo\n   -> a##xo"
157:7-157:8::x :: "a##xo"
164:1-164:2::x :: "()"
164:3-164:6::ProofComb.&&& :: "()\n-> ()\n   -> ()"
169:1-169:10::ProofComb.withProof :: "forall a##xo b##xo .\nx1:a##xo\n-> b##xo\n   -> {VV : a##xo | VV == x1}"
169:11-169:12::x :: "a##xo"
173:1-173:11::ProofComb.impossible :: "forall a##xo b##xo .\n{VV : a##xo | false}\n-> b##xo"
173:16-173:25::$dIP_a2gg :: "{v : (GHC.Classes.IP [GHC.Types.Char] GHC.Stack.Types.CallStack) | v == $dIP_a2gg}"