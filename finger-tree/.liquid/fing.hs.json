{"status":"error","types":{},"sptypes":[],"errors":[{"start":{"line":510,"column":5},"stop":{"line":510,"column":14},"message":"Error: GHC Error\n    \n        Ambiguous type variable `a0' arising from a use of `print'\nprevents the constraint `(Show a0)' from being solved.\nProbable fix: use a type annotation to specify what `a0' should be.\nThese potential instances exist:\n  instance (Ix a, Show a, Show b) => Show (Array a b)\n    -- Defined in `GHC.Arr'\n  instance Show a => Show (NonEmpty a) -- Defined in `GHC.Show'\n  instance Show a => Show (Ratio a) -- Defined in `GHC.Real'\n  ...plus 47 others\n  (use -fprint-potential-instances to see them all)"},{"start":{"line":510,"column":11},"stop":{"line":510,"column":14},"message":"Error: GHC Error\n    \n        Ambiguous type variables `v0', `a0' arising from a use of `ft1'\nprevents the constraint `(Measured v0 a0)' from being solved.\nProbable fix: use a type annotation to specify what `v0',\n                                                    `a0' should be.\nThese potential instances exist:\n  instance Measured v a => Measured v (Digit a)\n    -- Defined at C:\\Users\\MortenAske\\Dropbox\\master\\finger-tree\\fing.hs:72:10\n  instance Measured v a => Measured v (FingerTree v a)\n    -- Defined at C:\\Users\\MortenAske\\Dropbox\\master\\finger-tree\\fing.hs:147:10\n  instance Monoid v => Measured v (Node v a)\n    -- Defined at C:\\Users\\MortenAske\\Dropbox\\master\\finger-tree\\fing.hs:96:10"},{"start":{"line":505,"column":7},"stop":{"line":505,"column":34},"message":"Error: GHC Error\n    \n        Couldn't match type `a' with `Int'\n`a' is a rigid type variable bound by\n  the type signature for:\n    ft1 :: forall v a. Measured v a => FingerTree v a\n  at C:\\Users\\MortenAske\\Dropbox\\master\\finger-tree\\fing.hs:504:1-37\nExpected type: FingerTree v a\n  Actual type: FingerTree v Int"}]}